% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-pkgmanager --- a package to shorten preambles
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a phd for defining a class.
%</readme>
%<*readmemd>
###The `phd` LaTeX2e package

The `phd` latex package and the class with the same name provide
convenient methods to create new styles for books, reports
and articles. It also loads the most commonly used packages 
and resolves conflicts.

This work consists of the file  `phd.dtx`,
and the derived files   `phd.ins`,  `phd.pdf`, and `phd.sty`.

###Installation

run
          phd-lua.bat on windows
           pdflatex phd.dtx
           makeindex -s gind.ist -g phd 

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

### Documentation

The package was written using the `doc` and `docscript` packages,
so that it is self documented in a literary programming style. 
The .pdf is a fat document, providing over fifty book styles (the
equivalent of classes) plus there is a lot of write-up on the inner
workings of TeX and LaTeX2e. However, you don't need to know much
to use it.

      \usepackage{phd}
      \input{style13}

All choices, are made via an extended key-value interface. 
Although not a compliment, it resembles CSS and the keys are a bit verbose but
attributes are easy to change and have a consistent and easy to remember interface.

To set or add a key we only use one command:

      \cxset{chapter name font-size = Huge,
             chapter number font-size = HUGE} 

### Future Development

This is still an experimental version, but I will retain the
interface in future releases. There is a large amount of
work still to be carried out to improve the template styles
provided, to test it more thoroughly and to add a number of
improvements in the special designs. At present I estimate
that I have completed about 70% of the work that needs
to be done.

__The package as it stands is not production stable.__ 


%</readmemd>
%
%<*TODO>
1. On final round add pkg options. This was left as last in order not to solve problems by adding
    options. Too many options are not a good User Interface.
2.  Finish symbol management, both text and math. Math already 80% incorporated.
3.  Better integration of indexing commands.   
4.  Revisit layout manager for Chapters. Broke again in tests.
5.  Docs. Add all references.
6.  Incorporate phd class for more flexibility.
7.  Improve package manager.
8.  Group script loading for better font management.
9.  General font management to relook it again.
10. Add all style sections (about 100 already prepared). Once they
     are all working issue beta version.
%</TODO>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- A package to beautify documents.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble

%\BaseDirectory{C:/users/admin/my documents/github/phd}
%\usedir{MWE}
\generate{\file{\jobname.sty}{
  \from{\jobname.dtx}{package}}
  }
%\nopreamble\nopostamble
%</install>
%<install>\endbatchfile
%<*internal>
%\usedir{tex/latex/phd}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble

\generate{
	\file{README-frontmatter.txt}{\from{\jobname.dtx}{readme}}
  }

\generate{
  \file{frontmatter.md}{\from{\jobname.dtx}{readmemd}}
}
\generate{
  \file{todo-frontmatter.tex}{\from{\jobname.dtx}{TODO}}
}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>

%\listfiles
%gdef\@onlypreamble{} % TO BE REMOVED NEEDED FOR TUTS
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\documentclass[book,oneside,12pt,a4paper,microtype=on]{phddoc}
\usepackage[bottom=2cm]{geometry}
\savegeometry{std}
% \usepackage[style=mla]{biblatex}
\usepackage{phd-lowersections}
\usepackage{phd-lists}
\usepackage{phd-frontmatter}
\usepackage{makeidx}
\usepackage{phd-lists}
\usepackage{phd-toc}
\sethyperref
\cxset{palette unorange}
\makeindex

\input{defaults-chapters}  
%\definecolor{bgsexy}{HTML}{FF6927}
%
%\definecolor{creamy}{HTML}{FDEBD7}
\cxset{chapter title color= creamy,
       chapter label color = creamy,
       chapter number color = creamy,
       chapter number font-size = Huge,
       subsection title color = creamy,
       chapter name = CHAPTER,
       chapter label case = upper,
       chapter number align=left,
       part format = traditional,
       part background-color=spot,
       part beforeskip                = -3cm,
       part afterskip                 = 30pt,
       subsection afterindent = false,
       }
       \setcounter{secnumdepth}{3}
\AtBeginDocument{\addtocontents{toc}{\protect\hypersetup{hidelinks}}}
\AtBeginDocument{\addtocontents{lof}{\protect\hypersetup{hidelinks}}}
\AtBeginDocument{\addtocontents{lot}{\protect\hypersetup{hidelinks}}}
\cxset{frontmatter numbering=roman}       
\begin{document}
\DEBUGOFF
% Use a full page image
\cxset{doc title=Front Matter Design,
       % try also feast-of-bacchus
       % try also sebastian
       % try also background.pdf
       coverpage image = background}
\coverpagefullpage
\cxset{second page texti={The Portrait of Sebastián de Morra is a portrait by Diego Velázquez of Sebastián de Morra, a court dwarf and jester at the court of Philip IV of Spain. It was painted in around 1645 and is now in the Prado in Madrid.

Velázquez portrays his whole body, sitting on the ground, wearing a rich cloak and with his short legs pointing forward in an inelegant position reminiscent of a marionette. He looks directly at the viewer, motionless, making no hand gestures, leading one critic to suggest that the painting represents a denunciation of the court's treatment of de Morra and other dwarfs. While Velázquez's naturalistic and charitable depictions of the invalids and dwarfs maintained by the court strongly suggests he, as court painter, felt some empathy with their situation, the painter's opinions are not known in any documented fashion.}}
\secondpage


\cxset{second page texti={The image shows a photo of Nina Leen (1958), named \enquote{Race Track Fashions.} 
Nina Leen was one of the first woman photographers for LIFE Magazine and was known for her photos of animals, adolescents and American women. Image copyright \copyright Times Inc.}}
\coverpage[Yiannis Lazarides]{nina-leen}{Book Design Monographs}{Camel Press}{FRONT MATTER}{DESIGN} 
\pagestyle{empty}
%\coverpage{habtoor-city}{Delay Claim}{HLS-DSE/JV}{HABTOOR CITY}{MEP CLAIM} 
\secondpage
\clearpage
\pagestyle{plain}
\frontmatter
%\etocmulticolstyle[2]{{\centering \huge \bfseries Table of Contents}}
\tableofcontents

\input{./sections/dedication}

\parskip0pt plus.1ex minus.1ex

\mainmatter
\setcounter{page}{1}
\pagestyle{headings}        
\input{./sections/tikz}
\DocInput{\jobname.dtx}
\backmatter
\printindex
\end{document}
%</driver>
% \fi
% 
%  \CheckSum{0}
%  \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% 
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
%
%
% 
% ^^A\maketitle
% 
% ^^A\frontmatter
%  ^^A\coverpage{./images/hine02.jpg}{Book Design }{Camel Press}{}{}
%  \newpage
% ^^A\secondpage
% \pagestyle{empty}
%
%
% 
%
%
% \pagestyle{headings}
% \raggedbottom
%  \OnlyDescription
%
%  ^^A\StopEventually{\printindex}

% \CodelineNumbered
% \pagestyle{headings}
% 
% 
% ^^A\part{IMPLEMENTATION AND FRIENDS}
% 
% \def\storyi{In this chapter we try and outline the objectives of the package. A lot of effort has been
%              exerted in simplifying the user interface by only defining key value interfaces. Commands and styles can be adjusted without using macros. The package provides a number of pre-defined cover pages, second pages and a method to avoid writing code at the beginning of the document.}
% \chapter{Frontmatter Package Code Implementation Objectives and Strategy}
% 
% \epigraph{
% I was reflecting on the convoluted Java frameworks widely adopted at work. Those hefty frameworks brought coding structures and conventions to large engineering teams; meanwhile, they also sucked the fun of programming like a Pastafarian monster slurping all the tomato sauce on a plate of spaghetti.
%}{\href{http://blog.zmxv.com/2015/07/code-golf-at-google.html}{Zhen Wang}}
%
% \begin{chapterabstract}
%  This chapter describes the implementation part of the code. It has been typeset using the |doc/dtx|. It is about 85\% complete. I am revising it, in tandem with the general ideas described in the \pkg{phd}.
% \end{chapterabstract}
%
% \section{Objectives}
%
% We start by outlining what we are trying to achieve with this package:
%
% \begin{enumerate}
% \item To provide a declarative interface to enable users to change the style
%       of frontmatter, mainmatter and backmatter headings and numbering.
% \item The interface must be able to manupulate properties of headings down to
%       the last detail.
% \item To provide a compatibility mode, where documents wishing to test the package
% can have an easy switch to switch in and out. This is also important for the testing of the package.
% \item To provide a number of templates that cover most of the typical use case.
% \item To provide means for a plug-in architecture for extensions.

% \end{enumerate}
% 
% \section{Terminology}
%
%  \begin{description}
%  \item [document] Any written item, as a book, article, or letter, especially 
%                  of a factual or informative nature.
%  \item [heading] A division of a document or document series. For a normal
%        book headings are chapters, sections etc. However we allow for
%        specifying a more complex document divided into books, volumes
%        parts etc. For example the Bible has Books, chapters and verses,
%        where a legal document might require divisions such as clauses.
%        In general these divisions are numbered. These document divisions
%        are stored in the comma list |phd_book_divisions_clist|.
%  \item [head] A typeset heading, such as chapter head, or section head.
%        This can include a counter, label and title for example, 
%        \emph{Chapter 1 Introduction}.
%  \item [dom] This is a programming interface that provides a structured
%        representation of the document (a tree) and it defines a way
%        that the structure can be accessed. Although \latexe does not
%        offer a standard way to build such a tree (mainly because
%        \tex does not require the marking of paragraphs, it is 
%        useful to think of the document as a tree structure. We also
%        allow for a semi-automated way to build such a tree (with the 
%        exception that paragraphs are not included).
% \item [element] A part of the document tree that can be styled on
%       its own. For example the chapter label, or the section number.
%
% \end{description}
%
% \section{Users}
%  We classify users according to the \LaTeX3 terminology as a) programmers b) template designers
%  and c) authors.
% \subsection{Author}
%  We assume that the author has an exising template which she is using but might want to do
%  some minor modifications, for example use an italic shape for the font of the mark, but an 
%  upright font for the page numbers. 
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{|
%~~~~~~~~\textit{chapter number color}~~|format          = apa,|
%~~~~~~~~\textit{section title font-size} |font-size   = Large,|
%~~~~~|}|
%}  
%
% We follow the idea of representing the basic elements of documents
% as elements, each one having a parent in order to specify
% the element we need to style as accurate as possible. One can think of
% this approach being congruent with objects in other languages.
% As a matter fact nothing stops us from defining a key value
% interface as shown below.
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{| 
%~~~~~~~~\textit{header.even.mark.font.size}   = |Large,|
%~~~~~~~~\textit{header.even.mark.font.family} = |serif,|
%~~~~~|}|
%}  
%
% This would pehaps make it easier for the template designer, but I have rejected
% the idea as my aim is to make it easy for the author, who can search the template
% and just enter a couple of new proerty values.
%
% \subsection{Template designer}
% \pagestyle{headings}
% The template designer in the example above would have selected the format style
% from a number of predefined formats (templates) or would have created a style
% called \textit{apa} from an existing template and modified it using declarative
% key style.
%
% \subsection{The programmer}
%
% The programmer in the example above could have created the basic format
% \textit{apa} by using both declarative as well as defining or using existing
% macros. To the programmer we offer an extension mechanism, where the contents
% of a |ps@| command are defined. For example the programmer can define a new
% style using \tikzname, but without having to worry about defining full |ps@|
% and their interface.
%
% \section{Preliminaries}
%
%  Standard file identification. We first announce the package 
%	 and require that it be used with \LaTeX2e. 
% \iffalse
%<*package>
% \fi
%  
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\ProvidesPackage{phd-frontmatter}[2015/7/13 v1.0 frontmatter management (YL)]%
%    \end{macrocode}
%
% 
% \section{Source2e Interface}
% 
% I am not very fond of mixing expl3 control sequences with source2e commands. Here
% we provide an interface for all these commands we might use. 
% This section can be revisited once expl3 code becomes available.
%
%    \begin{macrocode}
\ExplSyntaxOn
\let\ltxtoday\today
\let\phd_hang_from:nn \@hangfrom
\newif\if@ltxcompat \@ltxcompatfalse
\ExplSyntaxOff
%    \end{macrocode}
% \section{Front matter and backmatter}
%
% These are both provided by the classes but we intent to parameterize them
% so we redefine them.
%
% \subsection{Mainmatter and frontmatter options}
%
% The page numbering options are set by using the source2e defined \docAuxCommand{pagenumbering}.
% 
%    \begin{macrocode}
\ExplSyntaxOn
\newif\if@mainmatter \@mainmattertrue
\cxset{
  frontmatter~numbering/.is~choice,
  frontmatter~numbering/arabic/.code  = \cs_set:Npn \setfrontpagenumbering
                                         {
                                           \pagenumbering{arabic}
                                         },
  frontmatter~numbering/roman/.code   = \cs_set:Npn \setfrontpagenumbering
                                   	     { 
                                           \pagenumbering{roman}
                                         },
  frontmatter~numbering/Roman/.code   = \cs_set:Npn \setfrontpagenumbering 
                                   	     {
                                   	       \pagenumbering{Roman}
                                   	     },
  mainmatter~numbering/.is~choice,
  mainmatter~numbering/arabic/.code  = \cs_set:Npn \setpagenumbering
                                         {
                                           \pagenumbering{arabic}
                                         },
  mainmatter~numbering/roman/.code   = \cs_set:Npn \setpagenumbering
                                   	     { 
                                           \pagenumbering{roman}
                                         },
  mainmatter~numbering/Roman/.code   = \cs_set:Npn \setpagenumbering 
                                   	     {
                                   	       \pagenumbering{Roman}
                                   	     },
                                     	     
  }
\ExplSyntaxOff	
%    \end{macrocode}
% We set the defaults to those of the standard classes.
%    \begin{macrocode}
\cxset{mainmatter numbering = arabic,
       frontmatter numbering = roman}     
%  
%    \end{macrocode}
%
% \begin{docCommand}{frontmatter} {\meta{void}}
%  Handles all the preliminary settings for the frontmatter of a book. It
%  sets \cs{\@mainmatter} to false and handles page openings.   
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_gset:Npn \frontmatter 
  {
    %\cleardoublepage
    \@mainmatterfalse
    \setfrontpagenumbering%
  }
%    \end{macrocode}
% \begin{docCommand}{mainmatter} {\meta{void}}
% Handles all the preliminaries for the main matter of a document.    
% \end{docCommand}
%    \begin{macrocode}
\cs_gset:Npn \mainmatter
  {
    \if@openright\cleardoublepage\else\clearpage\fi
      \@mainmattertrue
     \setpagenumbering
  }
%    \end{macrocode}
% \begin{docCommand}{backmatter}{\meta{void}}
% Analogous to front and mainmatter.
% \end{docCommand}
%    \begin{macrocode}       
\cs_gset:Npn \backmatter
  {
    \if@openright
      \cleardoublepage
    \else
      \clearpage
    \fi
    \@mainmatterfalse
  }
\ExplSyntaxOff      
%    \end{macrocode}      
% 


% \section{Titles, authors, abstracts and the like}
%
% 	We want to have the option to make titles both as normally used in the |book| class
%	but also as used in articles i.e., not to emit a new page after it is invoked.
%	The definition is straight from the article class.
% {@maketitle}
%    This macro takes care of formatting the title information when we
%    have no separate title page.
%
%    We always start a new page, leave some white space and center the
%    information. The title is set in a |\LARGE| font, the author
%    names and the date in a |\large| font. CHECK THIS IF HERE
%    \begin{macrocode}
\def\@maketitle{%
  %\newpage
  \null
  \vskip 2em%
  \begin{center}%
  \let \footnote \thanks
    {\LARGE \@title \par}%
    \vskip 1.5em%
    {\large
      \lineskip .5em%
      \begin{tabular}[t]{c}%
        \@author
      \end{tabular}\par}%
    \vskip 1em%
    {\large \@date}%
  \end{center}%
  \par
  \vskip 1.5em}
  %fi CHECK
%    \end{macrocode}
% 
%
% {maketitle}
%    The macro to generate titles is easily altered in order that it
%    can be used more than once (an article with many titles)\footnote{Definition is straight 	out of the |doc| package and I only added minor tweaks to only start a new page 
%	on demand.}.  In the
%    original, diverse macros were concealed after use with
%    |\relax|. We must cancel anything that may have been put
%    into |\@thanks|, etc., otherwise {\em all\/} titles will
%    carry forward any earlier such setting!
%                 \cs{@makefnmark} and \cs{@makefntext}.
%    \begin{macrocode}
\def\nonewpage{}
\def\maketitle{\par
      \begingroup \def \thefootnote {\fnsymbol {footnote}}%
      \setcounter {footnote}\z@
      \def\@makefnmark{\hbox to\z@{$\m@th^{\@thefnmark}$\hss}}%
      \long\def\@makefntext##1{\parindent 1em\noindent
            \hbox to1.8em{\hss$\m@th^{\@thefnmark}$}##1}%
      \if@twocolumn \twocolumn [\@maketitle ]%
      \else \nonewpage \global \@topnum \z@ \@maketitle \fi
%    \end{macrocode}
%    For special formatting requirements (such as in TUGboat), we use
%    pagestyle |titlepage| for this; this is later defined to be
%    |plain|, unless already defined, as, for example, by
%    |ltugboat.sty|.
%    \begin{macrocode}
       \thispagestyle{titlepage}\@thanks \endgroup
%    \end{macrocode}
%    If the driver file documents many files, we don't want parts of a
%    title of one to propagate to the next, so we have to cancel
%    these, however before we save in another macro for later
%    usage in headers, if required. :
%    \begin{macrocode}
      \setcounter {footnote}\z@
      \gdef\@date{\today}\gdef\@thanks{}%
      \let\doctitle@cx\@title
      \let\docauthor@cx\@author
%
      \gdef\@author{}\gdef\@title{}%
}
%    \end{macrocode}
% 
%
%	As you can see from below, it can now work anywhere. 
% \maketitle
% 
%  Test |\@author| and test |\doctitle@cx| |\docauthor@cx|,
% 
%
%
%% headers and footers
%    \begin{macrocode}
\cxset{
  header style/.store in=\headerstyle@cx,
% general draft rules
  rule /.is choice,
  rule on/.code={\gdef\rulewidth@cx{0.4pt}},
  rule off/.code={\gdef\rulewidth@cx{0pt}},
% headers and footers
  lhead/.code ={\lhead{#1}},
  rhead/.code={\rhead{#1}},
  chead/.code={\chead{#1}},
  lfoot/.code ={\lhead{#1}},
  cfoot/.code={\chead{#1}},
  rfoot/.code={\rhead{#1}},
  headrulewidth/.code={\renewcommand\headrulewidth{#1}},
  footrulewidth/.code={\renewcommand\footrulewidth{#1}},
}
%    \end{macrocode}
% {ps@titlepage}
%	 When a number of articles are concatenated into a
%    journal, for example, it is not usual for the title pages of such
%    documents to be formatted differently.  Therefore, a class
%    such as \textsf{ltugboat} can define this macro in advance.
%    However, if no such definition exists, we use pagestyle
%    \texttt{plain} for title pages.Again the definition is 
%	from the \pkg{doc} package.
%    \begin{macrocode}
\@ifundefined{ps@titlepage}
    {\let\ps@titlepage=\ps@plain}{}
%    \end{macrocode}
% 
%
% \section{Defining Abstracts, summaries, precis, keywords etc}
%
% \subsection{Abstract}
%
% \begin{environment}{abstract}
%
%	This is an interesting environment provided in the standard
%	classes only for articles. However too many publications 
%	require such abstracts in other sections as well so we redefine
%	it here to make it more extensive.
%	
% \begin{docEnvironment}{abstract}{}
%    When we are producing a separate titlepage we also put the
%    abstract on a page of its own. It will be centred vertically on
%    the page.
% \end{docEnvironment}
%
%    Note that this environment is not defined for books.
%         to avoid page break after abstract heading.
%
%    \begin{macrocode}
\def\abstractname{Abstract}
\@ifundefined{abstract}{%
  \newenvironment{abstract}{%
      \titlepage
      \null\vfil
      \@beginparpenalty\@lowpenalty
      \begin{center}%
        \bfseries \abstractname
        \@endparpenalty\@M
      \end{center}}%
     {\par\vfil\null}
%    \end{macrocode}
%
%    When we are not making a separate titlepage --the default for the
%    article document class-- we have to check if we are in twocolumn
%    mode. In that case the abstract is as a |\section*|, otherwise
%    the quotation environment is used to typeset the abstract.
%    \begin{macrocode}
}{}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{chapterabstract} This is an identical environment to that
%	provided for abstract and can be used anywhere in the document. 
%    \begin{macrocode}
\def\chapterabstractname{Summary}

\newenvironment{chapterabstract}{%
   \center
     {\bfseries \chapterabstractname\vspace{-.5em}\vspace{\z@}}
   \endcenter\quotation
}{\endquotation}
%    \end{macrocode}
% \end{environment}
%
% \begin{chapterabstract}
%   \lorem
% \end{chapterabstract}
%
% \begin{docCommand} {chapterabstractname} { \meta {void}}  
%  We define a key for the summary or
% 	 or abstract at the top of a chapter. In most cases it is just called a summary.
%  One can use the \cs{chapterabstractname} to change it to another language.
% \end{docCommand}
%     
%    \begin{macrocode} 
\cxset{chapter abstractname/.store in =\chapterabstractname}
\cxset{chapter abstractname= SUMMARY}
%    \end{macrocode}
% 
% 
% \begin{docCommand}{precis} { \marg{text} } Precis is a command to be used for summaries. The same summary 
% can also be used for the toc. 
% \end{docCommand}
%    \begin{macrocode}
\newcommand\precis[1]{%
     \precis@cx{#1}%
     \precistoc@cx{#1}%
     \addvspace{20pt} % check this should be settable
}
%
\def\precis@cx#1{%
\bgroup
\small
\centering
\parbox{.8\textwidth}{#1}
\par\medskip\egroup}

\def\precistoc@cx#1{%
    \addcontentsline{toc}{section}{%
    \bgroup\bgroup#1\egroup\egroup
    %
  }
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newdimen\phdparindent
\setlength{\phdparindent}{12\p@}
\parindent\phdparindent
%    \end{macrocode}
% \begin{docEnvironment}{dedication}{}
%  Koma defines thsi so we provide.
% \end{docEnvironment}
%    \begin{macrocode}
\DeclareDocumentEnvironment{dedication}{}
{\clearemptydoublepage
 \thispagestyle{empty}
 \vspace*{13\baselineskip}
 \large\itshape
\let\\\@centercr\@rightskip\@flushglue \rightskip\@rightskip
\leftskip4cm\parindent\z@\relax
\everypar{\parindent=\phdparindent\let\everypar\empty}}{\clearpage}
%    \end{macrocode}
% 
% 
% \begin{docCommand} {addtocimage@cx} {\meta{} \meta{} \meta{}}
%  Adds an image to the ToC.
% \end{docCommand}
% 
%    \begin{macrocode}
\long\def\addtocimage@cx#1#2#3{%
\tikz[remember picture,overlay] {%
\node[anchor=east,xshift=#1,yshift=#2] at (0,0) {\includegraphics[width=.15\linewidth]{#3}};}%
}
%    \end{macrocode}
%    
%    Adds an image to the ToC.
%    Needs testing for twoside printing. 
%    \begin{macrocode}
\def\addtocimage#1#2#3{%
 \addtocontents{toc}{\protect\addtocimage@cx{#1}{#2}{#3}}%
}
%    \end{macrocode}
% 
%
% \begin{chapterabstract}
%   \lorem
% \end{chapterabstract}
%
% \section{Cover and Second pages}
% 
%	We define author commands for coverpages and
%	second pages. If they have been defined by the
%	author we do nothing, otherwise we provide some
%	defaults as examples.
% \begin{docCommand} {coverpage} {\marg{} \marg{} \marg{} \marg{} \marg{} }
%   Creates a cover page for a document.
% \end{docCommand}
% The design of a cover page---and perhaps a dust cover---is best left to a book
%  designer, here we provide a number of predefined templates for documents
%  that will be primarily viewed on screen.
%
%    \begin{macrocode}
 \ExplSyntaxOn
\cxset
  {
    cover~font-size/.font-size~in = \cover_font_size,
 }

\cs_if_exist:NF \coverpage 
  {
    \DeclareDocumentCommand {\coverpage}  {+O{Y Lazarides} m m m m m }
     {
       \thispagestyle{empty}
       \coverpage_aux:nnnnn {#1} {#2} { #3} {#4} {#5} {#6}
     }

     \cs_new:Npn \coverpage_aux:nnnnn #1 #2 #3 #4 #5 #6
      {
      %\pagecolor{black!80}
      \gdef\coverpageimage{#2}
      \gdef\secondpageimg{#2}
      \vspace*{-3.0cm}
      \parbox[t][0pt]{\textwidth}{%
         \color{black}
         \hbox to \hsize{\hfill\hfill \huge \bfseries\textsf{#1}}
         \vspace*{0.1cm}
         \hskip-3cm\includegraphics[width=\paperwidth]{#2}\par %hine-02
         \vspace*{.8\baselineskip} %3
         \hbox to \hsize{%
         \Huge \hfill\hfill{\MakeUppercase{\bfseries  
         \textsf{\textls{#5}}}}}%
         \vspace*{0.3cm}
         \hbox to \hsize{\Huge \hfill\hfill{\MakeUppercase{\bfseries \textsf{\textls{#6}}}}}
         \vspace*{0.3cm}
         \hbox to \hsize{\huge \hfill\hfill\textsf{\hbox{#3}}}%
         \vspace*{0.3cm}
         \hbox to \hsize{\huge \hfill\hfill\textsf{\hbox{#4}}}%
         
        }
     }
     
  }
  {\thispagestyle{empty} }
  
    
\ExplSyntaxOff
%    \end{macrocode}
% \section{Cover page backgrounds}
% Most cover pages for books can be considered of consisting of two major components:
%  \begin{enumerate}
%    \item A background layer that displays perhaps a full image, patterns or colors
%    \item A foreground layer that consists of \enquote{bands} of text, that
%          describe the book titles, author(s) publishers and the like.
%    \item More layers are also possible. For example in a series of reports,
%          irrespective of any background or foreground we might always wish to display
%          a company logo. To make the templates more flexible this can be placed on
%          its own layer. 
%  \end{enumerate}
%
%  Although possible to have a \tex only solution with boxes, more flexible templates
%  can be developed using \tikzname.
%    \begin{macrocode}
\cxset{doc title/.store in=\doctitle,
       doc authors/.store in=\docauthors,
       coverpage subtitle/.store in = \coverpagesubtitle ,   
       coverpage image/.store in    = \coverpageimage,
       coverpage author/.store in   = \coverpageauthor,
       coverpage authors/.store in  = \coverpageauthors}
       
\cxset{doc title          = DOHA OASIS PROJECT,
       doc authors        = {},
       coverpage subtitle = DESIGN OF ANCILLARY BOOK ELEMENTS,
       coverpage author   = Yannis Lazarides,
       coverpage image    = sebastian}
%
%        
\def\coverpagefullpage{%
\pgfdeclarelayer{logo layer}
\pgfsetlayers{background layer,main,logo layer,foreground layer}
\gdef\secondpageimg{\coverpageimage}%
\thispagestyle{empty} % Suppress headers and footers on the title page
\begin{tikzpicture}[remember picture,overlay]
\node[inner sep=0pt] (background) at (current page.center) {%
  \includegraphics[width=\paperwidth]{\coverpageimage}};
\draw (current page.center) node [yshift=-4cm,fill=theblue!70!white,fill opacity=0.3,text opacity=1,inner sep=1cm]{\Huge\centering\bfseries\sffamily\parbox[c][][t]{\paperwidth}{\color{white}\centering \arial\doctitle \\[15pt] % Book title
{\huge\color{white}  \coverpagesubtitle}\\[20pt] % Subtitle
\coverpageauthor\\
 Nicholas Lazarides\\
 George Lazarides
}%author name
}; % node
%
\begin{pgfonlayer}{logo layer}
\draw (current page.south) node[yshift=1cm,fill=theblue!70!white,text opacity=0.8,
        fill opacity=0.3,inner sep=0.5cm,shape=rectangle,draw]{\parbox[c][][t]{\paperwidth}{\hfill\colorbox{white}{\includegraphics[width=1cm]{latex3.png}}\hbox to 0.5cm{\space}}};
\end{pgfonlayer}
\end{tikzpicture}
\vfill
\newpage}
%    \end{macrocode}
%
% \begin{docCommand} {secondpage}{\marg{void}}
%   Typesets the second page of a book or report. Parameters need to be set before
%   calling the macro using |\cxset|
% \end{docCommand}
%
%	Although I tried to make it as flexible as possible, it is not a general	command, 
% but rather a command that you will need to redefine to follow house rules. It is included
%	here as an example and to typeset the second page of the documentation.
%
%	\begin{macrocode}
\DeclareDocumentCommand{\SecondPageImageDescription} {m} 
  {
    \long\gdef\secondpageimgdescription{#1}  
  }
  
\SecondPageImageDescription{The cover image shows Jo Bodeon, a back-roper in the mule room at 
    Chace Cotton Mill. Burlington, Vermont. This and other similar images 
    in this book were taken by Lewis W. Hine, in the period between 
    1908-1912. These images as well as social campaigns by many including 
    Hine, helped to formulate America's anti-child labour laws.}
  
\newcommand\secondpage{\clearpage
  \pagecolor{white}
  \null{\Huge\doctitle}\vfill\vfill
  \begin{minipage}[b]{0.9\textwidth}
    \includegraphics[width=3cm]{\secondpageimg}\par
    \raggedright
    \textit{Cover image: }
    \secondpageimgdescription  
  \end{minipage}\par
  \vspace*{\baselineskip}
  \begin{minipage}[b]{0.9\textwidth}
  \RaggedRight
  \setlength{\parskip}{0.5\baselineskip}
    Copyright \copyright 2015  Dr Yiannis Lazarides\par
    Permission is granted to copy, distribute and\slash or modify this document 
    under the terms of the GNU Free Documentation License, version 1.2, with no 
    invariant sections, no front-cover texts, and no back-cover texts.\par
    A copy of the license is included in the appendix.\par
    This document is distributed in the hope that it will be useful, but without 
    any warranty; without even the implied warranty of merchantability or 
    fitness for a particular purpose.
  \end{minipage}
  \vspace*{2\baselineskip}
  \clearpage
}
\cxset{second page texti/.code = \long\def\secondpageimgdescription{\bgroup\parskip1em #1\egroup},
       second page copyright/.code = \def\SecondPageCopyright{#1}}
\cxset{second page texti = {This is some text.}}       
%    \end{macrocode}
% 
%</package>
\endinput





%