%%
%% This is file `phd-documentation.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% phd-documentation.dtx  (with options: `DOCUM')
%% ----------------------------------------------------------------
%% phd --- A package to beautify documents.
%% E-mail: yannislaz@gmail.com
%% Released under the LaTeX Project Public License v1.3c or later
%% See http://www.latex-project.org/lppl.txt
%% ----------------------------------------------------------------
\wlog{************************************************}
\wlog{ BEGIN PHD-DOCUMENTATION                          }
\wlog{************************************************}
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\ProvidesPackage{phd-documentation}[2017/04/15 v1.0 less preamble (YL)]%
\DeclareDocumentCommand\MakePrivateLetters{}%
  {\catcode`\@11\relax \catcode`_11 \catcode`:11}
\ExplSyntaxOn
\definecolor{thecodelinecolor}{HTML}{140F15}
\tl_replace_once:Nnn {\theCodelineNo}
  {\HDorg@theCodelineNo}
  {{\color{thecodelinecolor}\ttfamily\scriptsize\arabic{CodelineNo}}}
\ExplSyntaxOff
\newcommand*{\verbatimfont}{\ttfamily}%
\let\displayverbfont\ttfamily
\renewcommand*{\verbatim@font}{\verbatimfont}
\let\oldherm\Hermaphrodite
\let\Hermaphrodite\undefined

\RequirePackage{tcolorbox}[2018/07/26] %version 4.14 latest
\tcbuselibrary{documentation,listings,skins,xparse,external,breakable,theorems}
\tcbset{index format=doc,
        index actual={=},
        index level = {>},
        index quote = {!},
        index german settings,
        color hyperlink = thelinkcolor ,
        color definition =thelinkcolor,
        index command= \index,
                   }
\tcbset{halostyle/.style={fuzzy halo=2mm with magenta!5}}
\ExplSyntaxOn
\def\l_phdd_label_prefix_tl {com:}
\renewenvironment{docCommand}[3][]{\tcbset{#1}%
  \begin{tcb@manual@entry}%
  \begin{tcb@doc@head}{doc@head@command}%
  % Print the command using the current style
  \tcb@Print@Com{#2}
  %{\verbatimfamily\bfseries\textbackslash\color{themacrocolor}\tl_to_str:n{#2}}
  \SpecialMainIndex{#2}%
  \protected@edef\@currentlabel{\noexpand\tcb@cs{#2}}\label{com:#2}{\ttfamily #3}%
  \tcb@doc@do@description%
  \end{tcb@doc@head}\nobreak\tcbset{before~upper=}\kvtcb@doc@body@command@before\ignorespaces}%
  {\ifvmode\else\unskip\fi\kvtcb@doc@body@command@after\end{tcb@manual@entry}}

\ExplSyntaxOff

\ExplSyntaxOn
\cxset{
    color~command/.store~in        = \phdd_key_color_command_tl,
    color~environment/.store~in    = \phdd_key_color_environment_tl,
    color~key/.store~in            = \phdd_key_color_tl,
    color~value/.store~in          = \phdd_key_color_value_tl,
    color~color/.store~in          = \phdd_key_color_color_tl,
    color~definition/.style        = {color~command={#1},
                                      color~environment={#1},
                                      color~key={#1},
                                      color~value={#1},
                                      color~color={#1}},
    color~option/.store~in         = \phdkv@col@opt,
    color~hyperlink/.store~in      = \phdkv@colhyper,
    color~frame/.store~in          = \phdkv@colhyper,
    color~meta/.store~in           = \pkdkv@colmeta,
    before~example/.store~in       = \phdkv@beforeexample,
    after~example/.store~in        = \phdkv@afterexample,
}
\ExplSyntaxOff
\cxset {
   color command     = themacrocolor,
   color environment = theenvironment,
   color key         = thekey,
   color value       = thevalue,
   color color       = black,%leaks to index
   color option      = theoption,
   color meta        = themeta,
   color frame       = theframe,
 }

\ExplSyntaxOn
\bool_new:N \phdd_index_typeset_bool
\bool_gset_true:N \phdd_typeset_bool
\cs_new:Npn \phdd_typeset_command #1
  {
    \group_begin:
    \color{\phdd_key_color_command_tl}
    \cs[no-index]{#1}
    \group_end:
  }

\cs_set:Npn \phdd_typeset_index_command #1
  {
    \bool_if:NT \phdd_index_typeset_bool
      {
        \kvtcb@index@command
          {
            #1\idx@actual{\tcbIndexPrintComC{#1}}
            \encapchar hyperpage
          }
      }
    \phdd_typeset_command {#1}
  }

\ExplSyntaxOn
\newrobustcmd{\phdindexprintcolc}[1]
  {
    \phd_index_print_c{#1}{\phdd_key_color_color_tl}
  }

\cs_set:Npn \phd_print_col #1
  {
    \textcolor{\phdd_key_color_color_tl}{\ttfamily\bfseries#1}
  }

\cs_set:Npn \@@_doc_color_aux:n #1
  {
    \phd_print_col {#1}
    \phd_index_col {#1}
  }

\cs_set:Npn \@@_doc_color_star:n #1
  {
    \phd_print_col{#1}
  }

\DeclareDocumentCommand {\docColor} { s m }
  {
    \IfBooleanTF {#1}
      { \@@_doc_color_star:n {#2} }
      { \@@_doc_color_aux:n {#2} }
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \phd_index_val #1
  {
    \ifphd@doc@toindex
      \index
      {
        #1\idx@actual
        \phdindexprintvalca{#1}
      }
      \index
        {
          \phdkv@text@values
          \idx@level #1
          \idx@actual
          \phdIndexPrintValC{#1}
        }
    \fi
  }

\cs_set:Npn \docValue@ #1 {\phd@Print@Val{#1}\phd_index_val{#1}}%
\cs_set:Npn \docValue@star #1 {\phd@Print@Val{#1}}%

\DeclareDocumentCommand \docValue { s m }
  {
    \IfBooleanTF {#1}
      { \docValue@star {#2} }
      { \docValue@ {#2} }
  }
\ExplSyntaxOff
\cxset {doc command color/.code = \tcbset{color command = #1}}
\cxset {doc command color= thecmdcolor}
\lstdefinelanguage{extras}{morekeywords={%
      poemtitle, poemtoc, versewidth,
      vin, poemlines,poemtitlefont,
      ProvidesClass,IfFileExists,
      RequirePackage,ifthenelse,chapter,
      includegraphics, newarray,readarray,of
}}
\lstloadlanguages{[LaTeX]TeX, [primitive]TeX, extras}

\newtcolorbox{scriptexample}[2][]{colback=thecodebackground,
boxrule=0pt,toprule=0pt,colframe=white,#1}
\newtcolorbox{commands}[2][]{colback=thecodebackground,
boxrule=0pt,toprule=0pt,colframe=white}
\lstset{language={[LaTeX]TeX},
       escapeinside={{(*@}{@*)}},
       numbers=left,
       gobble=0,
       stepnumber=1,
       numbersep=5pt,
       numberstyle={\footnotesize\color{thegray}},
       breaklines=false,
       framesep=5pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
       stringstyle={\color{orange}\footnotesize},
       commentstyle=\color{black},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       showspaces=false,
       xleftmargin=10pt,
       xrightmargin=0pt,
       aboveskip=3pt plus1pt minus1pt,
       belowskip=7pt plus1pt minus1pt,
       backgroundcolor=\color{theshade},
}
\def\footnotechanges#1#2#3{\footnote{#1#2#3}}
\lstdefinestyle{simple}{%
       escapeinside={{(*@}{@*)}},
       numbers=left,
       gobble=0,
       stepnumber=1,
       numbersep=5pt,
       firstnumber=last,
       numberstyle={\ttfamily\scriptsize\color{thecodelinecolor}},
       breaklines=true,
       % we do not use frames
       framesep=0pt,
       framexleftmargin=0pt,
       basicstyle=\small\ttfamily,
       showstringspaces=true,
       stringstyle={\color{thestringstyle}\footnotesize},
       commentstyle=\color{thecommentstyle},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       prebreak={\Righttorque},
       postbreak={\space\Lefttorque},
       showspaces=false,
       xleftmargin=1.5pt,
       xrightmargin=0pt,
       aboveskip=3pt plus1pt minus1pt,
       belowskip=3pt plus1pt minus1pt,
       backgroundcolor=\color{white},
       showlines=false,
       gobble=0,
       resetmargins,
}

\lstdefinestyle{singleline}{%
       escapeinside={{(*@}{@*)}},
       numbers=left,
       gobble=0,
       stepnumber=1,
       numbersep=5pt,
       numberstyle={\footnotesize\color{thecodelinecolor}},
       breaklines=false,
       framesep=0pt,
       framexleftmargin=0pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
       stringstyle={\color{thestringstyle}\footnotesize},
       commentstyle=\color{thecommentstyle},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       prebreak={\Righttorque},
       postbreak={\space\Lefttorque},
       showspaces=false,
       xleftmargin=-10pt,
       xrightmargin=0pt,
       aboveskip=3pt plus1pt minus1pt,
       belowskip=3pt plus1pt minus1pt,
       backgroundcolor=\color{white},
       showlines=false,
       numbers=none,
       resetmargins,
}

\def\phd@print@LstStyle#1{%
  \textcolor{\kvtcb@col@counter}{\tcb@doc@bfseries\tcb@scantokens{#1}}
}

\DeclareDocumentCommand\docAuxListingsStyle{s m}{%
  \phd@print@LstStyle{#2}%
  \IfBooleanTF{#1}{}{%
  %\index{\phd@text@lststyles\idx@level#2}
  \SpecialPackageIndex[\phd@text@lststyles]{#2}
  }%
}
\lstnewenvironment{teX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      style=simple,#1
}}
{}
\lstnewenvironment{sverbatim}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      style=singleline,#1
}}
{}
\lstdefinestyle{extended}{%
      breaklines=true,
      framesep=5pt,
      basicstyle=\verbatimfamily,
      showstringspaces=false,
      keywordstyle=\small\verbatimfamily,
      stringstyle=\color{thestringstyle},
      commentstyle=\color{thecommentstyle},
      rulecolor=\color{gray!10},
      breakatwhitespace=true,
      xleftmargin=10pt,
      xrightmargin=0pt,
      aboveskip=\medskipamount,
      belowskip=\medskipamount,
      backgroundcolor=\color{thecodebackground},
}
\lstnewenvironment{teXX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      style=extended, #1
}}
{}
\newcommand\continuelinenumber{\lstset{firstnumber=last}}
\DeclareDocumentCommand{\startlineat}{ m }{\lstset{firstnumber=#1}}
\let\numberlineat\startlineat
\let\startnumberat\numberlineat
\newcommand\emphasis[2][black!80]{%
   \lstset{%
     emph={write, writeln,#2},
     escapeinside={(*@}{@*)},
     emphstyle={\verbatimfont%
                \bfseries%
                \textcolor{#1}%
                },
   }%
}
\lstdefinestyle{highlite}{%
      alsolanguage=makeindex,
      alsolanguage=BibTeX,
      emph={cs, use,new,seq,map,inline,eq,gincr,incr,IfNoValueF,%
      if,If,exist,protect,nopar,gset,%
      set,undefine,define,add,gadd,remove,div,newcounter%
      round,truncate,max,min,mod,gzero,int,%
      zero,newcount,protected,msg,error,DeclareDocumentCommand},
      emphstyle=\ttfamily\color{thered},
      firstnumber=last,
      stepnumber=1,
      escapeinside={{(*@}{@*)}},
      breaklines=true,
      framesep=5pt,
      basicstyle= \ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\color{thered},%\color{primary},
      keywordstyle=[2]\ttfamily\color{black},
      stringstyle=\color{thecommentscolor},
      commentstyle=\color{thecommentscolor},
      rulecolor=\color{gray!10},
      breakatwhitespace=true,
      prebreak={\Righttorque},
      postbreak={\space\Lefttorque},
      showspaces=false,  % shows spacing symbol
      upquote=true,
      xleftmargin=10pt,
      xrightmargin=0pt,
      aboveskip=\medskipamount,
      belowskip=\medskipamount,
      backgroundcolor=,
      tabsize=2,%
      mathescape=true,%
}

\lstnewenvironment{teXXX}[1][]
  {\lstset{language=[LaTeX]TeX}%
    \lstset{%
      style=highlite,  #1
}}
{}
\lstnewenvironment{phdverbatim}[1][]
  {\lstset{language=[LaTeX]TeX}%
    \lstset{%
      emph={cs, use,new,seq,map,inline,eq,gincr,incr,IfNoValueF,%
      if,If,exist,protect,nopar,gset,%
      set,undefine,define,add,gadd,remove,div,%
      round,truncate,max,min,mod,gzero,int,%
      zero,newcount,protected,msg,error,DeclareDocumentCommand},
      emphstyle=\verbatimfont\bfseries\color{black!80},
      numbers=none,
     % stepnumber=1,
      escapeinside={{(*@}{@*)}},
      breaklines=false,
      framesep=5pt,
      basicstyle= {\small\ttfamily},
      showstringspaces=false,
      keywordstyle=\ttfamily\color{thekeywordstyle},
      stringstyle=\color{black!50},
      commentstyle=\color{black!50},
rulecolor=\color{gray!10},
      breakatwhitespace=true,
      showspaces=false,  % shows spacing symbol
xleftmargin=15pt,
xrightmargin=5pt,
aboveskip=\medskipamount,
belowskip=\medskipamount,
       backgroundcolor=,
       #1
}}
{}
\lstdefinelanguage{makeindex}{
  morekeywords = {
    actual,           % @
    arg_open,         % {
    arg_close,        % }
    encap,            % |
    escape,           % \\
    keyword,          % \\indexentry
    level,            % !
    page_compositor,  % -
    quote,            % "
    range_open,       % (
    range_close,      % )
    preamble,         % \\begin{theindex} \n
    postamble,        % \n\n \end{theindex} \n
    setpage_prefix,   % \n \\setcounter{page}{
    setpage_suffix,   % } \n
    group_skip,       % \n\n \\indexspace \n
    headings_flag,    % 0
    heading_prefix,   %
    heading_suffix,   %
    symhead_positive, % Symbols
    symhead_negative, % symbols
    numhead_positive, % Numbers
    numhead_negative, % numbers
    item_0,           % \n \\item
    item_1,           % \n \\subitem
    item_2,           % \n \\subsubitem
    item_01,          % \n \\subitem
    item_x1,          % \n \\subitem
    item_12,          % \n \\subsubitem
    item_x2,          % \n \\subsubitem
    delim_0,          % ,
    delim_1,          % ,
    delim_2,          % ,
    delim_n,          % ,
    delim_r,          % --
    delim_t,          %
    suffix_2p,        %
    suffix_3p,        %
    suffix_mp,        %
    encap_prefix,     % \\
    encap_infix,      % {
    encap-suffix,     % }
    line_max,         % 72
    indent_space,     % \t\t
    indent_length     % 16
  } ,
  morestring = [b]{"} ,
  morecomment = [l]{\%} ,
  sensitive = true
}
\lstdefinelanguage{BibTeX}{
  % entry types:
  morekeywords = {
    % regular types:
    @article,
    @book,@mvbook,@inbook,@bookinbook,@suppbook,@booklet,
    @collection,@mvcollection,@incollection,@suppcollection,
    @manual,
    @misc,
    @online,
    @patent,
    @periodical,
    @suppperiodical,
    @proceedings,@mvproceedings,@inproceedings,
    @reference,@mvreference,@inreference,
    @report,
    @set,
    @thesis,
    @unpublished,
    @xdata,
    @customa,@customb,@customc,@customd,@custome,@customf,
    % type aliases:
    @conference,
    @electronic,
    @mastersthesis,
    @phdthesis,
    @techreport,
    @www,
    % unsupported types:
    @artwork,
    @audiobibnote,
    @commentary,
    @image,
    @jurisdiction,
    @legislation,
    @legal,
    @letter,
    @movie,
    @music
    @performance,
    @review,
    @software,
    @standard,
    @video,
    % cnltx types:
    @bundle,
    @class,
    @package,
  } ,
  % entry fields:
  morekeywords = [2]{
    % data fields:
    abstract,
    addendum,
    afterword,
    annotation,
    annotator,
    author,
    authortype,
    bookauthor,
    bookpagination,
    booksubtitle,
    booktitle,
    booktitleaddon,
    chapter,
    commentator,
    date,
    doi,
    edition,
    editor,editora,editorb,editorc,
    editortype,
    editoratype,editorbtype,editorctype,
    eid,
    entrysubtype,
    eprint,
    eprintclass,
    eprinttype,
    eventdate,
    eventtitle,
    eventtitleaddon,
    file,
    foreword,
    hvarer,
    howpublished,
    indextitle,
    institution,
    introduction,
    isan,
    isbn,
    ismn,
    isrn,
    issn,
    issue,
    issuesubtitle,
    issuetitle,
    iswc,
    journalsubtitle,
    journaltitle,
    label,
    language,
    library,
    location,
    mainsubtitle,
    maintitle,
    maintitleaddon,
    month,
    nameaddon,
    note,
    number,
    organization,
    origdate,
    origlanguage,
    origlocation,
    origpublisher,
    origtitle,
    pages,
    pagetotal,
    pagination,
    part,
    publisher,
    pubstate,
    reprinttitle,
    series,
    shortauthor,
    shorteditor,
    shorthand,
    shorthandintro,
    shortjournal,
    shortseries,
    shorttitle,
    subtitle,
    title,
    titleaddon,
    translator,
    type,
    url,
    urldate,
    venue,
    version,
    volume,
    volumes,
    year,
    % special fields:
    crossref,
    entryset,
    execute,
    gender,
    hyphenation,
    ids,
    indexsorttitle,
    keywords,
    options,
    presort,
    related,
    relatedoptions,
    relatedtype,
    relatedstring,
    sortkey,
    sortname,
    sortshorthand,
    sorttitle,
    sortyear,
    xdata,
    xref,
    % custom fields:
    namea,nameb,namec,
    nameatype,namebtype,namectype,
    lista,listb,listc,listd,liste,listf,
    usera,userb,userc,userd,usere,userf,
    verba,verbb,verbc,
    % field aliases:
    address,
    annote,
    archiveprefix,
    journal,
    key,
    pdf,
    primaryclass,
    school,
    % cnltx fields:
    maintainer
  } ,
  morestring = [b]{"} ,
  morecomment = [l]{\%} ,
  sensitive = false
}

\lstdefinestyle{complex}{
  basicstyle       =  \small\ttfamily,  %{\sourceformat},
  numbers          = left,
  numberstyle      = \tiny,
  xleftmargin      = 1em,
  numbersep        = .75em,
  gobble           = \@gobble ,
  columns          = fullflexible,
  literate         =
    {ä}{{\"a}}{1}
    {ö}{{\"o}}{1}
    {ü}{{\"u}}{1}
    {Ä}{{\"A}}{1}
    {Ö}{{\"O}}{1}
    {Ü}{{\"U}}{1}
    {ß}{{\ss}}{1}
    {`}{\`{}}{1}
    {'}{\textquotesingle}{1} ,
  breaklines       = true,
  keepspaces       = true,
  breakindent      = 1em,
  commentstyle     = \color{thecomment},
  keywordstyle     = \color{thecs},
  deletetexcs      =
    {
      a,o,u,A,O,U,
      begin,
      center,
      description,document,
      end,enumerate,
      equation,eqnarray,
      figure,flushleft,flushright,
      itemize,list,
      otherlanguage,
      table,tabu,tabular
    },
  deletekeywords   =
    {
      a,o,u,A,O,U,
      begin,
      center,
      description,document,
      end,enumerate,
      equation,eqnarray,
      figure,flushleft,flushright,
      itemize,list,
      otherlanguage,
      table,tabu,tabular
    },
  % \begin, \end:
  texcsstyle       = [2]\color{red}, %add color begin end
  index            = [2][texcs2],
  indexstyle       = [2]\@gobble,
  moretexcs        = [2]{begin,end},
  % control sequences that'll be indexed:
  texcsstyle       = [3]\color{cs},
  index              = [3][texcs3],
  indexstyle       = [3]\indexcs,
  % control sequences that won't be indexed:
  texcsstyle       = [4]\color{thecs},
  index            = [4][texcs4],
  indexstyle       = [4]\@gobble,
  % added environments that'll be indexed:
  texcsstyle       = [5]\color{env},
  index            = [5][texcs5],
  %indexstyle       = [5]\indexenv,   UNCOMMENT LATER
  % environments that won't be indexed:
  texcsstyle       = [6]\color{env},
  index            = [6][texcs6],
  indexstyle       = [6]\@gobble,
  moredelim        = *[s][\color{green}]{$}{$} %add color the math
}
\lstnewenvironment{lualisting}[1][]
{\lstset{language=[LaTeX]TeX,
  basicstyle           = \ttfamily,
  showstringspaces     = false,
  upquote              = true,
  keywordstyle         =\color{blue},
  commentstyle         =\color{black!50},
  stringstyle          =\color{black!80},
  backgroundcolor      =\color{white},
  xleftmargin          =15pt,
  xrightmargin         =5pt,
  aboveskip            =\medskipamount,
  belowskip            =\medskipamount,
  #1}}
{}

\lstdefinelanguage{Go}{
  % Keywords as defined in the BNF
    morekeywords=[1]{break,default,func,interface,%
      case,defer,go,map,struct,chan,else,goto,package,%
      switch,const,fallthrough,if,range,type,continue,%
      for,import,return,var,select},
    % Special identifiers, builtin functions
    morekeywords=[2]{make,new,nil,len,cap,copy,complex,%
        real,imag,panic,recover,print,println,iota,close,%
        closed,_,true,false,append,delete},
    % Basic types
    morekeywords=[3]{%
        string,int,uint,uintptr,double,float,byte,%
          int8,int16,int32,int64,int128,%
          uint8,uint16,uint32,uint64,uint128,%
          float32,float64,complex64,complex128,%
          rune},
    % Strings : "toto", 'toto', `toto`
    morestring=[b]{"},
    morestring=[b]{'},
    morestring=[b]{`},
    % Comments : /* comment */ and // comment
    comment=[l]{//},
    morecomment=[s]{/*}{*/},
    % Options
    sensitive=true,
    numbers=left,
    numberstyle=\footnotesize
}
\lstnewenvironment{Go}[1][]
  {\lstset{language=Go}%
    \lstset{%
      style=highlite,  #1
}}
{}

  \ifx\c@chapter\@undefined
    \newcounter{texexp}[section]
    \@addtoreset{c@texexp}{c@section}
  \else
    \newcounter{texexp}[chapter]
    \@addtoreset{c@texexp}{c@chapter}
  \fi
\def\dcircle#1{\ding{\numexpr181 + #1\relax}}
\def\thetexexp{\@arabic\c@section.\arabic{texexp}}
\tcbset{texexp/.style={%
    fonttitle=\small\ttfamily,
    fontupper=\small,
    fontlower=\small,
    coltitle=black,
    colback = thecodebackground,% background
    colframe=thecodebackground,
   % process code={\def\dcircle##1{\ding{\numexpr181 + ##1}}},
      %colupper=spot!,
   },
   listing options = {%
     gobble=2
     keywordstyle=\color{thekeywordstyle},
     belowskip=0pt,
     escapeinside={(*@}{@*)},%
     breaklines=true,%
     backgroundcolor=\color{thecodebackground},%
     %firstnumber=last,%
     stepnumber=1,%
     upquote=true,%
     alsoletter={_,:},%
     commentstyle=\color{thecommentscolor},%
     emph={cs,new,seq,map,inline,eq,gincr,incr,IfNoValueF,if,%
            If,exist,protect,nopar,gset,%
            set,undefine,define,add,gadd,remove,div,%
            round,truncate,max,min,mod,gzero,int,exp,put,left,args,%
            zero,newcount,protected,msg,error,%
            eval,to,arabic,alph,Alph,roman,Roman,dim%
            DeclareDocumentCommand,%
            NewDocumentCommand,%
            RenewDocumentCommand,includegraphics,
            function,local,return,break,
         },%
           %
          % For LaTeX3 we need to add these, note % is important
          % dn’t miss, at the end...
          moretexcs    = {DeclareDocumentCommand,IfBooleanTF,tex_def:D,%
          cs_new:Nn,cs_new:Npn,cs_new:cn,cs_set_nopar:Npn,cs_meaning:N,%
          %primitives
          cs:w,cs_end:,tex_underline,group_begin:, group_end:,%
          %coffins
          NewCoffin,JoinCoffins,SetHorizontalCoffin,TypesetCoffin,%
          %properties
          prop_new:N,prop_new:c,prop_put:Nnn,%
          %boolean
          bool_new:N,bool_set_true:N,bool_set_false:N,%
          bool_if:NTF,%
          hbox_to_wd:nn,%
          IfNoValueTF,%
          %token lists
          tl_new:N,tl_set:Nn,tl_concat:NNN,%
          token_to_meaning:N,%
          seq_pop_left:NN,%
          %
          %int
          int_if_exist:cT,int_use:c,int_new:c,int_new:N,int_eval:n,%
          int_add,int_use,int_to_roman,%
          %boxes
          box_new:c,hbox_set:cn,box_use:c,vbox_set:cn,box_move_down:nn,%
          %string
          str_if_eq_x:nnTF,%
          tl_tail:n,%
          DeclareObjectType,%
          DeclareTemplateInterface,%
          DeclareTemplateCode,%
          DeclareInstance,UseInstance,AssignTemplateKeys%
          keys_set,keys_define,%
          },%
         emphstyle=\verbatimfont\bfseries\color{theemphasiscolor},%
         %framexleftmargin=-14pt,numbersep=-7pt,xleftmargin=-28pt,
   },%close listings options
      % added for better control
      arc=0pt,
      outer arc=0pt,
      example1/.code 2 args={\refstepcounter{texexp}{\ifx#2\empty\else\label{#2}\fi}}%Reference
     \pgfkeysalso{texexp, enhanced, breakable, title={Example \thetexexp\ #1}%
 },
}

\def\emphasize#1{%
\tcbset{texexp/.style={%
    fonttitle=\small\ttfamily,
    fontupper=\small,
    fontlower=\small,
    coltitle=black,
    colback = thecodebackground,% background
    colframe=thecodebackground,
      %process code={\def\dcircle##1{\ding{\numexpr181 + ##1}}},
      %colupper=spot!,
   },
   listing options = {%
     gobble=1,
     tabsize=2,
     keywordstyle=\color{thekeywordstyle},
     belowskip=0pt,
     escapeinside={(*@}{@*)},%
     breaklines=true,%
     backgroundcolor=\color{thecodebackground},%
     %firstnumber=last,%
     stepnumber=1,%
     upquote=true,%
     alsoletter={_,:},%
     commentstyle=\color{thecommentstyle},%
     emph={cs,new,seq,map,inline,eq,gincr,incr,IfNoValueF,if,%
            If,exist,protect,nopar,gset,%
            set,undefine,define,add,gadd,remove,div,%
            round,truncate,max,min,mod,gzero,int,exp,put,left,args,%
            zero,newcount,protected,msg,error,%
            eval,to,arabic,alph,Alph,roman,Roman,dim%
            DeclareDocumentCommand,%
            NewDocumentCommand,%
            RenewDocumentCommand,includegraphics,
            function,local,return,#1,
         },%
           %
          % For LaTeX3 we need to add these, note % is important
          % dn’t miss, at the end...
     moretexcs    = {DeclareDocumentCommand,IfBooleanTF,tex_def:D,%
          cs_new:Nn,cs_new:Npn,cs_new:cn,cs_set_nopar:Npn,token_to_meaning:N,%
          %primitives
          cs:w,cs_end:,tex_underline,group_begin:, group_end:,%
          %coffins
          NewCoffin,JoinCoffins,SetHorizontalCoffin,TypesetCoffin,%
          %properties
          prop_new:N,prop_new:c,prop_put:Nnn,%
          %boolean
          bool_new:N,bool_set_true:N,bool_set_false:N,%
          bool_if:NTF,%
          hbox_to_wd:nn,%
          IfNoValueTF,%
          %token lists
          tl_new:N,tl_set:Nn,tl_concat:NNN,%
          token_to_meaning:N,%
          seq_pop_left:NN,%
          %
          %int
          int_if_exist:cT,int_use:c,int_new:c,int_new:N,int_eval:n,%
          int_add,int_use,int_to_roman,%
          %boxes
          box_new:c,hbox_set:cn,box_use:c,vbox_set:cn,box_move_down:nn,%
          %string
          str_if_eq_x:nnTF,%
          tl_tail:n,%
          DeclareObjectType,%
          DeclareTemplateInterface,%
          DeclareTemplateCode,%
          DeclareInstance,UseInstance,AssignTemplateKeys,%
          keys_set,keys_define,%
          },%
     emphstyle=\verbatimfont\bfseries\color{theemphasiscolor},%
    %framexleftmargin=-14pt,numbersep=-7pt,xleftmargin=-28pt,
    %
   },%close listings options
      % added for better control
      arc=0pt,
      outer arc=0pt,
  }%close style
}%close command
\newenvironment{texexp}[1]{\tcblisting{texexp,#1}}{\endtcblisting}

\newenvironment{example1}[3][]{\tcblisting{example1={#2}{#3},#1}}%
    {\endtcblisting}
\newenvironment{texexample}[3][]{\noindent\tcblisting{example1={#2}{#3},#1}}%
    {\endtcblisting }

\newenvironment{texcode}[3][listing only]{\noindent\tcblisting{example1={#2}{#3},#1}}%
    {\endtcblisting }
\let\luaexample\texexample
\let\endluaexample\endtexexample
%%
\ExplSyntaxOn
\cs_if_exist:cTF {printindex}
  { }
  {
    \RequirePackage{makeidx}[2000/03/29]
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \cvaref#1{\textcolor{\phdd_key_color_command_tl}{#1}}
\cs_set:Npn \colOpt#1{\textcolor{\phdkv@col@opt}{#1}}
\ExplSyntaxOff
\lstdefinestyle{tcbdocumentation}{language={[LaTeX]TeX},
    aboveskip={0\p@ \@plus 6\p@},
    belowskip={0\p@ \@plus 6\p@},
    columns=fixed,
    keepspaces=true,
    breaklines=true,
    prebreak={\Righttorque},
    postbreak={\space\Lefttorque},
    breakatwhitespace=true,
    basicstyle=\ttfamily\footnotesize,
    extendedchars=true,
    nolol,
    inputencoding = \phdkv@listingencoding}
\DeclareRobustCommand\phdcs[1]{{\color{thecs}{%
           \texttt{\char`\\\detokenize{#1}}}}}
\ExplSyntaxOn
\cs_gset_eq:NN \phd@doc@orig@meta\meta%
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \meta #1 {
   \group_begin:
   \def\meta@font@select{\rmfamily\upshape\color{themeta}}
   \phd@doc@orig@meta{#1}
   \group_end:
}
\cs_set:Npn \marg #1
  {
    \group_begin:
      \ttfamily\char`\{
      \def\meta@font@select{\rmfamily\itshape\color{theoarg}}
      \phd@doc@orig@meta{#1}
      \ttfamily\char`\}
    \group_end:
  }
\cs_set:Npn \oarg #1
  {
    {\ttfamily[}\meta{#1}{\ttfamily]}
  }
\ExplSyntaxOff



\newif\ifphd@doc@toindex
\newif\ifphd@doc@colorize
\newif\ifphd@doc@annotate
 \ExplSyntaxOn
\cxset{
  pageshort/.store~in           = \phdkv@text@pageshort,
  doclang/.cd,
  color/.store~in               = \phdkv@text@color,
  colors/.store~in              = \phdkv@text@colors,
  environment~content/.store~in = \phdkv@text@envcontent,
  environment/.store~in         = \phdkv@text@env,
  environments/.store~in        = \phdkv@text@envs,
  key/.store~in                 = \phdkv@text@key,
  keys/.store~in                = \phdkv@text@keys,
  index/.store~in               = \phdkv@text@index,
  pageshort/.store~in           = \phdkv@text@pageshort,
  value/.store~in               = \phdkv@text@value,
  values/.store~in              = \phdkv@text@values,
  % List Styles text in english
  lst~styles/.store~in          = \phd@text@lststyles,
}
\cxset{doclang/lst~styles       = Listings~Styles}
\ExplSyntaxOff
\cxset
  {
    documentation listing options/.store in=\phdkv@doclistingoptions,%
    documentation listing style/.style={documentation listing options={style=#1}},%
    documentation minted style/.store in=\phdkv@docmintstyle,
    documentation minted options/.store in=\phdkv@docmintoptions,
  }
\cxset{
    % indexing
    index actual/.store in   = \idx@actual,
    index quote/.store in    = \idx@quote,
    index level/.store in    = \idx@level,
    index format/.store in   = \idx@format,
    index encap/.store in    = \idx@encap,
    index colorize/.is if    = phd@doc@colorize,%
    index annotate/.is if    = phd@doc@annotate,%
  }
 \cxset{
    index default settings/.style = {index actual={@},
                                    index quote={"},
                                    index level={!}},
    index german settings/.style = {index actual={=},
                                    index quote={!},
                                    index level={>}},
    index doc settings/.style    = {index actual={=},
                                    index quote={!},
                                    index level={>}},
 }
 \cxset{
   % indexing
   index actual  = {@},
   index quote   = {!},
   index level   = {>},
   index doc settings,
 }
\cxset{
    doc left/.dimstore in                   = \phdkv@doc@left,
    doc right/.dimstore in                  = \phdkv@doc@right,
    doc left indent/.dimstore in            = \phdkv@doc@indentleft,
    doc right indent/.dimstore in = \phdkv@doc@indentright,
    doc head command/.style       = {doc@head@command/.style={#1}},
    doc head environment/.style   = {doc@head@environment/.style={#1}},
    doc head key/.style           = {doc@head@key/.style={#1}},
    doc head/.style               = {doc head command= {#1},
                                     doc head environment={#1},
                                     doc head key={#1}},
    doc description/.store in     = \phdkv@doc@description,%
    doc into index/.is if         = phd@doc@toindex,%
  }
\cxset{doc description = {some test}}
\cxset{
  docexample/.style={colframe=ExampleFrame,colback=ExampleBack,fontlower=\footnotesize},
  documentation minted style=,
  documentation minted options={tabsize=2,fontsize=\small},
  english language/.code={\cxset{doclang/.cd,
    color=color,colors=Colors,
    environment content=environment content,
    environment=environment,environments=Environments,
    key=key,keys=Keys,
    index=Index,
    pageshort={P.},
    value=value,values=Values}},
 }
\AtBeginDocument{%
  \csname phd@doc@index@\idx@format\endcsname%
  \hypersetup{
    citecolor  = \phdkv@colhyper,
    linkcolor  = \phdkv@colhyper,
    urlcolor   = \phdkv@colhyper,
    filecolor  = \phdkv@colhyper,
    menucolor  = \phdkv@colhyper
}}
\lstdefinestyle{smalldisplay}{%
  numbers=none,
  backgroundcolor=\color{thecodebackground},
  xleftmargin=0pt}

\tcbset{documentation listing style=smalldisplay}
\tcbset{
   docexample/.style={%
   colframe=thecodeframe,
   colback=thecodebackground,
   before skip=\medskipamount,
   after skip=\medskipamount,
   fontlower=\footnotesize,
   }
}


\ExplSyntaxOn
\cs_set:Npn \phdindexprintca #1#2#3 {
  \ifphd@doc@colorize
    \textcolor{#2}
    { \texttt{#1} }
  \else
    \texttt{#1}
  \fi
  \ifphd@doc@annotate\
   #3
  \fi
}

\cs_set:Npn \phd_index_print_c#1#2{%
  \ifphd@doc@colorize
    \textcolor{#2}{\texttt{#1}}
  \else\texttt{#1}
  \fi%

}

\NewDocumentCommand{\phdindexprintcomc}{ m }
  {
    \phd_index_print_c {\phdcs{#1}}{\phdd_key_color_command_tl}
  }
%%


\cs_new:Npn \phd_print_com #1
  {
    \textcolor{black}{\ttfamily\bfseries\phdcs{#1}}%\phdd_key_color_command_tl
  }
\ExplSyntaxOff

\ExplSyntaxOn
\newrobustcmd{\phdindexprintenvca}[1]
  {
    \phdindexprintca{#1}{\phdd_key_color_environment_tl}{\phdkv@text@env}
  }

\newrobustcmd{\phdindexprintenvc}[1]
  {
    \phd_index_print_c{#1}{\phdd_key_color_environment_tl}
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \phd_print_env#1
  {
    \textcolor{\phdd_key_color_environment_tl}{\ttfamily\bfseries#1}
  }

\newrobustcmd{\phdindexprintkeyca}[1]
  {
    \phdindexprintca{#1}{\phdd_key_color_tl}{\phdkv@text@key}
  }

\newrobustcmd{\phdindexprintkeyc}[1]{\phd_index_print_c{#1}{\phdd_key_color_tl}}

\newrobustcmd {\phdindexprintvalca}[1]
  {
    \phdindexprintca{#1}{\phdd_key_color_value_tl}{\phdkv@text@value}
  }

\newrobustcmd {\phdIndexPrintValC}[1]
  {
    \phd_index_print_c{#1}{\phdd_key_color_value_tl}
  }

\cs_set:Npn \phd@Print@Val #1
  {
    \textcolor {\phdd_key_color_value_tl} {\ttfamily\bfseries#1}
  }

\newrobustcmd{\phdindexprintcolca}[1]
  {
    \phdindexprintca{#1}{\phdd_key_color_color_tl}{\phdkv@text@color}
  }

\cs_set:Npn \phdindexcom #1
  {
    \ifphd@doc@toindex
      \index
       {
         #1
         \idx@actual
         \phdindexprintcomc{#1}
       }
    \fi
  }
\cs_set:Npn \phd_index_env #1
  {
    \ifphd@doc@toindex
      \index
        {#1
          \idx@actual
          \phdindexprintenvca{#1}
        }
      \index
        {
          \phdkv@text@envs
          \idx@level#1
          \idx@actual
          \phdindexprintenvc{#1}
        }
    \fi
  }
\cs_set:Npn \phd_index_key_path #1#2
  {
    \ifphd@doc@toindex\index{#2\idx@actual
      \phdindexprintkeyca{#2}}
      \index{\phdkv@text@keys
         \idx@level#1
        \idx@actual
        \phdindexprintkeyc{/#1/}
        \idx@level#2
        \idx@actual
        \phdindexprintkeyc{#2}
      }
    \fi
  }

\cs_set:Npn \phd_index_col #1
  {
    \ifphd@doc@toindex
    \index
      {
        #1
        \idx@actual
        {\phdindexprintcolca{#1}}
        \encapchar hyperpage
      }
    \index
      {
        \phdkv@text@colors \idx@level #1
        \idx@actual{\phdindexprintcolc {#1}\protect\thinspace\protect\docColorBox{#1}}
        \encapchar hyperpage
      }
    \fi
  }

\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \phd_brackets #1
  {
    {\ttfamily\char`\{}#1{\ttfamily\char`\}}
  }
\ExplSyntaxOff
\ExplSyntaxOn
\newenvironment{phdd_manual_entry}%
  {%
   \begin{list}{}
    {%
     \setlength{\leftmargin}{\phdkv@doc@left}%
     \setlength{\itemindent}{0pt}%
     \setlength{\itemsep}{0pt}%
     \setlength{\parsep}{0pt}%
     \setlength{\rightmargin}{\phdkv@doc@right}%
    }\item
  }
  {\end{list}}

\cs_set:Npn \phd_manual_top #1
  {
    \itemsep=0pt
    \parskip=0pt
    \item\strut{#1}\par
    \topsep=0pt
  }

\cs_set:Npn \phd_doc_do_description:
  {
    \ifx\phdkv@doc@description\@empty
    \else
      \tcblower
      \raggedleft(\phdkv@doc@description)
    \fi
  }
\ExplSyntaxOff
\ExplSyntaxOn
\newtcolorbox{phd@doc@head}[1]
 {
  blank,
  colback=red!10,
  colframe=white,
  code={\tcbdimto\tcb@temp@grow@left{-\phdkv@doc@indentleft}%
        \tcbdimto\tcb@temp@grow@right{-\phdkv@doc@indentright}},
  grow~to~left~by=\tcb@temp@grow@left,%
  grow~to~right~by=\tcb@temp@grow@right,
  sidebyside,
  sidebyside~align=top,
  sidebyside~gap=-\tcb@w@upper@real,
  phantom=\phantomsection,%
  enlarge~bottom~by=-0.2\baselineskip,
  #1
 }
\ExplSyntaxOff
\ExplSyntaxOn
\newenvironment{docCmd}[3][]{
  \cxset{#1}%
  \begin{phdd_manual_entry}%
  \begin{phd@doc@head}{doc@head@command}%
  \phd_print_com{#2}
  \phdindexcom{#2}
  \protected@edef\@currentlabel{\noexpand\phdcs{#2}}
  \label{com:#2}{\ttfamily #3}%
  \phd_doc_do_description:%
  \end{phd@doc@head}}%
  {\end{phdd_manual_entry}}
\ExplSyntaxOff

\ExplSyntaxOn
\newenvironment{docCmd*}
  {
    \begingroup
    \phd@doc@toindexfalse
    \begin{docCommand}
  }
  {
    \end{docCommand}
    \endgroup
  }

\newenvironment{docEnv}[3][]{\cxset{#1}%
  \begin{phdd_manual_entry}%
  \begin{phd@doc@head}{doc@head@environment}%
  \strut
  \phdcs{begin}
  \phd_brackets{\phd_print_env{#2}}
  \phd_index_env{#2}
  \protected@edef\@currentlabel{#2}\label{env:#2}{\ttfamily #3}%\par%
  \strut~~\meta{\phdkv@text@envcontent}%\par%
  \strut\phdcs{end}
  \phd_brackets{\phd_print_env{#2}}%
  \phd_doc_do_description:%
  \end{phd@doc@head}}%
  {\end{phdd_manual_entry}}
\ExplSyntaxOff
\newenvironment{docEnv*}
  {
    \bgroup
    \phd@doc@toindexfalse
    \begin{docEnv}
  }
  { \end{docEnv}\egroup }

%% \end{docEnvironment}
\ExplSyntaxOn
\renewenvironment{docKey}[4][\@empty]{
  \begin{phdd_manual_entry}%
    \cxset{doc~description={#4}}%
      \begin{phd@doc@head}{doc@head@key}
        \ifx#1\@empty%
          \phd_print_key:n {#2}
          \phd_index_key{#2}
          \protected@edef\@currentlabel{#2}
          \label{key:#2}{\ttfamily #3}%
        \else
          \phd_print_key:n {/#1/#2}
          \phd_index_key_path{#1}{#2}
          % redefine current label
          \protected@edef\@currentlabel{/#1/#2}
          % label
          \label{key:/#1/#2}{\ttfamily#3}%
        \fi%
     \phd_doc_do_description:
     \end{phd@doc@head}}
  {\end{phdd_manual_entry}}

\renewenvironment{docKey*}
  {\bgroup\phd@doc@toindexfalse\begin{docKey}}
  {\end{docKey}\egroup}

\cs_set:Npn \phdmakedocSubKey#1#2{%
  \newenvironment{#1}[4][\@empty]{%
    \ifx##1\@empty
      \cs_set:Npn \phd@key@path {#2}
    \else
     \cs_set:Npn \phd@key@path{#2/##1}
    \fi%
    \begin{docKey}[\phd@key@path]{##2}{##3}{##4}}%
    {\end{docKey}}%
  \newenvironment{#1*}{\bgroup\phd@doc@toindexfalse\begin{#1}}{\end{#1}\egroup}%
}
\ExplSyntaxOff

\ExplSyntaxOn
\cs_set:Npn \@@_doc_aux_env: #1
  {
    \phd_print_env{#1}
    \phd_index_env{#1}
  }

\cs_set:Npn \@@_doc_aux_env_star #1
  {
    \phd_print_env{#1}
  }
\NewDocumentCommand\docAuxEnv { s m }
  {
    \IfBooleanTF {#1}
    {\@@_doc_aux_env_star{#2} }
    {\@@_doc_aux_env: {#2} }
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \phd_print_key:n #1
  {
    \textcolor{\phdd_key_color_tl}{\ttfamily\bfseries#1}
  }

\cs_set:Npn \phd_index_key #1
  {
    \ifphd@doc@toindex
      \index{#1\idx@actual \phdindexprintkeyca{#1}}
      \index
        {
          \phdkv@text@keys
          \idx@level
          #1
          \idx@actual
          \phdindexprintkeyc{#1}
        }
    \fi
  }

\NewDocumentCommand {\@@_doc_aux_key:} {O{\@empty} m}
  {%
     \ifx#1\@empty%
       \phd_print_key:n {#2}
       \phd_index_key {#2}%
     \else%
       \phd_print_key:n {/#1/#2}
       \phd_index_key_path {#1}{#2}%
  \fi
  }%

\newcommand{\@@_doc_aux_key_star}[2][\@empty]{%
  \ifx#1\@empty%
   \phd_print_key {#2}%
  \else%
   \phd_print_key {/#1/#2}%
  \fi}%

\DeclareDocumentCommand {\docAuxKey} { s O{} m }
  {
    \IfBooleanTF {#1}
      { \@@_doc_aux_key_star {#3} }
      { \@@_doc_aux_key: [#2]{#3} }
  }
\ExplSyntaxOff
\ExplSyntaxOn
\setrefcountdefault{-1}
\cs_set:Npn \phd_ref_doc #1 #2
{
  \IfRefUndefinedExpandable {#2}
    {{\bfseries\phdd_typeset_command {#1} }}
    {
      \hyperref[#2]
      {{\color{themacrocolor}\texttt{\ref*{#2}}}%
      \ifnum\getpagerefnumber{#2}=\thepage
      \else
        \textsuperscript
      {
        \ding{213}\,
        \phdkv@text@pageshort\,
        \pageref*{#2}
      }
     \fi
   }
  }
 }

\cs_set:Npn \phd_ref_doc_star#1
  {
    \hyperref[#1]{\texttt{\ref*{#1}}}
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \ref_com: #1
  {
    \phd_ref_doc {#1} {com:#1}
  }

\cs_set:Npn \ref_com_star #1
  {
    \phd_ref_doc_star{com:#1}
  }
\DeclareDocumentCommand {\refCmd} { s m }
  {
    \IfBooleanTF {#1}
    { \ref_com_star {#2} } { \ref_com: {#2} }
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \refEnv: #1 {\phd_ref_doc{env:#1}}
\cs_set:Npn \refEnv_star#1{\phd_ref_doc_star{env:#1}}

\DeclareDocumentCommand {\refEnv} { s m }
  {
    \IfBooleanTF {#1}
      { \refEnv_star {#2} }
      { \refEnv: {#2}     }
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \refKey@#1{\phd_ref_doc{key:#1}}
\cs_set:Npn \refKey@star#1{\phd_ref_doc_star{key:#1}}
\DeclareDocumentCommand {\refKey} { s m }
  {
    \IfBooleanTF { #1 }
      { \refKey@star {#2} }
      { \refKey@ {#2}       }
  }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \refAux#1{\textcolor{\phdkv@colhyper}{\ttfamily #1}}
\cs_set:Npn \refAuxcs#1{\textcolor{\phdkv@colhyper}{\phdcs{#1}}}
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \phd@doc@index@pgf@
  {
    \c@IndexColumns=2%
    \cs_set:Npn \theindex
      {
        \@restonecoltrue
        \columnseprule 0pt
        \columnsep 28\p@
        \twocolumn[\index@prologue]%
        \parindent -30pt%
        \columnsep 15pt%
        \parskip 0pt plus 1pt%
        \leftskip 30pt%
        \rightskip 0pt plus 2cm%
        \small%
        \cs_set:Npn \@idxitem{\par}%
        \let\item\@idxitem\ignorespaces
      }
    \cs_set:Npn \endtheindex{\onecolumn}%
    \cs_set:Npn \noindexing{\let\index=\@gobble}%
  }
\cs_set:Npn \phd@doc@index@pgfsection{%
  \cs_set:Npn \index@prologue
    {
      \section*{\phdkv@text@index}
      \addcontentsline{toc}{section}{\phdkv@text@index}
      \par\noindent%
   }
  \phd@doc@index@pgf@
}
\cs_set:Npn \phd@doc@index@pgfchapter{%
  \cs_set:Npn \index@prologue{\ifdefined\phantomsection\phantomsection\fi
  \@makeschapterhead{\phdkv@text@index}
  \addcontentsline{toc}{chapter}{\phdkv@text@index}}%
  \phd@doc@index@pgf@%
}
\let\phd@doc@index@pgf=\phd@doc@index@pgfsection%
\cs_set:Npn \phd@doc@index@doc
  {
    \let\phdindexcom      = \SpecialMainIndex
    \let\phd_index_env    = \SpecialMainEnvIndex
    \cxset{index german settings}
    \EnableCrossrefs
    \PageIndex
}

\cs_set:Npn \phd@doc@index@off{}%
\ExplSyntaxOff
\tcbset{%
  reset@documentation/.style={%
    },
  documentation listing style=tcbdocumentation,
  doc left=2em,
  doc right=0pt,
  doc left indent=-2em,
  doc right indent=0pt,
  doc head=,
  before doc body=,
  after doc body=,
  doc description=,
  doc into index=true,
  doc marginnote=,
  initialize@reset=reset@documentation,
  color option=Option,
  color definition=Definition,
  color hyperlink=Hyperlink,
  index command=\index,%
  index format=pgf,
  index default settings,
  index colorize=false,
  index annotate=true,
  english language,
  keywords bold,
}
\cxset{%
    reset@documentation/.style={%
    index format=pgf,
    english language,
    documentation listing style = tcbdocumentation,
    index default settings,
    color option=Option,
    color definition=Definition,
    color hyperlink=Hyperlink,
    before example=\par\smallskip,
    after example=,
    doc left=0em,
    doc right=0pt,
    doc left indent=-2em,
    doc right indent=0pt,
    doc head=,
    doc description=,
    doc into index=true,
    index colorize = true,
    index annotate= false,
    },
}
\cxset{reset@documentation}
\cxset{index format  =  pgfchapter,
       index actual={=},
       index level = {>},
       index quote = {!},
       index german settings,
       color hyperlink = thelinkcolor,  % links with color palette
       color definition =thelinkcolor,  % links with color palette
       pageshort       = {$\sigma{}$},
   }
\def\main#1{{\color{red}\uline{#1}}}

\ExplSyntaxOn
\cs_set:Npn \@@_print_docfile:n #1 {%
    \begingroup
    \color{thered}
    \ttfamily {\tl_to_str:n{#1}}
    \endgroup
}

\cs_set:Npn \docFile #1
  {
    \begingroup
      \@@_print_docfile:n {#1}
    \endgroup
    \index{files:\idx@level\protect\detokenize{#1}\encapchar hyperpage}
  }
\cs_set:Npn \docExtension #1
  {
    \texttt {#1}
    \index{file~extensions\idx@level#1\encapchar hyperpage}
  }
\let\docextension\docExtension
\ExplSyntaxOff
 \ExplSyntaxOn
 \DeclareDocumentCommand\indexmany {o m }
 {
   \clist_gset:Nn \indexmany: {#2}
   \IfValueTF {#1}
    {
      \clist_map_inline:Nn\indexmany:
        {
          \index{#1\idx@level##1}\index{##1}
        }
    }
    {
     \clist_map_inline:Nn\indexmany:
      {
        \index{##1}
      }
    }
 }
 \ExplSyntaxOff

\DeclareRobustCommand{\idxlanguage}[1]{%
  \index{\string #1 (script)}
  \index{scripts:\idx@level#1\encapchar hyperpage}
  \texttt{#1}\xspace}%

\newcommand{\idxboth}[2]{\mbox{}\index{#1 #2}\index{#2\idx@level#1}}
\newcommand{\idxbothbegin}[2]{\mbox{}\index{#1 #2|(}\index{#2\idx@level #1|(}}
\newcommand{\idxbothend}[2]{\mbox{}\index{#1 #2|)}\index{#2\idx@level #1|)}}
\ExplSyntaxOn
\cs_gset_eq:NN \indexboth\idxboth
\cs_gset_eq:NN \indexbothbegin \idxbothbegin
\cs_gset_eq:NN \indexbothend\idxbothend
\ExplSyntaxOff
\def\cmd#1{\texttt{\string#1}\indexcommand{#1}}
\newcommand{\cmdI}[2][]{%
  \def\first@arg{#1}%
  \ifx\first@arg\@empty
    \texttt{\string#2}\indexcommand[#2]{#2}%
  \else
    \texttt{\string#2}\indexcommand[#1]{#2}%
  \fi
}
\newcommand{\cmdX}[1]{\cmdI[$\string#1$]{#1}}
\newcommand{\cmdW}[1]{\cmdI[$\string\blackacc{\string#1}$]{#1}}
\newcommand{\cmdIp}[2][]{%
  \def\first@arg{#1}%
  \ifx\first@arg\@empty
    \texttt{\string#2}\indexpunct[#2]{#2}%
  \else
    \texttt{\string#2}\indexpunct[#1]{#2}%
  \fi
}
\begingroup
 \catcode`\|=0
 \catcode`\\=12
 |gdef|sanitize#1#2!!!{%
   |ifx#1\%
     #2%
   |else
     #1#2%
   |fi
}
|endgroup
 \ExplSyntaxOn
\NewDocumentCommand \indexcommand { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    %\def\first@arg{#1}%
    \IfNoValueTF{#1}
    {
       \exp_after:wN
          \index {
             \sanitized
             \idx@actual
             {\expandafter
             \phdIndexPrintCs{\sanitized}}
             \encapchar~hyperpage
             }%
    }
    {
       \expandafter
         \index\expandafter{\sanitized\idx@actual{\string\verb+\string#2+ (#1)}\encapchar~hyperpage}%
    }
  }
 \ExplSyntaxOff

\NewDocumentCommand \indexcypriot { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Cypriot\idx@level\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{Cypriot>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
\NewDocumentCommand \indexstaves { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Staves>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{Staves>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }

\newrobustcmd\phdIndexPrintCs[1]{{%
  \catcode`\_=12\relax\catcode`\@11\relax\ttfamily\char`\\\scantokens{#1}\unskip}}
\NewDocumentCommand \indexlinearb { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \index{Linear B\idx@level\string#1\idx@actual
        {\string\verb+\string#2+}\encapchar hyperpage}
    }
    { % index
         \index{Linear B
         \idx@level
         \string #1
         \idx@actual
         {\phdIndexPrintCs{\sanitized} (#1)}\encapchar hyperpage}%
       % typeset
       \string#2 & (#1)
    }
  }
\NewDocumentCommand \indexugar { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Ugarite>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{Ugarite>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }

\NewDocumentCommand \indexvarpersian { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{var Persian>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{var Persian>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
\NewDocumentCommand \indexsoutharabian { o m }
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{South Arabian>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{South Arabian>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
\NewDocumentCommand \indexmathcmd { o m }
  { \def\cmd@to@cs#1#2{\char\number`#2\relax}
    \IfNoValueTF{#1}
    {
       \index{\string #2\idx@actual{\string\verb+\string#2+
       ($#2$)}\encapchar hyperpage}
       % put command also
      \index{\string#1\idx@actual{\string\verb+\string#2+ ($\string#2$)*}\encapchar hyperpage}
    }
    {
      % with index level
      \index{#1\idx@level\protect\detokenize{#2}
            \idx@actual{\protect\detokenize{#2}($#2$)}\encapchar hyperpage}%
      % command alone an symbol in parentheses
      \index{\cmd@to@cs#2\idx@actual{\string\verb+\string#2+ ($\string#2$)}\encapchar hyperpage}%
    }
  }
\ExplSyntaxOn
\cs_gset_eq:NN \indexaccent\indexcommand
\cs_new:Npn \CLSLpipe {|}
\ExplSyntaxOff
  \newcommand{\indexpunct}[2][]{%
    \def\first@arg{#1}%
    \def\second@arg{#2}%
    \ifx\first@arg\@empty
      \ifx\second@arg\CLSLpipe
        \index{_=\magicvertname}%
      \else
        \index{_=\string\verb+\string#2+}%
      \fi
    \else
      \ifx\second@arg\CLSLpipe
        \index{_=\magicvertname{} (#1)}%
      \else
        \index{_=\string\verb+\string#2+ (#1)}%
      \fi
    \fi
  }
\newcommand\FC{\pkgname{fc}}
\newcommand\VIET{\pkgname{vietnam}}

\ExplSyntaxOn
  \int_new:c {totalsymbols}
  \cs_new:Npn \incsyms { \int_gincr:c {totalsymbols} }
  \cs_new:Npn \thetotalsymbols {\int_use:c {totalsymbols} }
\ExplSyntaxOff
\newcommand*{\graybox}{\textcolor{thecodebackground}{\rule[-\adp]{\awd}{\aht}}}

\newlength\awd
\newlength\aht
\newlength\adp
\settowidth{\awd}{\normalfont a}
\settoheight{\aht}{\normalfont a}
\settodepth{\adp}{\normalfont a}
\advance\adp by 0.06pt    % In Computer Modern, "a" extends slightly below its bounding box.
\advance\aht by \adp

\gdef\blackacchack#1{#1a\llap{\graybox}}
\gdef\blackacc#1{#1{\graybox}}
\gdef\blackacctwo#1{#1{\graybox}{\graybox}}
\def\E#1{%
  \begingroup
    \lccode`|=`\\
    \def\EStruename{ES#1T}
    \lowercase{\incsyms\index{#1=\string\verb+\string|#1+ (\string|\EStruename)}}
  \endgroup
  \csname ES#1T\endcsname
  & \csname ES#1D\endcsname
  &
  \ttfamily\expandafter\string\csname#1\endcsname
}
\def\Kcyp@opt@arg[#1]#2{\incsyms\indexcypriot[\textcypr{#1}]{#2}#1 &\ttfamily\string#2}
\def\Kcyp@no@opt@arg#1{\incsyms\indexcypriot[\textcypr{#1}]{#1}#1 &\ttfamily\string#1}
\def\Kcyp{\@ifnextchar[{\Kcyp@opt@arg}{\Kcyp@no@opt@arg}}
\ExplSyntaxOn

\cs_set:Npn \Kstav_opt_arg [#1]#2
  {
    \incsyms\indexstaves[#1]{#2}# 1 &\ttfamily\string#2
  }

\cs_set:Npn \Kstav_no_opt_arg #1
  {
    \incsyms\indexstaves[#1]{#1}#1 &\ttfamily\string#1
  }

\NewDocumentCommand\Kstav {o m} {
  \IfNoValueTF {#1}
    {
      \Kstav_no_opt_arg {#2}
    }
    {
      \Kstav_opt_arg [#1] {#2}
    }
}
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \K@opt@arg#1#2
   {
      \incsyms
      \indexcommand[#1]{#2}#1 &\footnotesize\ttfamily\string#2
   }

\cs_set:Npn \K@no@opt@arg#1
  {
    \incsyms
    \indexcommand[#1]{#1}#1 &\footnotesize\ttfamily\string#1
  }
\NewDocumentCommand {\K} { o m }
{
  \IfNoValueTF {#1} { \K@no@opt@arg {#2} } {\K@opt@arg {#1}{#2}}
}
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \Kp #1
   {
       \incsyms
       \indexpunct[$#1$]{#1}#1 &\footnotesize\ttfamily\string#1
    }
\ExplSyntaxOff
\def\KED[#1][#2][#3]#4 {%
   \incsyms\indexcommand[#1]{#2}#3 &\small\ttfamily\string#4%
}


\def\Kfeyn#1{\incsyms\indexcommand[\string\feyn{#1}]{\feyn{#1}}\feyn{#1} &\small\ttfamily\string\feyn\string{\string#1\string}}

%%
%%
%%
%%
%%    \begin{macrocode}
%%

%%\index{arrows}
%%\label{var-arrows}
%%\begin{tabular}{*3{ll}}
%%\X\vardownarrow\downarrow                   &  \X\varlongleftrightarrow \longleftrightarrow &  \X\varnwarrow \nwarrow         \\
%% \X\varhookleftarrow \hookleftarrow           &  \X\varlongmapsfrom \longmapsfrom$^*$         &  \X\varrightarrow \rightarrow   \\
%% \X\varhookrightarrow \hookrightarrow         &  \X\varlongmapsto \longmapsto                 &  \X\varsearrow \searrow         \\
%% \X\varleftarrow \leftarrow                   &  \X\varlongrightarrow \longrightarrow         &  \X\varswarrow \swarrow         \\
%% \X\varleftrightarrow \leftrightarrow         &  \X\varmapsfrom \mapsfrom$^*$                 &  \X\varuparrow \uparrow         \\
%% \X\varlonghookrightarrow \longhookrightarrow &  \X\varmapsto \mapsto                         &  \X\varupdownarrow \updownarrow \\
%% \X\varlongleftarrow \longleftarrow           &  \X\varnearrow \nearrow                       &                                 \\
%%\end{tabular}

\ExplSyntaxOn
  \cs_set:Npn \Ks #1
    {
      \incsyms
      \indexcommand[\string\encone{\string#1}] {#1}
      { \encone{#1} }  & \ttfamily\string#1$^*$
    }
\ExplSyntaxOff
\ExplSyntaxOn
\cs_set:Npn \Kt #1
  {
    \incsyms
    \indexcommand[\string\encone{\string#1}] {#1}
    {\encone{#1}} & \ttfamily \string #1
  }
\ExplSyntaxOff
\def\Kv#1{\incsyms\indexcommand[\string\encfive{\string#1}]{#1}{\encfive{#1}} &\ttfamily\string#1}
\def\Kgr@opt@arg[#1]#2{\incsyms\indexcommand[\string\encgreek{\string#1}]{#2}{\encgreek{#1}} &\ttfamily\string#2}
  \def\Kgr@no@opt@arg#1{\incsyms\indexcommand[\string\encgreek{\string#1}]{#1}{\encgreek{#1}} &\ttfamily\string#1}

\def\Kgr{\@ifnextchar[{\Kgr@opt@arg}{\Kgr@no@opt@arg}}
\def\KN[#1][#2]#3{\incsyms\indexcommand[\string#1]{#3} #1 & #2 & \ttfamily\string#3}
\def\KNbig[#1][#2]#3{\incsyms\indexcommand[\string#2]{#3} #1 & #2 & \ttfamily\string#3}

\def\Knoidx#1{\incsyms#1 &\ttfamily\string#1}
\ExplSyntaxOn
\cs_set:Npn \N@opt@arg #1 #2
  {
    \incsyms
    \indexcommand[$\string#1$]{#2}
    $#1$ & $\Big#1$ &\footnotesize\ttfamily\string#2
  }

\cs_set:Npn \N@no@opt@arg#1
  {
    \incsyms\indexcommand[$\string#1$]{#1}
    $#1$ & $\Big#1$ &\ttfamily\string#1
  }

\NewDocumentCommand {\N} { o m }
  {
    \IfNoValueTF {#1}
      { \N@no@opt@arg {#2}  }
      { \N@opt@arg {#1}{#2} }
  }

\ExplSyntaxOff
  \def\Nn[#1]#2{%
    \incsyms\indexcommand[$\string\nathdouble\string#1$]{#2}%
    $\nathdouble#1$ & $\nathdouble{\Big#1}$ & \ttfamily\string#2%
 }

  \def\Nnt#1[#2]#3{%
    \incsyms\indexcommand{\triple}%
    $\nathtriple#2$ & $\nathtriple{\Big#2}$ &
    \ttfamily\expandafter\string\csname#1triple\endcsname\string#3}
  \def\Np@opt@args[#1]{\@ifnextchar[{\Np@two@opt@args[#1]}{\Np@one@opt@arg[#1]}}
  \def\Np@two@opt@args[#1][#2]#3{\incsyms\index{_=\string#2{} ($\string#1$)}$#1$ & $\Big#1$ &\ttfamily\string#3}
  \def\Np@one@opt@arg[#1]#2{\incsyms\indexpunct[$\string#1$]{#2}$#1$ & $\Big#1$ &\ttfamily\string#2}
  \def\Np@no@opt@args#1{\incsyms\indexpunct[$\string#1$]{#1}$#1$ & $\Big#1$ &\ttfamily\string#1}
  \def\Np{\@ifnextchar[{\Np@opt@args}{\Np@no@opt@args}}
  \def\Nbig[#1]#2{\incsyms\indexcommand[$\string\Big\string#1$]{#2}$#1$ & $\Big#1$ &\ttfamily\string#2}
\ExplSyntaxOn
\cs_set:Npn \Q@opt@arg#1#2
  {
    \incsyms\indexaccent[\string\blackacchack{\string#1}]{#2}#1{A}#1{a} &
           \ttfamily\string#2\string{A\string}\string#2\string{a\string}
  }

\cs_set:Npn \Q@no@opt@arg#1
  {
    \incsyms\indexaccent[\protect\blackacchack{\string#1}]{#1}#1{A}#1{a} &
    \ttfamily\string#1\string{A\string}\string#1\string{a\string}
  }

\NewDocumentCommand {\Q} { o m }
  {
    \IfNoValueTF {#1}
      { \Q@no@opt@arg {#2} }
      { \Q@opt@arg    {#1}{#2} }
  }
\ExplSyntaxOff
\newif\ifHARM
\newcommand\HARM{\pkgname{harmony}}
\IfFileExists{harmony.sty}
  {\HARMtrue
   \let\orignewcommand=\newcommand
   \let\newcommand=\DeclareRobustCommand
   %\savesymbol{HH}
   \usepackage{harmony}
   %\restoresymbol{harm}{HH}
   \let\newcommand=\orignewcommand
  }
  {}
\ExplSyntaxOn
\cs_set:Npn \Qc#1
  {
    \incsyms
    \indexaccent[\string\blackacc{\string#1}]{#1} #1 {A} #1{a}  &
    \ttfamily
         \string#1
         \token_to_str:N {
            A
         \token_to_str:N }
         \token_to_str:N #1
         \token_to_str:N {
           a
         \token_to_str:N }
  }
\ExplSyntaxOff
\def\Qe[#1][#2]#3{%
  \incsyms
  \incsyms
  \index{_=\string#2{} (\string\blackacchack{\string#1})}%
  #3{A}#3{a} &
  \ttfamily\string#3\string{A\string}\string#3\string{a\string}}
\def\Qt#1{\incsyms\indexaccent[\string\encone{\string\blackacc{\string#1}}]{#1}{\encone{#1{A}#1{a}}} &
          \ttfamily\string#1\string{A\string}\string#1\string{a\string}}
\def\Qpc#1#2{\incsyms\indexcommand{#2}{\raisebox{1pt}{\tiny[#1]}} &
             \ttfamily\string#2\string{A\string}\string#2\string{a\string}}
\def\Qpfc[#1]#2{\incsyms\indexaccent[\string\encfour{\string\blackacchack{\string#1}}]{#2}\encfour{#1{A}#1{a}} &
           \ttfamily\string#2\string{A\string}\string#2\string{a\string}}
\newif\ifFC\FCfalse
\ifFC
  \def\Qiv#1#2{\incsyms\indexaccent[\string\encfour{\string\blackacchack{\string#1}}]{#1}\encfour{#1{A}#1{a}} &
               \ttfamily\string#1\string{A\string}\string#1\string{a\string}$^#2$}

  \def\QivBAR#1{\incsyms\index{_=\string\magicVertname{}
                (\string\encfour{\string\blackacchack{\string\FCbar}})}
                \encfour{\FCbar{A}\FCbar{a}} &
                \ttfamily\string\|\string{A\string}\string\|\string{a\string}$^#1$}
\else
  \def\Qiv#1#2{\Qpc{T4}{#1}$^#2$}
  \def\QivBAR#1{\Qpc{T4}{\|}$^#1$}
\fi
\newif\ifVIET\VIETfalse
\ifVIET
  \def\Qv#1#2{\incsyms\indexaccent[\string\encfive{\string\blackacchack{\string#1}}]{#1}{\encfive{#1{A}#1{a}}} &
              \ttfamily\string#1\string{A\string}\string#1\string{a\string}$^#2$}
\else
  \def\Qv#1#2{\Qpc{T5}{#1}$^#2$}\def\Qv#1#2{Err}%TODO
\fi
\ExplSyntaxOn
\cs_set:Npn \R@opt@arg#1#2
  {
    \incsyms
    \indexcommand[$\string#1$]{#2}
     $#1$ & $\displaystyle#1$ &\ttfamily\string#2
  }
 \cs_set:Npn \R@no@opt@arg#1
  {
    \incsyms
    \indexcommand[$\string#1$]{#1}
    $#1$ & $\displaystyle#1$ &\ttfamily\string#1
  }
\NewDocumentCommand {\R} { o m}
  {
    \IfNoValueTF {#1}
      { \R@no@opt@arg {#2}      }
      { \R@opt@arg    {#1} {#2} }
  }
\ExplSyntaxOff
%% T commands
\ExplSyntaxOn
\newcommand \indexDing [1]
  {
    \incsyms
    \indexcommand{\ding}
    \ding{#1} &
    \footnotesize\ttfamily\string\ding \string{#1\string}
  }
\ExplSyntaxOff
\def\Tding#1{%
  \incsyms\indexcommand[\ding{#1}]{\ding{#1}}\ding{#1}\indexcommand{\ding} &
  \ttfamily\string\ding\string{#1\string}%
}

\def\Tm#1{\incsyms\indexcommand{\maya}$\mayadigit{#1}$ &\ttfamily\string\maya\string{#1\string}}
\def\Tmoon#1{\incsyms\indexcommand{\MoonPha}\MoonPha{#1} &\ttfamily\string\MoonPha\string{#1\string}}
\newcommand{\indexTextcomp}[2][]{%
   \incsyms#1 &
   \indexcommand[#2]{#2}% necessary to put symbol \text
   #2%
   &\ttfamily\string#2
}
\newcommand{\Vp}[2][]{\incsyms#1 & \indexpunct[$#2$]{#2}#2 &\ttfamily\string#2}
\newcommand{\V}[2][]{\incsyms\indexcommand[#1]{#2}#1 & \indexcommand[#2]{#2}#2 &\ttfamily\string#2}
\newcommand{\Vl}[1]{\incsyms\indexcommand{#1}#1 & & \ttfamily\string#1}
\newcommand{\Vpl}[1]{\incsyms\indexpunct[$#1$]{#1}#1 & & \ttfamily\string#1}
\def\W@opt@arg[#1]#2#3{%
    \incsyms\indexaccent[$\string\blackacc{\string#1}$]{#2}%
    $#1{#3}$ &\ttfamily\string#2\string{#3\string}}

\def\W@no@opt@arg#1#2{%
    \incsyms\indexaccent[$\string\blackacc{\string#1}$]{#1}%
    $#1{#2}$ &\ttfamily\string#1\string{#2\string}}

\def\W{\@ifnextchar[{\W@opt@arg}{\W@no@opt@arg}}
\def\Wf#1#2{\incsyms\indexcommand{#1}$#1{#2}$ &\ttfamily\string#1\string{#2\string}}
\def\Ww#1#2#3{\incsyms\indexcommand{#2}$#1{#3}$ &\ttfamily\string#2\string{#3\string}}
\def\Wul#1#2#3{%
  \incsyms\indexaccent[$\string\blackacctwo{\string#1}$]{#1}%
  $#1{#2}{#3}$ &\ttfamily\string#1\string{#2\string}\string{#3\string}}

\ExplSyntaxOn
\def\X_opt_arg#1#2 {\incsyms\indexcommand[$\string#1$]{#2}$#1$ &\ttfamily\string#2}
\NewDocumentCommand{\X@no@opt@arg}{m}{\incsyms\indexcommand[$\string#1$]{#1}$#1$ &\ttfamily\string#1}

\NewDocumentCommand {\X} { o m}
  {
    \IfNoValueTF{#1}
      { \X@no@opt@arg  {#2}   }
      { \X_opt_arg {#1} {#2}  }
  }
\ExplSyntaxOff
\def\Y#1{\incsyms\indexcommand[$\string\big\string#1$]{#1}$\big#1$ & $\Bigg#1$%
   &\scriptsize\ttfamily\string#1}

\ExplSyntaxOn
\cs_set:Npn \docZ #1
  {
    \incsyms
    \indexcommand[$\string#1$] {#1}
    \footnotesize
    \ttfamily
    \string #1
  }
\ExplSyntaxOff
\NewDocumentCommand{\utfviii}{ }{\mbox{UTF-8}\index{UTF-8}\xspace}

\newcommand{\idxTBsyms}{%
  \index{symbols>TeXbook=\TeX{}book}%
  \index{TeXbook, The=\TeX{}book, The>symbols from}%
}
\newcommand{\pkgname}[1]{%
  \href{http://ctan.org/pkg/#1}{\bfseries{#1}}%
  \index{#1=\texttt{#1} (package)}%
  \index{packages>#1=\texttt{#1}}

  }
\newcommand*\SpecialPackageIndex[2][packages:]{%
 \@bsphack
 \begingroup
 \HD@target
 \let\HDorg@encapchar\encapchar
 \edef\encapchar usage{%
 \HDorg@encapchar hdclindex{\the\c@HD@hypercount}{usage}%
 }%
 \index{#1\levelchar #2\actualchar
  {\protect\ttfamily #2}\encapchar usage}%
 \endgroup
 \@esphack
}

\newcommand{\pkg}[1]{%
  \href{http://ctan.org/pkg/#1}{\bfseries{#1}}%
  \SpecialPackageIndex[Packages:]{#1}}

\let\Lpack\pkgname

\newcommand*\opt[1]{\texttt{#1}}

\newcommand*\feat[1]{\texttt{#1}}

\newcommand{\optname}[2]{%
  \textsf{#2}%
  \index{#2=\textsf{#2} (\textsf{#1} package option)}%
  \index{package options>#2=\textsf{#2} (\textsf{#1})}}
\newcommand{\docClass}[1]{%
  \href{http://ctan.org/pkg/#1}{\bfseries{#1}}%
  \index{#1=\texttt{#1} (class)}%
  \index{classes>#1=\texttt{#1}}}

\let\Lpack\pkgname
\newcommand{\docfilename}[1]{%
  \texttt{#1}
  \index{#1\idx@actual{\phdindexprintcomc{#1}(file)}\encapchar hyperpage}}

\let\docFilename\docfilename
\newcommand{\docfileextension}[1]{%
  \texttt{#1}%
  \index{#1\idx@actual{\texttt{#1} (file extension)}\encapchar hyperpage}
  \index{file extensions\idx@level #1\idx@actual{\texttt{#1}}\encapchar hyperpage}
}

\let\docFileExtension\docfileextension
\newcommand{\PSfont}[1]{%
  #1%
  \index{#1 (font)}%
  \index{fonts\index@level#1}%
}
\NewDocumentCommand{\person} { m m } {#1\index{#2, #1} #2}
\DeclareRobustCommand\ctan[1]{%
  \textcolor{green}{%
      \href{http://www.ctan.org/pkg/#1} {{\bfseries #1}}%
  \footnote{\protect\url{http://www.ctan.org/pkg/#1}}}
  \index{Packages>#1}%
}
\newcommand{\idxCTAN}{%
  \index{Comprehensive TeX Archive Network=Comprehensive \string\TeX{} Archive Network}}
\newcommand{\encone}[1]{{\fontencoding{T1}\selectfont#1}}
\newcommand{\encfour}[1]{{\fontencoding{T4}\selectfont#1}}
\newcommand{\encfive}[1]{{\fontencoding{T5}\selectfont#1}}
\newcommand{\encgreek}[1]{{\fontencoding{LGR}\selectfont#1}}

\let\magicrbrack=]
\let\magicequal=\=
\DeclareRobustCommand{\magicequalname}{\texttt{\string\=}}
\DeclareRobustCommand{\magicvertname}{\texttt{|}}
\DeclareRobustCommand{\magicVertname}{\texttt{\string\|}}

\newsavebox{\tvcbox}
\newcommand*{\textvcenter}[1]{%
  \savebox{\tvcbox}{#1}%
  \raisebox{0.5\dp\tvcbox}{\raisebox{-0.5\ht\tvcbox}{\usebox{\tvcbox}}}%
}
\newenvironment{tablenote}[1][]{
  \makebox[1em]{\ensuremath{^{#1}}}%
  \begin{minipage}[t]{0.75\textwidth}%
  \setlength{\parskip}{2ex}
}{%
  \end{minipage}%
}

\newcommand{\twosymbolmessage}{%
  \begin{tablenote}
    Where two symbols are present, the left one is the ``faked'' symbol
    that \latexe provides by default, and the right one is the ``true''
    symbol that \TC\ makes available.
  \end{tablenote}
}

\newcommand{\notpredefinedmessage}{%
  \begin{tablenote}[*]
    Not predefined in \latexe.  Use one of the packages
    \pkgname{latexsym}, \pkgname{amsfonts}, \pkgname{amssymb},
    \pkgname{txfonts}, \pkgname{pxfonts}, or \pkgname{wasysym}.
  \end{tablenote}
}

\newcommand{\notpredefinedmessageABX}{%
  \begin{tablenote}[*]
    Not predefined in \latexe.  Use one of the packages
    \pkgname{latexsym}, \pkgname{amsfonts}, \pkgname{amssymb},
    \pkgname{mathabx}, \pkgname{txfonts}, \pkgname{pxfonts}, or
    \pkgname{wasysym}.
  \end{tablenote}
}

\newcommand{\usetextmathmessage}[1][]{%
  \begin{tablenote}[#1]
    It's generally preferable to use the corresponding symbol from
    \vref{math-text} because the symbols in that table work
    properly in both text mode and math mode.
  \end{tablenote}
}

\newcommand{\usefontcmdmessage}[2]{%
  These symbols must appear either within the argument to \cmd{#1} or
  following the \cmd{#2} font-selection command within a scope%
}

\def\fnum@table{\tablename~\thetable}

\newenvironment{symtable}[2][true]{%
  \bgroup
  \expandafter\global\expandafter\let%
    \expandafter\ifshowsymtable\csname if#1\endcsname
  \ifshowsymtable
    \noindent%
    \begin{minipage}[t]{\linewidth}    % Prevent page breaks
    \begin{center}
    \refstepcounter{table}%
    \phantomsection
    \addcontentsline{toc}{subsection}{%
      \protect\numberline{\tablename~\thetable:}{#2}}%
    \@makecaption{\fnum@table}{#2}\medskip
    \let\next=\relax
  \else
    % The following was taken verbatim from verbatim.sty.
    \let\do\@makeother\dospecials\catcode`\^^M\active
    \let\verbatim@startline\relax
    \let\verbatim@addtoline\@gobble
    \let\verbatim@processline\relax
    \let\verbatim@finish\relax
    \let\next=\verbatim@
  \fi
  \next
}{%
  \ifshowsymtable
    \end{center}
    \end{minipage}
    \vskip 8ex minus 2ex
  \fi
  \egroup
}
\ExplSyntaxOn
\newcommand{\docSymbol}[2][]{%
  \def\first@arg{#1}%
  \ifx\first@arg\@empty
    \texttt{\string#2} (#2)%
    \indexcommand[#2]{#2}%
  \else
    \texttt{\string#2} (#2)%
    \indexcommand[#1]{#2}%
  \fi
}
\ExplSyntaxOff

\newenvironment{nonsymtable}[1]{%
  \begin{table}[htbp]
  \centering
  \caption{#1}\medskip
}{%
  \end{table}
}

{
  \global\let\myempty=\@empty
  \global\let\mygobble=\@gobble
  \catcode`\@=12
  \gdef\getridofats#1@#2\relax{%
    \def\getridtest{#2}%
    \ifx\getridtest\myempty%
      \expandafter\def\expandafter\strippedat\expandafter{\strippedat#1}
    \else%
      \expandafter\def\expandafter\strippedat\expandafter{\strippedat#1\protect\printanat}
      \getridofats#2\relax%
    \fi%
  }

  \gdef\removeats#1{%
    \let\strippedat\myempty%
    \edef\strippedtext{\stripcommand#1}%
    \expandafter\getridofats\strippedtext @\relax%
  }

  \gdef\stripcommand#1{\expandafter\mygobble\string#1}
}

\def\printanat{\char`\@}

\def\declare{\afterassignment\pgfmanualdeclare\let\next=}
\def\pgfmanualdeclare{\ifx\next\bgroup\bgroup\color{red!75!black}\else{\color{red!75!black}\next}\fi}

\let\textoken=\command
\let\endtextoken=\endcommand

\def\myprintocmmand#1{\texttt{\char`\\#1}}
\def\example{\par\smallskip\noindent\textit{Example: }}
\def\themeauthor{\par\smallskip\noindent\textit{Theme author: }}

\def\indexoption#1{%
  \index{#1@\protect\texttt{#1} option}%
  \index{Graphic options and styles!#1@\protect\texttt{#1}}%
}

\def\itemcalendaroption#1{\item \declare{\texttt{#1}}%
  \index{#1@\protect\texttt{#1} date test}%
  \index{Date tests!#1@\protect\texttt{#1}}%
}
\def\class#1{%
  \list{}%
    {\leftmargin=2em\itemindent-\leftmargin\def\makelabel##1{\hss##1}}%
   \extractclass#1@\par\topsep=0pt
}
\def\endclass{\endlist}

\def\extractclass#1#2@{%
\item{{{\ttfamily\char`\\documentclass}#2{\ttfamily\char`\{\declare{#1}\char`\}}}}%
  \index{#1@\protect\texttt{#1} class}%
  \index{Classes!#1@\protect\texttt{#1}}}

\def\index@prologue{\section*{Index}\addcontentsline{toc}{section}{My Index}
  This index only contains automatically generated entries. A good
  index should also contain carefully selected keywords. This index is
  not a good index.
  \bigskip
}
\@ifundefined{c@IndexColumns}{\newcount\c@IndexColumns}{}
\c@IndexColumns=2
  \def\theindex{\@restonecoltrue
    \columnseprule \z@  \columnsep 29\p@
    \twocolumn[\index@prologue]%
       \parindent -30pt
       \columnsep 15pt
       \parskip 0pt plus 1pt
       \leftskip 30pt
       \rightskip 0pt plus 2cm
       \small
       \def\@idxitem{\par}%
    \let\item\@idxitem \ignorespaces}
  \def\endtheindex{\onecolumn}
\def\noindexing{\let\index=\@gobble}

\newcommand\symarrow[1]{%
  \index{#1\idx@actual\protect\texttt{#1} arrow tip}%
  \index{Arrow tips\idx@level#1\idx@actual\protect\texttt{#1}}%
  \texttt{#1}& yields thick
  \begin{tikzpicture}[arrows={#1-#1},thick,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture} and thin
  \begin{tikzpicture}[arrows={#1-#1},thin,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture}
}

\newcommand\sarrow[2]{
  \index{#1@\protect\texttt{#1} arrow tip}%
  \index{Arrow tips!#1@\protect\texttt{#1}}
  \index{#2@\protect\texttt{#2} arrow tip}%
  \index{Arrow tips!#2@\protect\texttt{#2}}
  \texttt{#1-#2}& yields thick
  \begin{tikzpicture}[arrows={#1-#2},thick,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture} and thin
  \begin{tikzpicture}[arrows={#1-#2},thin,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture}
}

\newcommand\carrow[1]{
  \index{#1@\protect\texttt{#1} arrow tip}%
  \index{Arrow tips!#1@\protect\texttt{#1}}
  \texttt{#1}& yields for line width 1ex
  \begin{tikzpicture}[arrows={#1-#1},line width=1ex,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1.5cm,2ex);
    \draw (0pt,.5ex) -- (1.5cm,.5ex);
  \end{tikzpicture}
}
%% Macros taken fro PGF manual
\newcommand\patternindex[1]{%
  \HD@target
  \let\HDorg@encapchar\encapchar
  \edef\encapchar usage{%
  \HDorg@encapchar hdclindex{\the\c@HD@hypercount}{usage}%
  }%
  \index{#1\idx@actual{\protect\texttt{#1} (pattern)}\encapchar usage}%
  \index{Patterns\levelchar#1\actualchar{\protect\texttt{#1}}\encapchar usage}%
  \texttt{#1}&
  \begin{tikzpicture}[baseline=.5ex]
    % Background
    \pattern [path fading=west,pattern=checkerboard light gray]
      (0,0) rectangle (5cm,2em);
    \pattern [pattern=#1,pattern color=black] (0,0) rectangle +(1.5cm,2em);
    \pattern [pattern=#1,pattern color=blue] (1.75,0) rectangle +(1.5cm,2em);
    \pattern [pattern=#1,pattern color=red] (3.5,0) rectangle +(1.5cm,2em);
  \end{tikzpicture} \\[1ex]
}
\newcommand\patternindexinherentlycolored[1]{%
  \HD@target
  \let\HDorg@encapchar\encapchar
  \edef\encapchar usage{%
    \HDorg@encapchar hdclindex{\the\c@HD@hypercount}{usage}%
  }%
  \index{#1\idx@actual{\protect\texttt{#1} pattern}\encapchar usage}%
  \index{Patterns\idx@level#1\idx@actual{\protect\texttt{#1}}\encapchar usage}%
  \arial #1 &
  \begin{tikzpicture}[baseline=.5ex]
    % Background
    \pattern [path fading=west,pattern=checkerboard light gray]
      (0,0) rectangle (5cm,2em);
    \pattern [pattern=#1,pattern color=blue] (0,0) rectangle +(5cm,2em);
  \end{tikzpicture} \\[1ex]
}

\newcommand\plotmarkentry[1]{%
  \index{#1@\protect\texttt{#1} plot mark}%
  \index{Plot marks!#1@\protect\texttt{#1}}
  \texttt{\char`\\pgfuseplotmark\char`\{\declare{#1}\char`\}} &
  \tikz\draw[color=black!25] plot[mark=#1,mark options={fill=examplefill,draw=black}] coordinates{(0,0) (.5,0.2) (1,0) (1.5,0.2)};\\
}
\newcommand\plotmarkentrytikz[1]{%
  \index{#1@\protect\texttt{#1} plot mark}%
  \index{Plot marks!#1@\protect\texttt{#1}}
  \texttt{mark=\declare{#1}} & \tikz\draw[color=black!25]
  plot[mark=#1,mark options={fill=examplefill,draw=black}]
    coordinates {(0,0) (.5,0.2) (1,0) (1.5,0.2)};\\
}

\ifx\scantokens\@undefined
  \PackageError{phd}{You need to use extended latex
    (elatex) or (pdfelatex) to process this document}{}
\fi

\begingroup
\catcode`|=0
\catcode`[= 1
\catcode`]=2
\catcode`\{=12
\catcode `\}=12
\catcode`\\=12 |gdef|find@example#1\end{codeexample}[|endofcodeexample[#1]]
|endgroup

\begingroup
\catcode`\^=7
\catcode`\^^M=13
\catcode`\ =13%
\gdef\returntospace{\catcode`\ =13\def {\space}\catcode`\^^M=13\def^^M{}}%
\endgroup

\begingroup
\catcode`\%=13
\catcode`\^^M=13
\gdef\commenthandler{\catcode`\%=13\def%{\@gobble@till@return}}
\gdef\@gobble@till@return#1^^M{}
\gdef\@gobble@till@return@ignore#1^^M{\ignorespaces}
\gdef\typesetcomment{\catcode`\%=13\def%{\@typeset@till@return}}
\gdef\@typeset@till@return#1^^M{{\def%{\char`\%}\textsl{\char`\%#1}}\par}
\endgroup

\define@key{codeexample}{width}{\setlength\codeexamplewidth{#1}}
\define@key{codeexample}{graphic}{\colorlet{thecodebackground}{#1}}
\define@key{codeexample}{code}{\colorlet{thecodebackground}{#1}}
\define@key{codeexample}{execute code}{\csname code@execute#1\endcsname}
\define@key{codeexample}{code only}[]{\code@executefalse}
\define@key{codeexample}{pre}{\def\code@pre{#1}}
\define@key{codeexample}{post}{\def\code@post{#1}}
\define@key{codeexample}{vbox}[]{\def\code@pre{\vbox\bgroup\setlength{\hsize}{\linewidth-6pt}}\def\code@post{\egroup}}
\define@key{codeexample}{ignorespaces}[]{\let\@gobble@till@return=\@gobble@till@return@ignore}
\define@key{codeexample}{leave comments}[]{\def\code@catcode@hook{\catcode`\%=12}\let\commenthandler=\relax\let\typesetcomment=\relax}
\def\code@pre{}
\def\code@post{}
\def\code@catcode@hook{}

\newdimen\codeexamplewidth
\newif\ifcode@execute
\newbox\codeexamplebox
\def\codeexample[#1]{%
  \begingroup%
  \code@executetrue
  \setlength\codeexamplewidth{4cm+7pt}
  \setkeys{codeexample}{#1}%
  \parindent0pt
  \begingroup%
  \par%
  \medskip%
  \let\do\@makeother%
  \dospecials%
  \obeylines%
  \@vobeyspaces%
  \catcode`\%=13%
  \catcode`\^^M=13%
  \code@catcode@hook%
  \relax%
  \find@example}
\def\endofcodeexample#1{%
  \endgroup%
  \ifcode@execute%
    \setbox\codeexamplebox=\hbox{%
      {%
        {%
          \returntospace%
          \commenthandler%
          \xdef\code@temp{#1}% removes returns and comments
        }%
        \colorbox{thecodebackground}{\color{black}\ignorespaces%
          \code@pre\expandafter\scantokens\expandafter{\code@temp\ignorespaces}\code@post\ignorespaces}%
      }%
    }%
    \ifdim\wd\codeexamplebox>\codeexamplewidth%
      \def\code@start{\par}%
      \def\code@flushstart{}\def\code@flushend{}%
      \def\code@mid{\parskip2pt\par\noindent}%
      \def\code@width{\linewidth-6pt}%
      \def\code@end{}%
    \else%
      \def\code@start{%
        \linewidth=\textwidth%
        \parshape \@ne 0pt \linewidth
        \leavevmode%
        \hbox\bgroup}%
      \def\code@flushstart{\hfill}%
      \def\code@flushend{\hbox{}}%
      \def\code@mid{\hskip6pt}%
      \def\code@width{\linewidth-12pt-\codeexamplewidth}%
      \def\code@end{\egroup}%
    \fi%
    \code@start%
    \noindent%
    \begin{minipage}[t]{\codeexamplewidth}\raggedright
      \hrule width0pt%
      \small%\vskip-1em%
      \code@flushstart\box\codeexamplebox\code@flushend%
      \vskip-1ex
      \leavevmode%
    \end{minipage}%
  \else%
    \def\code@mid{\par}
    \def\code@width{\linewidth-6pt}
    \def\code@end{}
  \fi%
  \code@mid%
  \colorbox{thecodebackground}{%
    \begin{minipage}[t]{\code@width}%
      {%
        \let\do\@makeother
        \dospecials
        \frenchspacing\@vobeyspaces
        \normalfont\ttfamily%\footnotesize
        \typesetcomment%
        \@tempswafalse
        \def\par{%
          \if@tempswa
          \leavevmode \null \@@par\penalty\interlinepenalty
          \else
          \@tempswatrue
          \ifhmode\@@par\penalty\interlinepenalty\fi
          \fi}%
        \obeylines
        \everypar \expandafter{\the\everypar \unpenalty}%
        #1}
    \end{minipage}}%
  \code@end%
  \par%
  \medskip
  \end{codeexample}
}

\def\endcodeexample{\endgroup}
\long\def\codeexamplenl{\noexpand\par}%
\pgfqkeys{/codeexample}{%
every codeexample/.style={
width=3.9cm,
/pgfplots/every axis/.append style={legend style={fill=thecodebackground}}
},
narrow/.style={width=6.9cm},
}


\newlength\temp@cx
\def\keyval{%
  \begingroup
  \catcode`|=11
  \@keyval}
\def\@keyval#1#2#3{%
  \settowidth\temp@cx{\verbatimfont\bfseries{#1\thinspace}}%
  \hangindent\temp@cx
  \par\leavevmode%
\hspace*{-\temp@cx}{\verbatimfont\color{theoption}\bfseries #1}%
          \thinspace=\thinspace#2%
\hspace*{.5em}#3%
\par\addvspace{6.5pt}%
\endgroup
}
\newenvironment{bibsample}
  {\trivlist\samepage
   \setlength{\itemsep}{0pt}}
  {\endtrivlist}
%% doccommands
\newcommand*{\marglistfont}{\itshape}

\newcommand*{\margoptionfont}{\ttfamily}

\newcommand*{\margnotefont}{}

\newcommand*{\optionlistfont}{\bfseries}

\newcommand*{\ltxsyntaxfont}{\ttfamily}

\newcommand*{\ltxsyntaxlabelfont}{\bfseries}

\newcommand*{\changelogfont}{\normalfont}

\newcommand*{\changeloglabelfont}{\bfseries}



\newrobustcmd*{\env}[1]{\mbox{\verbatimfont\bfseries\textcolor{thegreen}{#1}}}

\newrobustcmd*{\len}[1]{\mbox{\verbatimfont\textbackslash#1}}

\newrobustcmd*{\cnt}[1]{\mbox{\verbatimfont#1}}

\newlength{\marglistsep}

\newlength{\marglistwidth}

%%% POSSIBLE ERROR
\setlength{\marglistwidth}{\oddsidemargin}%

\deflength{\marglistsep}{10pt}
%% This needs thorough checking as to restore previous definitions
%% of parsep we want parsep to be a bit higher than standard enumerated lists.
\global\newlength\varparsep
\newenvironment*{marglist}
  {\setlength\varparsep{\parsep}\list{}{%
     \parsep 3.5\p@ \@plus0\p@ \@minus\p@
     \setlength{\labelwidth}{\marglistwidth}%
     \setlength{\labelsep}{\marglistsep}%
     \setlength{\leftmargin}{0pt}%
     \renewcommand*{\makelabel}[1]{\hss\marglistfont##1}}}
  {\endlist\setlength\parsep{\varparsep}}

\newenvironment*{margoptionslist}
  {\setlength\varparsep{\parsep}\list{}{%
     \parsep 3.5\p@ \@plus0\p@ \@minus\p@
     \setlength{\labelwidth}{\marglistwidth}%
     \setlength{\labelsep}{\marglistsep}%
     \setlength{\leftmargin}{0pt}%
     \renewcommand*{\makelabel}[1]{\hss\margoptionfont\detokenize{##1}}}}
  {\endlist\setlength\parsep{\varparsep}}

\newenvironment*{keymarglist}
  {\marglist
   \setlength{\itemsep}{0pt}%
   \raggedright}
  {\endmarglist}
\def\cvaref#1{\verbatimfont\textcolor{themacro}{#1}}
\def\colOpt#1{\textcolor{theoption}{\verbatimfont\texttt{#1}}}
\newcommand{\option}[1]{\colOpt{#1}}
\begingroup \catcode `|=0
\catcode `[= 1
\catcode`]=2
\catcode `\{=12
\catcode `\}=12
\catcode`\\=12
|gdef|@xsmallverbatim#1\end{smallverbatim}[#1|end[smallverbatim]]
|gdef|@sxsmallverbatim#1\end{smallverbatim*}[#1|end[smallverbatim*]]
|endgroup
\def\@smallverbatim{\trivlist \item\relax
  \if@minipage\else\vskip\parskip\fi
  \leftskip\@totalleftmargin\rightskip\z@skip
  \parindent\z@\parfillskip\@flushglue\parskip\z@skip
  \@@@@par %chaned
  \@tempswafalse
  \def\par{%
    \if@tempswa
      \leavevmode \null \@@par\penalty\interlinepenalty
    \else
      \@tempswatrue
      \ifhmode\@@@@par\penalty\interlinepenalty\fi
    \fi}%
  \let\do\@makeother \dospecials
  \obeylines \small \@noligs%\smallverbatim@font to FIX
  \hyphenchar\font\m@ne
  \everypar \expandafter{\the\everypar \unpenalty}%
}
\def\smallverbatim{\@smallverbatim \frenchspacing\@vobeyspaces \@xsmallverbatim}
\def\endsmallverbatim{\if@newlist \leavevmode\fi\endtrivlist}
\def\smallverbatim@font{\normalfont\smallverbatimsize\ttfamily}
\let\luacmd\docValue
\newenvironment{docCommands}{%
\bgroup
\par
\parindent=0pt
\parskip=3.5pt plus0.5pt
\everypar{\hangindent2em}%
\addvspace\belowdisplayskip\relax}%
{\everypar{}%
 \par
 \vskip\belowdisplayskip\egroup\par}
\long\def\auxm#1(#2);{%
  \def\Xtemp{#1}%
  \def\Ytemp{#2}%
  \parindent=0pt
  \addvspace{1.5pt}%
  \par\leavevmode
  \hangafter=1\relax   \hangindent=1em\relax
  \bgroup
   \bfseries\sffamily\color{red}\Xtemp\,\color{black}(\textit{\Ytemp})\hskip0.1em
  \egroup
}

\newenvironment{docLua}[1]{%
  \auxm#1;
 }{%
\@@par
\smallskip\parindent=1em }

\DeclareRobustCommand{\phdidxfont}[1]{%
  \index{#1 (font)}\index{fonts\idx@level{#1}\encapchar hyperpage}}%
\def\docFont#1{
    \enquote{#1}
    \phdidxfont{#1}%
}
\newenvironment{handler}[2][]{%
  \begin{phdd_manual_entry}%
   \begingroup
   \sffamily\textbf{Key handler} \meta{key}/\bfseries\ttfamily{\color{thered}#2}\color{black}#1
   \endgroup
 \end{phdd_manual_entry}
 }
{}

\newcommand\stok[2][]{%
  \texttt{#2}\ensuremath{_{%
  \if!#1!
    \the\catcode`#2
  \else
    #1
  \fi}}}
\newcommand\showsymbolalpha[3]
  {
    \par\noindent\hangindent=3em%
    \makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}}
    \string#1 $^{#3}$
    \indexmathcmd [Math alphabetics] {#1}
  }

\newcommand\showsymbol[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}}
\string#1 $^{#3}$\indexmathcmd [Math ordinary] {#1}}
\newcommand\showsymbolbin[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}}
\string#1 $^{#3}$\indexmathcmd [Math bin operators] {#1}}
\newcommand\showrelsymbol[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}}
\string#1$^{#3}$\indexmathcmd [Math relations] {#1}}
\newcommand\integralsymbol[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}}
\string#1 $^{#3}$\indexmathcmd [Math integrals] {#1}}
\newcommand\showop[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$#1$\hfill$\displaystyle#1$\hfill}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \string#1 $^{#3}$
  \indexmathcmd [Math big operators] {#1} }
\newcommand\showmbrace[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{${#1}{\bigm#1}{\Bigm#1}{\biggm#1}{\Biggm#1}$}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \string#1 $^{#3}$
  \indexmathcmd [Math delimiters]{#1}
  }
\newcommand\showlbrace[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$\Biggl#1\biggl#1\Bigl#1\bigl#1#1$}
  \makebox[3.5em][l]{
    \small\texttt{U+#2}} \string #1 $^{#3}$
  \indexmathcmd[Math delimiters] {#1}
  }
\newcommand\showrbrace[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$#1\bigr#1\Bigr#1\biggr#1\Biggr#1$}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \string #1 $^{#3}$
  \indexmathcmd[Math delimiters] {#1}
  }
\DeclareDocumentCommand \showwideaccent { m m m} {\par\noindent\hangindent=4em%
  \makebox[3em][l]{$#1{xxx}$}\makebox[3.5em][l]{\small\texttt{U+#2}} \string #1 $^{#3}$
  \indexmathcmd [Math accents] {#1{abc}}
  }
\DeclareDocumentCommand\showaccent { m m m} {\par\noindent\hangindent=4em%
  \makebox[3em][l]{$#1b$}\makebox[3.5em][l]{\small\texttt{U+#2}} \string #1$^{#3}$
  \indexmathcmd [Math accents] {#1 b}
  }
\newcommand\showover[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$#1{xxxxxx}$}
  \makebox[3.5em][l]{\small\texttt{U+#2}}
  \string #1 $^{#3}$
  \indexmathcmd [Math over and under brackets] {#1{xxxxxx}}
  }
\ExplSyntaxOn
\NewDocumentEnvironment{ arguments }  {}
  {
    \enumerate
  }
  {
    \endenumerate
  }
\ExplSyntaxOff


\ExplSyntaxOn

\clist_new:N \g_docinput_clist
\seq_new:N \g_doc_functions_seq
\seq_new:N \g_doc_macros_seq
\bool_new:N \l__phdd_detect_internals_bool
\bool_set_true:N \l__phdd_detect_internals_bool
\tl_new:N \l__phdd_detect_internals_tl
\tl_new:N \l__phdd_detect_internals_cs_tl
\coffin_new:N \l__phdd_output_coffin
\coffin_new:N \l__phdd_functions_coffin
\coffin_new:N \l__phdd_descr_coffin
\coffin_new:N \l__phdd_syntax_coffin
\box_new:N \g__phdd_syntax_box
\bool_new:N \l__phdd_in_function_bool
\bool_new:N \l__phdd_long_name_bool
\dim_new:N \l__phdd_trial_width_dim
\int_new:N \l__phdd_nested_macro_int
\bool_new:N \l__phdd_macro_tested_bool
\prop_new:N \g__phdd_missing_tests_prop
\seq_new:N \g__phdd_not_tested_seq
\seq_new:N \g__phdd_testfiles_seq
\bool_new:N \l__phdd_macro_internal_set_bool
\bool_new:N \l__phdd_macro_internal_bool
\bool_new:N \l__phdd_macro_TF_bool
\bool_new:N \l__phdd_macro_pTF_bool
\bool_new:N \l__phdd_macro_noTF_bool
\bool_new:N \l__phdd_macro_EXP_bool
\bool_new:N \l__phdd_macro_rEXP_bool
\bool_new:N \l__phdd_macro_var_bool
\tl_new:N \l__phdd_override_module_tl
\tl_set:Nn \l__phdd_override_module_tl { \q_no_value }
\tl_new:N \l__phdd_macro_documented_tl
\bool_new:N \g__phdd_lmodern_bool
\bool_new:N \g__phdd_checkfunc_bool
\bool_new:N \g__phdd_checktest_bool
\bool_new:N \g__phdd_kernel_bool
\bool_new:N \g__phdd_cs_break_bool
\bool_gset_true:N \g__phdd_cs_break_bool
\tl_new:N \l__phdd_tmpa_tl
\tl_new:N \l__phdd_tmpb_tl
\int_new:N \l__phdd_tmpa_int
\int_new:N \l__phdd_tmpa_seq
\tl_new:N \l__phdd_names_block_tl
\seq_new:N \g__phdd_variants_seq
\bool_new:N \l__phdd_names_verb_bool
\seq_new:N \l__phdd_names_seq
\seq_new:N \g__phdd_nested_names_seq
\tl_new:N \l__phdd_index_macro_tl
\tl_new:N \l__phdd_index_key_tl
\tl_new:N \l__phdd_index_module_tl
\bool_new:N \l__phdd_index_internal_bool
\tl_new:N \g__phdd_module_name_tl
\tl_const:Nn \c__phdd_iow_rule_tl
  { ======================================== }
\tl_const:Nn \c__phdd_iow_mid_rule_tl
  { -------------------------------------- }
\box_new:N \l__phdd_macro_box
\box_new:N \l__phdd_macro_index_box
\int_new:N \l__phdd_macro_int
\tl_new:N \l__phdd_cmd_tl
\tl_new:N \l__phdd_cmd_index_tl
\tl_new:N \l__phdd_cmd_module_tl
\bool_new:N \l__phdd_cmd_noindex_bool
\bool_new:N \l__phdd_cmd_replace_bool
\bool_new:N \l__phdd_in_implementation_bool
\bool_new:N \g__phdd_typeset_documentation_bool
\bool_new:N \g__phdd_typeset_implementation_bool
\bool_set_true:N \g__phdd_typeset_documentation_bool
\bool_set_true:N \g__phdd_typeset_implementation_bool
\tl_new:N \g__phdd_base_name_tl
\prop_new:N \l__phdd_variants_prop
\clist_new:N \l__phdd_function_label_clist
\bool_new:N \l__phdd_no_label_bool
\tl_new:N \l__phdd_date_added_tl
\tl_new:N \l__phdd_date_updated_tl
\tl_new:N \l__phdd_macro_argument_tl
\cs_new_eq:NN \__phdd_tmpa:w ?
\cs_new_eq:NN \__phdd_tmpb:w ?
\cs_generate_variant:Nn \seq_set_split:Nnn { NoV }
\cs_generate_variant:Nn \seq_gput_right:Nn { Nf }
\cs_generate_variant:Nn \str_case:nn { fn }
\cs_generate_variant:Nn \tl_count:n { f }
\cs_generate_variant:Nn \tl_greplace_all:Nnn { Nx , Nno }
\cs_generate_variant:Nn \tl_if_empty:nTF { f }
\cs_generate_variant:Nn \tl_if_head_eq_charcode:nNTF { o }
\cs_generate_variant:Nn \tl_if_head_eq_charcode:nNT  { o }
\cs_generate_variant:Nn \tl_if_head_eq_charcode:nNF  { o }
\cs_generate_variant:Nn \tl_if_head_eq_meaning:nNF  { V }
\cs_generate_variant:Nn \tl_if_in:nnTF { no , oo }
\cs_generate_variant:Nn \tl_if_in:NnTF { No }
\cs_generate_variant:Nn \tl_if_in:NnT  { No }
\cs_generate_variant:Nn \tl_if_in:NnF  { No }
\cs_generate_variant:Nn \tl_remove_all:Nn   { Nx }
\cs_generate_variant:Nn \tl_replace_all:Nnn { Nx , Nnx, No , Nno }
\cs_generate_variant:Nn \tl_replace_once:Nnn { Noo }
\cs_generate_variant:Nn \tl_to_str:n { f , o }
\cs_generate_variant:Nn \prop_get:NnNTF { Nx }
\cs_generate_variant:Nn \prop_put:Nnn { Nx }
\cs_generate_variant:Nn \prop_gput:Nnn { NVx }
\prg_new_protected_conditional:Npnn \__phdd_if_almost_str:n #1 { TF , T , F }
  {
    \int_compare:nNnTF
      { \tl_count:n {#1} }
      < { \tl_count:f { \tl_to_str:f {#1} } }
      { \prg_return_false: }
      { \prg_return_true: }
  }
\cs_generate_variant:Nn \__phdd_if_almost_str:nT { V }
\cs_new_protected:Npn \__phdd_trim_right:Nn #1#2
  {
    \cs_set:Npn \__phdd_tmp:w ##1 #2 ##2 \q_stop { \exp_not:n {##1} }
    \tl_set:Nx #1 { \exp_after:wN \__phdd_tmp:w #1 #2 \q_stop }
  }
\cs_generate_variant:Nn \__phdd_trim_right:Nn { No }
\prg_new_protected_conditional:Npnn \__phdd_str_if_begin:nn #1#2 { TF , T , F }
  {
    \tl_if_in:ooTF
      { \exp_after:wN \scan_stop: \tl_to_str:n {#1} }
      { \exp_after:wN \scan_stop: \tl_to_str:n {#2} }
      { \prg_return_true: }
      { \prg_return_false: }
  }
\prg_generate_conditional_variant:Nnn \__phdd_str_if_begin:nn
  { oo } { TF , T , F }
\cs_new_protected:Npn \__phdd_replace_at_at:N #1
  {
    \tl_if_empty:NF \g__phdd_module_name_tl
      {
        \exp_args:NNo \__phdd_replace_at_at_aux:Nn
          #1 \g__phdd_module_name_tl
      }
  }
\cs_new_protected:Npx \__phdd_replace_at_at_aux:Nn #1#2
  {

   \tl_replace_all:Nnn #1 { \token_to_str:N @ } { @ }
    \tl_replace_all:Nnn #1 { \token_to_str:N _ } { _ }
    \tl_replace_all:Nnn #1 { \token_to_str:N ! } { ! }
    \tl_replace_all:Nnn #1 { @ @ @ @ } { \token_to_str:N a a }
    \tl_replace_all:Nnn #1 { _ _ @ @ } { _ _ #2 }
    \tl_replace_all:Nnn #1 {   _ @ @ } { _ _ #2 }
    \tl_replace_all:Nnn #1 {    !@ @ } {     #2 }
    \tl_replace_all:Nnn #1 {     @ @ } { _ _ #2 }

    \tl_replace_all:Nnn #1 { \token_to_str:N a a } { @ @ }
  }
\cs_new_protected:Npn \__phdd_detect_internals:N #1
  {
    \bool_if:NT \l__phdd_detect_internals_bool
      { \__phdd_detect_internals_aux:N #1 }
  }
\group_begin:
  \char_set_catcode_active:N \^^M
  \cs_new_protected:Npn \__phdd_detect_internals_aux:N #1
    {
      \tl_set_eq:NN \l__phdd_detect_internals_tl #1
      \tl_replace_all:Non \l__phdd_detect_internals_tl { \token_to_str:N _ } { _ }
      \seq_set_split:NnV \l__phdd_tmpa_seq { _ _ } \l__phdd_detect_internals_tl
      \seq_pop_left:NN \l__phdd_tmpa_seq \l__phdd_detect_internals_tl
      \seq_map_variable:NNn \l__phdd_tmpa_seq \l__phdd_detect_internals_tl
        {
          \__phdd_trim_right:No \l__phdd_detect_internals_tl
            \c_catcode_active_space_tl
          \__phdd_trim_right:Nn \l__phdd_detect_internals_tl ^^M
          \__phdd_if_detect_internals_ok:NF \l__phdd_detect_internals_tl
            {
              \tl_set_eq:NN \l__phdd_detect_internals_cs_tl \l__phdd_detect_internals_tl
              \__phdd_trim_right:Nn \l__phdd_detect_internals_tl _
              \__phdd_trim_right:Nn \l__phdd_detect_internals_tl :
              \__phdd_trim_right:No \l__phdd_detect_internals_tl { \token_to_str:N : }
              \msg_warning:nnxxx { !__phdd } { foreign-internal }
                { \tl_to_str:N \l__phdd_detect_internals_cs_tl }
                { \tl_to_str:N \l__phdd_detect_internals_tl }
                { \tl_to_str:N \g__phdd_module_name_tl }
            }
        }
    }
\group_end:
\prg_new_protected_conditional:Npnn \__phdd_if_detect_internals_ok:N #1 { F }
  {
    \__phdd_str_if_begin:ooTF {#1} { \g__phdd_module_name_tl _ }
      { \prg_return_true: }
      {
        \__phdd_str_if_begin:ooTF {#1} { \g__phdd_module_name_tl : }
          { \prg_return_true: }
          {
            \bool_if:NTF \g__phdd_kernel_bool
              {
                \__phdd_str_if_begin:ooTF {#1} { kernel _ }
                  { \prg_return_true: }
                  { \prg_return_false: }
              }
              { \prg_return_false: }
          }
      }
  }
\cs_new:Npn \__phdd_signature_base_form:n #1
  { \__phdd_signature_base_form_aux:n #1 \q_stop }
\cs_new:Npn \__phdd_signature_base_form_aux:n #1
  {
    \str_case:nnTF {#1}
      {
        { N } { N }
        { c } { N }
        { n } { n }
        { o } { n }
        { f } { n }
        { x } { n }
        { V } { n }
        { v } { n }
      }
      { \__phdd_signature_base_form_aux:n }
      { \__phdd_signature_base_form_aux:w #1 }
  }
\cs_new:Npn \__phdd_signature_base_form_aux:w #1 \q_stop
  { \exp_not:n {#1} }
\cs_new:Npn \__phdd_predicate_from_base:n #1
  {
    \__phdd_get_function_name:n {#1}
    \tl_to_str:n { _p: }
    \__phdd_get_function_signature:n {#1}
  }
\cs_new:Npn \__phdd_get_function_name:n #1
  { \__phdd_split_function_do:nn {#1} { \use_i:nnn } }
\cs_new:Npn \__phdd_get_function_signature:n #1
  { \__phdd_split_function_do:nn {#1} { \use_ii:nnn } }
\cs_set_protected:Npn \__phdd_tmpa:w #1
  {
    \cs_new:Npn \__phdd_split_function_do:nn ##1
      {
        \exp_after:wN \__phdd_split_function_auxi:w
        \tl_to_str:n {##1} \q_mark \c_true_bool
        #1 \q_mark \c_false_bool
        \q_stop
      }
    \cs_new:Npn \__phdd_split_function_auxi:w
      ##1 #1 ##2 \q_mark ##3##4 \q_stop ##5
      { \__phdd_split_function_auxii:w {##5} ##1 \q_mark \q_stop {##2} ##3 }
    \cs_new:Npn \__phdd_split_function_auxii:w
      ##1##2 \q_mark ##3 \q_stop
      { ##1 {##2} }
  }
\exp_args:No \__phdd_tmpa:w { \token_to_str:N : }
\cs_generate_variant:Nn \__phdd_split_function_do:nn { o }
\cs_new_protected:Npn \__phdd_key_get_base:nN #1#2
  {
    \__phdd_if_almost_str:nTF {#1}
      {
        \__phdd_key_get_base_TF:nN {#1} \l__phdd_tmpa_tl
        \tl_set:Nx #2
          { \__phdd_split_function_do:on \l__phdd_tmpa_tl { \__phdd_base_form_aux:nnN } }
      }
      { \tl_set:Nn #2 {#1} }
  }
\cs_new:Npx \__phdd_key_get_base_TF:nN #1#2
  {
    \tl_set:Nx #2 { \exp_not:N \tl_to_str:n {#1} }
    \tl_if_in:NoF #2 { \tl_to_str:n {:} }
      { \exp_not:N \prg_break: }
    \tl_if_in:onT { #2 z } { \tl_to_str:n {TF} z }
      { \exp_not:N \prg_break: }
    \tl_if_in:onT { #2 z } { \tl_to_str:n {T} z }
      {
        \tl_put_right:Nn #2 { \tl_to_str:n {F} }
        \exp_not:N \prg_break:
      }
    \tl_if_in:onT { #2 z } { \tl_to_str:n {F} z }
      {
        \tl_put_right:Nn #2 { z }
        \tl_replace_once:Nnn #2 { \tl_to_str:n {F} z } { \tl_to_str:n {TF} }
        \exp_not:N \prg_break:
      }
    \exp_not:N \prg_break_point:
  }
\cs_new:Npn \__phdd_base_form_aux:nnN #1#2#3
  {
    \exp_not:n {#1}
    \bool_if:NT #3
      {
        \token_to_str:N :
        \str_if_eq:nnTF { #1 ~ } { \exp_args }
          { \exp_not:n {#2} }
          { \__phdd_signature_base_form:n {#2} }
      }
  }
\cs_new_protected:Npn \__phdd_base_form_signature_do:nnn #1#2#3
  {
    \__phdd_split_function_do:nn {#1}
      { \__phdd_base_form_aux:nnnnnN {#1} {#2} {#3} }
  }
\cs_new_protected:Npn \__phdd_base_form_aux:nnnnnN #1#2#3#4#5#6
  {
    \bool_if:NTF #6
      {
        \tl_if_head_eq_charcode:nNTF {#4} :
          { #2 {#1} }
          {
            \use:x
              {
                \exp_not:n {#3}
                { \__phdd_base_form_aux:nnN {#4} {#5} #6 }
              }
                {#4} {#5}
          }
      }
      { #2 {#1} }
  }
\prg_new_conditional:Npnn \__phdd_date_compare:nNn #1#2#3 { TF , T , F , p }
  { \__phdd_date_compare_aux:w #1--- \q_mark #2 #3--- \q_stop }
\cs_new:Npn \__phdd_date_compare_aux:w
    #1 - #2 - #3 - #4 \q_mark #5 #6 - #7 - #8 - #9 \q_stop
  {
    \__phdd_date_compare_aux:nnnNnnn
      { \tl_if_empty:nTF {#1} { 0 } {#1} }
      { \tl_if_empty:nTF {#2} { 0 } {#2} }
      { \tl_if_empty:nTF {#3} { 0 } {#3} }
      #5
      { \tl_if_empty:nTF {#6} { 0 } {#6} }
      { \tl_if_empty:nTF {#7} { 0 } {#7} }
      { \tl_if_empty:nTF {#8} { 0 } {#8} }
  }
\cs_new:Npn \__phdd_date_compare_aux:nnnNnnn #1#2#3#4#5#6#7
  {
    \int_compare:nNnTF {#1} = {#5}
      {
        \int_compare:nNnTF {#2} = {#6}
          {
            \int_compare:nNnTF {#3} #4 {#7}
              { \prg_return_true: } { \prg_return_false: }
          }
          {
            \int_compare:nNnTF {#2} #4 {#6}
              { \prg_return_true: } { \prg_return_false: }
          }
      }
      {
        \int_compare:nNnTF {#1} #4 {#5}
          { \prg_return_true: } { \prg_return_false: }
      }
    \use_none:n
    \q_stop
  }
\cs_new:Npn \__phdd_gprop_name:n #1 { g__phdd ~ \tl_to_str:n {#1} }
\cs_new:Npn \__phdd_lseq_name:n #1 { l__phdd ~ \tl_to_str:n {#1} }
\msg_new:nnnn { !__phdd } { no-signature-TF }
  { Function/macro~'#1'~cannot~be~turned~into~a~conditional. }
  {
    A~function~or~macro~environment~with~option~pTF,~TF~or~noTF~
    received~the~argument~'#1'.~This~function's~name~has~no~
    ':'~hence~it~is~not~clear~where~to~add~'_p'~or~'TF'.~
    Please~follow~expl3~naming~conventions.
  }
\msg_new:nnn { !__phdd } { deprecated-function }
  { The~deprecated~function(s)~'#1'~should~have~been~removed~on~#2. }

\msg_new:nnn { !__phdd } { date-format }
  { The~date~'#1'~should~be~given~in~YYYY-MM-DD~format. }

\msg_new:nnn { !__phdd } { syntax-nested-function }
  {
    The~'syntax'~environment~should~be~used~in~the~
    innermost~'function'~environment.
  }
\msg_new:nnn { !__phdd } { multiple-syntax }
  {
    The~'syntax'~environment~should~only~be~used~once~in~
    a~'function'~environment.
  }
\msg_new:nnn { !__phdd } { deprecated-option }
  { The~option~'#1'~has~been~deprecated~for~'#2'. }

\msg_new:nnn { !__phdd } { foreign-internal }
  {
    A~control~sequence~of~the~form~'...__#1'~was~used.~
    It~should~only~be~used~in~the~module~'#2'
    \tl_if_empty:nF {#3} { ,~not~in~'#3' } .
  }
\cs_gset:Npn \MakePrivateLetters
  {
    \char_set_catcode_letter:N \@
    \char_set_catcode_letter:N \_
    \char_set_catcode_letter:N \:
  }
\setcounter{StandardModuleDepth}{1}

\cs_set_protected:Npn \ifnot@excluded
  {
    \exp_args:Nxx \expanded@notin
      { \c_backslash_str \tl_to_str:N \macro@namepart , }
      { \exp_args:NV \tl_to_str:n \index@excludelist }
  }
\cs_new:Npn \pdfstringnewline { : ~ }
\DeclareExpandableDocumentCommand
  { \__phdd_pdfstring_newline:w } { s o m } { \pdfstringnewline #3 }
\pdfstringdefDisableCommands
  { \cs_set_eq:NN \\ \__phdd_pdfstring_newline:w }
\DeclareDocumentCommand \cmd { O{} m }
  { \__phdd_cmd:no {#1} { \token_to_str:N #2 } }

\DeclareDocumentCommand \cs  { O{} m }
  { \__phdd_cmd:no {#1} { \c_backslash_str #2 } }

\DeclareDocumentCommand \tn  { O{} m }
  {
    \__phdd_cmd:no
      { module = TeX , replace = false , #1 }
      { \c_backslash_str #2 }
  }
\DeclareDocumentCommand \meta { m }
  { \__phdd_meta:n {#1} }
\DeclareExpandableDocumentCommand
  { \__phdd_pdfstring_cmd:w } { o m } { \token_to_str:N #2 }
\DeclareExpandableDocumentCommand
  { \__phdd_pdfstring_cs:w }  { o m } { \textbackslash \tl_to_str:n {#2} }
\cs_new:Npn \__phdd_pdfstring_meta:w #1
  { < \tl_to_str:n {#1} > }
\pdfstringdefDisableCommands
  {
    \cs_set_eq:NN \cmd  \__phdd_pdfstring_cmd:w
    \cs_set_eq:NN \cs   \__phdd_pdfstring_cs:w
    \cs_set_eq:NN \tn   \__phdd_pdfstring_cs:w
    \cs_set_eq:NN \meta \__phdd_pdfstring_meta:w
  }
\newcommand\Arg[1]
  { \texttt{\char`\{} \meta{#1} \texttt{\char`\}} }
\providecommand\marg[1]{ \Arg{#1} }
\providecommand\oarg[1]{ \texttt[ \meta{#1} \texttt] }
\providecommand\parg[1]{ \texttt( \meta{#1} \texttt) }
\DeclareRobustCommand \file {\nolinkurl}
\DeclareRobustCommand \env {\texttt}


\NewDocumentCommand \EnableDocumentation { }
  { \bool_gset_true:N \g__phdd_typeset_documentation_bool }
\NewDocumentCommand \EnableImplementation { }
  { \bool_gset_true:N \g__phdd_typeset_implementation_bool }
\NewDocumentCommand \DisableDocumentation { }
  { \bool_gset_false:N \g__phdd_typeset_documentation_bool }
\NewDocumentCommand \DisableImplementation { }
  { \bool_gset_false:N \g__phdd_typeset_implementation_bool }
\NewDocumentEnvironment { documentation } { }
  {
    \bool_if:NTF \g__phdd_typeset_documentation_bool
      { \bool_set_false:N \l__phdd_in_implementation_bool }
      { \comment }
  }
  { \bool_if:NF \g__phdd_typeset_documentation_bool { \endcomment } }
\NewDocumentEnvironment { implementation } { }
  {
    \bool_if:NTF \g__phdd_typeset_implementation_bool
      { \bool_set_true:N \l__phdd_in_implementation_bool }
      { \comment }
  }
  { \bool_if:NF \g__phdd_typeset_implementation_bool { \endcomment } }

\DeclareDocumentEnvironment { variable } { O{} +v }
  {
    \bool_if:NTF \l__phdd_in_implementation_bool
      { \__phdd_macro:nnw { var , #1 } {#2} }
      { \__phdd_function:nnw {#1} {#2} }
  }
  {
    \bool_if:NTF \l__phdd_in_implementation_bool
      { \__phdd_macro_end: }
      { \__phdd_function_end: }
  }
\DeclareDocumentEnvironment { function } { O{} +v }
  { \__phdd_function:nnw {#1} {#2} }
  { \__phdd_function_end: }
\DeclareDocumentEnvironment { macro } { O{} +v }
  { \__phdd_macro:nnw {#1} {#2} }
  { \__phdd_macro_end: }
\NewDocumentEnvironment { syntax } { }
  { \__phdd_syntax:w }
  {
    \__phdd_syntax_end:
    \ignorespacesafterend
  }
\NewDocumentEnvironment { texnote } { }
  {
    \endgraf
    \vspace{3mm}
    \small\textbf{\TeX~hackers~note:}
  }
  {
    \vspace{3mm}
  }
\NewDocumentCommand { \CodedocExplain } { }
  { \CodedocExplainEXP \ \CodedocExplainREXP \ \CodedocExplainTF }
\NewDocumentCommand { \CodedocExplainEXP } { }
  {
    \raisebox{\baselineskip}[0pt][0pt]{\hypertarget{expstar}{}}%
    \__phdd_typeset_exp:\ indicates~fully~expandable~functions,~which~
    can~be~used~within~an~\texttt{x}-type~argument~(in~plain~
    \TeX{}~terms,~inside~an~\cs{edef}),~as~well~as~within~an~
    \texttt{f}-type~argument.
  }
\NewDocumentCommand { \CodedocExplainREXP } { }
  {
    \raisebox{\baselineskip}[0pt][0pt]{\hypertarget{rexpstar}{}}%
    \__phdd_typeset_rexp:\ indicates~
    restricted~expandable~functions,~which~can~be~used~within~an~
    \texttt{x}-type~argument~but~cannot~be~fully~expanded~within~an~
    \texttt{f}-type~argument.
  }
\NewDocumentCommand { \CodedocExplainTF } { }
  {
    \raisebox{\baselineskip}[0pt][0pt]{\hypertarget{explTF}{}}%
    \__phdd_typeset_TF:\ indicates~conditional~(\texttt{if})~functions~
    whose~variants~with~\texttt{T},~\texttt{F}~and~\texttt{TF}~
    argument~specifiers~expect~different~
    \enquote{true}/\enquote{false}~branches.
  }
\keys_define:nn { phdd/cmd }
  {
    index     .tl_set:N     = \l__phdd_cmd_index_tl        ,
    module    .tl_set:N     = \l__phdd_cmd_module_tl       ,
    no-index  .bool_set:N   = \l__phdd_cmd_noindex_bool    ,
    replace   .bool_set:N   = \l__phdd_cmd_replace_bool    ,
  }
\cs_new_protected:Npn \__phdd_cmd:nn #1#2
  {
    \bool_set_false:N \l__phdd_cmd_noindex_bool
    \bool_set_true:N \l__phdd_cmd_replace_bool
    \tl_set:Nn \l__phdd_cmd_index_tl { \q_no_value }
    \tl_set:Nn \l__phdd_cmd_module_tl { \q_no_value }
    \keys_set:nn { phdd/cmd } {#1}
    \tl_set:Nn \l__phdd_cmd_tl {#2}
    \bool_if:NT \l__phdd_cmd_replace_bool
      {
        \tl_set_rescan:Nnn \l__phdd_tmpb_tl { } { _ }
        \tl_replace_all:Non \l__phdd_cmd_tl \l__phdd_tmpb_tl { _ }
        \__phdd_replace_at_at:N \l__phdd_cmd_tl
        \tl_replace_all:Nno \l__phdd_cmd_tl { _ } \l__phdd_tmpb_tl
      }
\def\BreakableUnderscore{\leavevmode\nobreak\hskip\z@skip
 %\ifx\f@family\ttdefault \string \else
 \textunderscore
 %\fi
 \@dischyph\nobreak\hskip\z@skip}
    \mode_if_math:T { \mbox }
      {
        \verbatim@font
        \__phdd_if_almost_str:VT \l__phdd_cmd_tl
          {
            \tl_set:Nx \l__phdd_cmd_tl { \tl_to_str:N \l__phdd_cmd_tl }
            \bool_if:NT \g__phdd_cs_break_bool
              {
                % underscore is replaced with breakable underscore.
                \regex_replace_all:nnN
                  {([^\\])_([^\_])}
                  {\1\c{BreakableUnderscore}\2}
                  \l__phdd_cmd_tl
              }
          }
        \tl_replace_all:Nnn \l__phdd_cmd_tl { ~ } { \@xobeysp }
        \l__phdd_cmd_tl
        \@
      }
    \bool_if:NF \l__phdd_cmd_noindex_bool
      {
        \quark_if_no_value:NF \l__phdd_cmd_index_tl
          {
            \tl_set:Nx \l__phdd_cmd_tl
              { \c_backslash_str \exp_not:o { \l__phdd_cmd_index_tl } }
          }

        \exp_args:No \__phdd_key_get:n { \l__phdd_cmd_tl }
        \quark_if_no_value:NF \l__phdd_cmd_module_tl
          {
            \tl_set:Nx \l__phdd_index_module_tl
              { \tl_to_str:N \l__phdd_cmd_module_tl }
          }
        \__phdd_special_index_module:ooonN
          { \l__phdd_index_key_tl }
          { \l__phdd_index_macro_tl }
          { \l__phdd_index_module_tl }
          { usage }
          \l__phdd_index_internal_bool
      }
  }
\cs_generate_variant:Nn \__phdd_cmd:nn { no }
\cs_new_protected:Npn \__phdd_meta:n #1
  {
    \tl_set:Nn \l__phdd_tmpa_tl {#1}
    \tl_map_inline:nn
      { { 3 } { 4 } { 7 } { 8 } { 11 } { 12 } { 13 } }
      {
        \tl_set_rescan:Nnn \l__phdd_tmpb_tl
          { \char_set_catcode:nn { `_ } {##1} } { _ }
        \tl_replace_all:Non \l__phdd_tmpa_tl \l__phdd_tmpb_tl
          { \__phdd_ensuremath_sb:n }
      }
    \exp_args:NV \__phdd_meta_original:n \l__phdd_tmpa_tl
  }

\cs_new_protected:Npn \__phdd_ensuremath_sb:n #1
  { \ensuremath { \sb {#1} } }

\cs_new_protected:Npn \__phdd_meta_original:n #1
  {
    \ensuremath \langle
    \mode_if_math:T { \nfss@text }
    {
      \meta@font@select
      \edef \meta@hyphen@restore
        { \hyphenchar \the \font \the \hyphenchar \font }
      \hyphenchar \font \m@ne
      \language \l@nohyphenation
      \color{themeta}#1 \/
      \meta@hyphen@restore
    }
    \ensuremath \rangle
  }
\cs_new_protected:Npn \__phdd_typeset_exp: % check
  { \hyperlink{expstar} {$\star$} }

\cs_new_protected:Npn \__phdd_typeset_rexp:
  { \hyperlink{rexpstar} {\ding{73}} } % hollow star

\cs_new_protected:Npn \__phdd_typeset_TF:
  {
    \hyperlink{explTF}
      {
        \color{themacrocolor} % was black
        \itshape TF
        \makebox[0pt][r]
          {
            \color{red}
            \underline { \phantom{\itshape TF} \kern-0.1em }
          }
      }
  }
\cs_new_protected:Npn \__phdd_typeset_aux:n #1
  {
    {
    %\color[gray]{0.5}
    %YL
    \color{themacrocolor} #1
    }
  }
\cs_new_protected:Npn \__phdd_get_hyper_target:nN #1#2
  {
    \tl_set:Nx #2 { \tl_to_str:n {#1} }
    \tl_replace_all:Nxn #2 { \c_underscore_str } { / }
    \tl_remove_all:Nx   #2 { \c_backslash_str }
    \tl_put_left:Nn #2 { doc/function// }
  }
\cs_generate_variant:Nn \__phdd_get_hyper_target:nN { o , x }
\cs_new_protected:Npn \__phdd_names_get_seq:nN #1#2
  {
    \tl_set:Nx \l__phdd_tmpa_tl { \tl_to_str:n {#1} }
    \bool_if:NTF \l__phdd_names_verb_bool
      {
        \seq_clear:N #2
        \seq_put_right:NV #2 \l__phdd_tmpa_tl
      }
      {
        \tl_remove_all:Nx \l__phdd_tmpa_tl
          { \iow_char:N \^^M \c_percent_str }
        \tl_remove_all:Nx \l__phdd_tmpa_tl { \tl_to_str:n { ^ ^ A } }
        \tl_remove_all:Nx \l__phdd_tmpa_tl { \iow_char:N \^^I }
        \tl_remove_all:Nx \l__phdd_tmpa_tl { \iow_char:N \^^M }
        \__phdd_detect_internals:N \l__phdd_tmpa_tl
        \__phdd_replace_at_at:N \l__phdd_tmpa_tl
        \exp_args:NNx \seq_set_from_clist:Nn #2
          { \tl_to_str:N \l__phdd_tmpa_tl }
      }
  }
\cs_new_protected:Npn \__phdd_names_parse:
  {
    \tl_clear:N \l__phdd_names_block_tl
    \seq_map_function:NN
      \l__phdd_names_seq
      \__phdd_names_parse_one:n
  }
\cs_new_protected:Npn \__phdd_names_parse_one:n #1
  {
    \__phdd_split_function_do:nn {#1}
      { \__phdd_names_parse_one_aux:nnNn }
    {#1}
  }
\cs_new_protected:Npn \__phdd_names_parse_one_aux:nnNn #1#2#3#4
  {
    \bool_if:NTF #3
      {
        \tl_if_head_eq_charcode:nNTF {#2} :
          { \__phdd_names_parse_aux:nnn {#4} {#4} { \scan_stop: } }
          {
            \exp_args:Nx \__phdd_names_parse_aux:nnn
              { \__phdd_base_form_aux:nnN {#1} {#2} #3 }
              {#1} {#2}
          }
      }
      {
        \bool_if:NT \l__phdd_macro_TF_bool
          { \msg_error:nnx { l3doc } { no-signature-TF } {#4} }
        \__phdd_names_parse_aux:nnn {#4} {#4} { \scan_stop: }
      }
  }
\cs_new_protected:Npn \__phdd_names_parse_aux:nnn #1
  { \exp_args:Nc \__phdd_names_parse_aux:Nnn { \__phdd_lseq_name:n {#1} } }
\cs_new_protected:Npn \__phdd_names_parse_aux:Nnn #1#2#3
  {
    \tl_if_in:NnF \l__phdd_names_block_tl {#1}
      {
        \tl_put_right:Nn \l__phdd_names_block_tl {#1}
        \seq_clear_new:N #1
        \seq_put_right:Nn #1 {#2}
      }
    \seq_put_right:Nn #1 {#3}
  }
\cs_new_protected:Npn \__phdd_names_typeset:
  {
    \tl_map_function:NN \l__phdd_names_block_tl
      \__phdd_names_typeset_auxi:n
  }
\cs_new_protected:Npn \__phdd_names_typeset_auxi:n #1
  {
    \seq_pop:NN #1 \l__phdd_tmpa_tl
    \tl_gset_eq:NN \g__phdd_base_name_tl \l__phdd_tmpa_tl
    \tl_greplace_all:Nno \g__phdd_base_name_tl
      { ~ } { \c_catcode_other_space_tl }
    \seq_get:NN #1 \l__phdd_tmpa_tl
    \str_if_eq:VnTF \l__phdd_tmpa_tl { \scan_stop: }
      {
        \seq_gclear:N \g__phdd_variants_seq
        \__phdd_names_typeset_auxii:x { \g__phdd_base_name_tl }
      }
      {
        \seq_gset_eq:NN \g__phdd_variants_seq #1
        \seq_gpop:NN \g__phdd_variants_seq \l__phdd_tmpb_tl
        \__phdd_names_typeset_auxii:x
          { \g__phdd_base_name_tl : \l__phdd_tmpb_tl }
      }
  }
\cs_new_protected:Npn \__phdd_names_typeset_auxii:n #1
  {
    \bool_if:NT \l__phdd_macro_pTF_bool
      {
        \__phdd_names_typeset_block:xN
          { \__phdd_predicate_from_base:n {#1} }
          \c_false_bool
      }
    \bool_if:NT \l__phdd_macro_noTF_bool
      { \__phdd_names_typeset_block:nN {#1} \c_false_bool }
    \__phdd_names_typeset_block:nN {#1} \l__phdd_macro_TF_bool
  }
\cs_generate_variant:Nn \__phdd_names_typeset_auxii:n { x }
\cs_new_protected:Npn \__phdd_names_typeset_block:nN
  {
    \int_compare:nNnTF \l__phdd_nested_macro_int = 0
      { \__phdd_typeset_function_block:nN }
      { \__phdd_macro_typeset_block:nN }
  }
\cs_generate_variant:Nn \__phdd_names_typeset_block:nN { x }
\prg_new_conditional:Npnn \__phdd_if_macro_internal:n #1 { p , T , F , TF }
  {
    \bool_if:NTF \l__phdd_macro_internal_set_bool
      {
        \bool_if:NTF \l__phdd_macro_internal_bool
          { \prg_return_true: } { \prg_return_false: }
      }
      {
        \tl_if_empty:fTF
          {
            \exp_after:wN \__phdd_if_macro_internal_aux:w
            \tl_to_str:n { #1 ~ __ }
          }
          { \prg_return_false: } { \prg_return_true: }
      }
  }
\exp_last_unbraced:NNNNo
  \cs_new:Npn \__phdd_if_macro_internal_aux:w #1 { \tl_to_str:n { __ } } { }
\cs_new_protected:Npn \__phdd_names_block_base_map:N #1
  {
    \tl_map_inline:Nn \l__phdd_names_block_tl
      {
        \group_begin:
          \seq_set_eq:NN \l__phdd_tmpa_seq ##1
          \seq_pop:NN \l__phdd_tmpa_seq \l__phdd_tmpa_tl
          \seq_get:NN \l__phdd_tmpa_seq \l__phdd_tmpb_tl
          \exp_args:NNx
        \group_end:
        #1
          {
            \l__phdd_tmpa_tl
            \str_if_eq:VnF \l__phdd_tmpb_tl { \scan_stop: }
              { : \l__phdd_tmpb_tl }
            \bool_if:NT \l__phdd_macro_TF_bool { TF }
          }
      }
  }
\keys_define:nn { l3doc/function }
  {
    TF .value_forbidden:n = true ,
    TF .code:n =
      {
        \bool_set_true:N \l__phdd_macro_TF_bool
      } ,
    EXP .value_forbidden:n = true ,
    EXP .code:n =
      {
        \bool_set_true:N \l__phdd_macro_EXP_bool
        \bool_set_false:N \l__phdd_macro_rEXP_bool
      } ,
    rEXP .value_forbidden:n = true ,
    rEXP .code:n =
      {
        \bool_set_false:N \l__phdd_macro_EXP_bool
        \bool_set_true:N \l__phdd_macro_rEXP_bool
      } ,
    pTF .value_forbidden:n = true ,
    pTF .code:n =
      {
        \bool_set_true:N \l__phdd_macro_pTF_bool
        \bool_set_true:N \l__phdd_macro_TF_bool
        \bool_set_true:N \l__phdd_macro_EXP_bool
        \bool_set_false:N \l__phdd_macro_rEXP_bool
      } ,
    noTF .value_forbidden:n = true ,
    noTF .code:n =
      {
        \bool_set_true:N \l__phdd_macro_noTF_bool
        \bool_set_true:N \l__phdd_macro_TF_bool
      } ,
    added .code:n = { \__phdd_date_set:Nn \l__phdd_date_added_tl {#1} },
    updated .code:n = { \__phdd_date_set:Nn \l__phdd_date_updated_tl {#1} } ,
    deprecated .code:n = { \__phdd_deprecated_on:n {#1} } ,
    tested .code:n = { } ,
    label .code:n =
      {
        \clist_set:Nn \l__phdd_function_label_clist {#1}
        \bool_set_true:N \l__phdd_no_label_bool
      } ,
    verb .value_forbidden:n = true ,
    verb .bool_set:N = \l__phdd_names_verb_bool ,
    module .tl_set:N = \l__phdd_override_module_tl ,
  }
\cs_new_protected:Npn \__phdd_date_set:Nn #1#2
  {
    \tl_set:Nn #1 {#2}
    \regex_replace_once:nnNF
      { \A(\d\d\d\d)[-/](\d\d?)[-/](\d\d?)\Z } { \1-\2-\3 } #1
      {
        \msg_error:nnn { !__phdd } { date-format } {#2}
        \tl_set:Nn #1 { 1970-01-01 }
      }
  }
\cs_new_protected:Npn \__phdd_deprecated_on:n #1
  {
    \__phdd_date_set:Nn \l__phdd_tmpa_tl {#1}
    \exp_args:No \__phdd_date_compare:nNnT
      { \l__phdd_tmpa_tl } < { \tex_year:D - \tex_month:D - \tex_day:D }
      {
        \msg_error:nnxx { l3doc } { deprecated-function }
          { \tl_to_str:N \l__phdd_macro_argument_tl }
          { \l__phdd_tmpa_tl }
      }
    \bool_set_true:N \l__phdd_macro_internal_bool
    \bool_set_true:N \l__phdd_macro_internal_set_bool
  }
\cs_new_protected:Npn \__phdd_function:nnw #1#2
  {
    \__phdd_function_typeset_start:
    \__phdd_function_init:
    \tl_set:Nn \l__phdd_macro_argument_tl {#2}
    \keys_set:nn { l3doc/function } {#1}
    \__phdd_names_get_seq:nN {#2} \l__phdd_names_seq
    \__phdd_names_parse:
    \__phdd_function_typeset:
    \__phdd_function_reset:
    \__phdd_function_descr_start:w
  }
\cs_new_protected:Npn \__phdd_function_end:
  {
    \__phdd_function_descr_stop:
    \__phdd_function_assemble:
    \__phdd_function_typeset_stop:
  }
\cs_new_protected:Npn \__phdd_function_typeset_start:
  {
    \par \bigskip \noindent
  }
\cs_new_protected:Npn \__phdd_function_typeset_stop:
  {
    \par
    \allowbreak
  }
\cs_new_protected:Npn \__phdd_function_init:
  {
    \box_if_empty:NF \g__phdd_syntax_box
      { \msg_error:nn { l3doc } { syntax-nested-function } }
    \coffin_clear:N \l__phdd_descr_coffin
    \box_gclear:N \g__phdd_syntax_box
    \coffin_clear:N \l__phdd_syntax_coffin
    \coffin_clear:N \l__phdd_functions_coffin
    \bool_set_false:N \l__phdd_macro_TF_bool
    \bool_set_false:N \l__phdd_macro_pTF_bool
    \bool_set_false:N \l__phdd_macro_noTF_bool
    \bool_set_false:N \l__phdd_macro_EXP_bool
    \bool_set_false:N \l__phdd_macro_rEXP_bool
    \bool_set_false:N \l__phdd_no_label_bool
    \bool_set_false:N \l__phdd_names_verb_bool
    \bool_set_true:N \l__phdd_in_function_bool
    \clist_clear:N \l__phdd_function_label_clist
    \tl_set:Nn \l__phdd_override_module_tl { \q_no_value }
    \char_set_active_eq:NN \< \__phdd_shorthand_meta:
    \char_set_catcode_active:N \<
  }
\cs_new_protected:Npn \__phdd_shorthand_meta:
  { \mode_if_math:TF { < } { \__phdd_shorthand_meta:w } }

\cs_new_protected_nopar:Npn \__phdd_shorthand_meta:w #1 > { \meta {#1} }
\cs_new_protected:Npn \__phdd_function_reset:
  {
    \tl_set:Nn \l__phdd_override_module_tl { \q_no_value }
  }
\cs_new_protected:Npn \__phdd_function_typeset:
  {
    \dim_zero:N \l__phdd_trial_width_dim
    \hcoffin_set:Nn \l__phdd_functions_coffin { \__phdd_typeset_functions: }
    \dim_set:Nn \l__phdd_trial_width_dim
      { \box_wd:N \l__phdd_functions_coffin }
    \bool_set:Nn \l__phdd_long_name_bool
      { \dim_compare_p:nNn \l__phdd_trial_width_dim > \marginparwidth }
  }
\cs_new_protected:Npn \__phdd_function_descr_start:w
  {
    \vcoffin_set:Nnw \l__phdd_descr_coffin { \textwidth }
      \noindent \ignorespaces
  }
\cs_new_protected:Npn \__phdd_function_descr_stop:
  { \vcoffin_set_end: }
\cs_new_protected:Npn \__phdd_function_assemble:
  {
    \hcoffin_set:Nn  \l__phdd_syntax_coffin
      { \box_use_drop:N \g__phdd_syntax_box }
    \bool_if:NTF \l__phdd_long_name_bool
      {
        \coffin_join:NnnNnnnn
          \l__phdd_output_coffin {hc} {vc}
          \l__phdd_syntax_coffin {l} {T}
          {0pt} {0pt}
        \coffin_join:NnnNnnnn
          \l__phdd_output_coffin {l} {t}
          \l__phdd_functions_coffin  {r} {t}
          {-\marginparsep} {0pt}
        \coffin_join:NnnNnnnn
          \l__phdd_output_coffin {l} {b}
          \l__phdd_descr_coffin  {l} {t}
          {0.75\marginparwidth + \marginparsep} {-\medskipamount}
        \coffin_typeset:Nnnnn \l__phdd_output_coffin
          {\l__phdd_descr_coffin-l} {\l__phdd_descr_coffin-t}
          {0pt} {0pt}
      }
      {
        \coffin_join:NnnNnnnn
          \l__phdd_output_coffin {hc} {vc}
          \l__phdd_syntax_coffin {l} {t}
          {0pt} {0pt}
        \coffin_join:NnnNnnnn
          \l__phdd_output_coffin {l} {b}
          \l__phdd_descr_coffin  {l} {t}
          {0pt} {-\medskipamount}
        \coffin_join:NnnNnnnn
          \l__phdd_output_coffin {l} {t}
          \l__phdd_functions_coffin  {r} {t}
          {-\marginparsep} {0pt}
        \coffin_typeset:Nnnnn \l__phdd_output_coffin
          {\l__phdd_syntax_coffin-l} {\l__phdd_syntax_coffin-T}
          {0pt} {0pt}
      }
  }
\cs_new_protected:Npn \__phdd_typeset_functions:
  {
    \small\ttfamily
    \HD@savedestfalse
    \HD@target
    \Hy@MakeCurrentHref { HD. \int_use:N \c@HD@hypercount }
    \renewcommand{\arraystretch}{1.6}
    \begin{tabular} [b] { @{} l @{} >{\hspace{\tabcolsep}} r @{} }
      \hline
      \__phdd_function_extra_labels:
      \__phdd_names_typeset:
      \__phdd_typeset_dates:
      \hline
    \end{tabular}
    \normalfont\normalsize
  }
\cs_new_protected:Npn \__phdd_typeset_function_block:nN #1#2
  {
    \__phdd_function_index:x
      { #1 \bool_if:NT #2 { \tl_to_str:n {TF} } }
    \__phdd_function_label:xN {#1} #2
    #1
    \bool_if:NT #2 { \__phdd_typeset_TF: }
    \__phdd_typeset_expandability:
    \seq_if_empty:NF \g__phdd_variants_seq
      { \__phdd_typeset_variant_list:nN {#1} #2 }
    \\
  }
\cs_generate_variant:Nn \__phdd_typeset_function_block:nN { x }
\cs_new_protected:Npn \__phdd_function_index:n #1
  {
    \seq_gput_right:Nn \g_doc_functions_seq {#1}
    \__phdd_special_index:nn {#1} { usage }
  }
\cs_generate_variant:Nn \__phdd_function_index:n { x }
\cs_new_protected:Npn \__phdd_typeset_expandability:
  {
    &
    \bool_if:NT \l__phdd_macro_EXP_bool  { \__phdd_typeset_exp: }
    \bool_if:NT \l__phdd_macro_rEXP_bool { \__phdd_typeset_rexp: }
  }
\cs_new_protected:Npn \__phdd_typeset_variant_list:nN #1#2
  {
    \\
    \__phdd_typeset_aux:n { \__phdd_get_function_name:n {#1} }
    :
    \int_compare:nTF { \seq_count:N \g__phdd_variants_seq == 1 }
      { \seq_use:Nn \g__phdd_variants_seq { } }
      {
        \textrm(
          \seq_use:Nn \g__phdd_variants_seq { \textrm| }
        \textrm)
      }
    \bool_if:NT #2 { \__phdd_typeset_TF: }
    \__phdd_typeset_expandability:
  }
\cs_new_protected:Npn \__phdd_function_extra_labels:
  {
    \bool_if:NT \l__phdd_no_label_bool
      {
        \clist_map_inline:Nn \l__phdd_function_label_clist
          {
            \__phdd_get_hyper_target:oN { \token_to_str:N ##1 }
              \l__phdd_tmpa_tl
            \exp_args:No \label { \l__phdd_tmpa_tl }
          }
      }
  }
\cs_new_protected:Npn \__phdd_function_label:nN #1#2
  {
    \bool_if:NF \l__phdd_no_label_bool
      {
        \__phdd_get_hyper_target:xN
          {
            \exp_not:n {#1}
            \bool_if:NT #2 { \tl_to_str:n {TF} }
          }
          \l__phdd_tmpa_tl
        \exp_args:No \label { \l__phdd_tmpa_tl }
      }
  }
\cs_generate_variant:Nn \__phdd_function_label:nN { x }
\cs_new:Npn \__phdd_typeset_dates:
  {
    \bool_lazy_and:nnF
      { \tl_if_empty_p:N \l__phdd_date_added_tl }
      { \tl_if_empty_p:N \l__phdd_date_updated_tl }
      { \midrule }
    \tl_if_empty:NF \l__phdd_date_added_tl
      {
        \multicolumn { 2 } { @{} r @{} }
          { \scriptsize New: \, \l__phdd_date_added_tl } \\
      }

    \tl_if_empty:NF \l__phdd_date_updated_tl
      {
        \multicolumn { 2 } { @{} r @{} }
          { \scriptsize Updated: \, \l__phdd_date_updated_tl } \\
      }
  }
\dim_new:N \l__phdd_syntax_dim
\cs_new_protected:Npn \__phdd_syntax:w
  {
    \box_if_empty:NF \g__phdd_syntax_box
      { \msg_error:nn { l3doc } { multiple-syntax } }
    \dim_set:Nn \l__phdd_syntax_dim
      {
        \textwidth
        \bool_if:NT \l__phdd_long_name_bool
          { + 0.75 \marginparwidth - \l__phdd_trial_width_dim }
      }
    \hbox_gset:Nw \g__phdd_syntax_box
      \small \ttfamily
      \arrayrulecolor{white}
      \begin{tabular} { @{} l @{} }
        \toprule
        \begin{minipage}[t]{\l__phdd_syntax_dim}
          \raggedright
          \obeyspaces
          \obeylines
  }
\cs_new_protected:Npn \__phdd_syntax_end:
  {
        \end{minipage}
      \end{tabular}
      \arrayrulecolor{black}
    \hbox_gset_end:
    \bool_if:NF \l__phdd_in_function_bool
      {
        \begin{quote}
          \mode_leave_vertical:
          \box_use_drop:N \g__phdd_syntax_box
        \end{quote}
      }
  }
\keys_define:nn { !__phdd/macro }
  {
    aux .value_forbidden:n = true ,
    aux .code:n =
      {
        \msg_warning:nnnn { !__phdd } { deprecated-option }
          { aux } { function/macro }
      } ,
    internal .value_forbidden:n = true ,
    internal .code:n =
      {
        \bool_set_true:N \l__phdd_macro_internal_bool
        \bool_set_true:N \l__phdd_macro_internal_set_bool
      } ,
    int .value_forbidden:n = true ,
    int .code:n =
      {
        \bool_set_true:N \l__phdd_macro_internal_bool
        \bool_set_true:N \l__phdd_macro_internal_set_bool
      } ,
    var .value_forbidden:n = true ,
    var .code:n =
      { \bool_set_true:N \l__phdd_macro_var_bool } ,
    TF .value_forbidden:n = true ,
    TF .code:n =
      { \bool_set_true:N \l__phdd_macro_TF_bool } ,
    pTF .value_forbidden:n = true ,
    pTF .code:n =
      {
        \bool_set_true:N \l__phdd_macro_TF_bool
        \bool_set_true:N \l__phdd_macro_pTF_bool
        \bool_set_true:N \l__phdd_macro_EXP_bool
        \bool_set_false:N \l__phdd_macro_rEXP_bool
      } ,
    noTF .value_forbidden:n = true ,
    noTF .code:n =
      {
        \bool_set_true:N \l__phdd_macro_TF_bool
        \bool_set_true:N \l__phdd_macro_noTF_bool
      } ,
    EXP .value_forbidden:n = true ,
    EXP .code:n =
      {
        \bool_set_true:N \l__phdd_macro_EXP_bool
        \bool_set_false:N \l__phdd_macro_rEXP_bool
      } ,
    rEXP .value_forbidden:n = true ,
    rEXP .code:n =
      {
        \bool_set_false:N \l__phdd_macro_EXP_bool
        \bool_set_true:N \l__phdd_macro_rEXP_bool
      } ,
    tested .code:n =
      {
        \bool_set_true:N \l__phdd_macro_tested_bool
      } ,
    added .code:n = {} , % TODO
    updated .code:n = {} , % TODO
    deprecated .code:n = { \__phdd_deprecated_on:n {#1} } ,
    verb .bool_set:N = \l__phdd_names_verb_bool ,
    module .tl_set:N = \l__phdd_override_module_tl ,
    documented-as .tl_set:N = \l__phdd_macro_documented_tl ,
  }
\cs_new_protected:Npn \__phdd_macro:nnw #1#2
  {
    \__phdd_macro_init:
    \tl_set:Nn \l__phdd_macro_argument_tl {#2}
    \keys_set:nn { !__phdd/macro } {#1}
    \__phdd_names_get_seq:nN {#2} \l__phdd_names_seq
    \__phdd_names_parse:
    \__phdd_macro_save_names:
    \__phdd_names_typeset:
    \__phdd_macro_dump:
    \__phdd_macro_reset:
  }
\cs_new_protected:Npn \__phdd_macro_init:
  {
    \int_incr:N \l__phdd_nested_macro_int
    \bool_set_false:N \l__phdd_macro_internal_bool
    \bool_set_false:N \l__phdd_macro_internal_set_bool
    \bool_set_false:N \l__phdd_macro_TF_bool
    \bool_set_false:N \l__phdd_macro_pTF_bool
    \bool_set_false:N \l__phdd_macro_noTF_bool
    \bool_set_false:N \l__phdd_macro_EXP_bool
    \bool_set_false:N \l__phdd_macro_rEXP_bool
    \bool_set_false:N \l__phdd_macro_var_bool
    \bool_set_false:N \l__phdd_macro_tested_bool
    \bool_set_false:N \l__phdd_names_verb_bool
    \tl_set:Nn \l__phdd_override_module_tl { \q_no_value }
    \tl_clear:N \l__phdd_macro_documented_tl
    \cs_set_eq:NN \testfile \__phdd_print_testfile:n
    \box_clear:N \l__phdd_macro_index_box
    \vbox_set:Nn \l__phdd_macro_box
      {
        \hbox:n
          {
            \strut
            \int_compare:nNnT \l__phdd_macro_int = 0
              { \HD@target }
          }
        \vskip \int_eval:n { \l__phdd_macro_int - 1 } \baselineskip
      }
  }
\cs_new_protected:Npn \__phdd_macro_reset:
  {
    \tl_set:Nn \l__phdd_override_module_tl { \q_no_value }
  }
\cs_new_protected:Npn \__phdd_macro_save_names:
  {
    \tl_if_empty:NTF \l__phdd_macro_documented_tl
      { \__phdd_names_block_base_map:N \__phdd_macro_save_names_aux:n }
      {
        \seq_gput_right:Nf \g__phdd_nested_names_seq
          { \exp_after:wN \token_to_str:N \l__phdd_macro_documented_tl }
      }
  }
\cs_new_protected:Npn \__phdd_macro_save_names_aux:n #1
  { \seq_gput_right:Nn \g__phdd_nested_names_seq {#1} }
\cs_new_protected:Npn \__phdd_macro_dump:
  {
    \topsep\MacroTopsep
    \trivlist
    \cs_set:Npn \makelabel ##1
      {
        \llap
          {
            \hbox_unpack_clear:N \l__phdd_macro_index_box
            \vtop to \baselineskip
              {
                \vbox_unpack_clear:N \l__phdd_macro_box
                \vss
              }
          }
      }
    \item [ ]
  }
\cs_new_protected:Npn \__phdd_macro_typeset_block:nN #1#2
  {
    \__phdd_macro_single:nNN {#1} \c_true_bool #2
    \seq_if_empty:NF \g__phdd_variants_seq
      {
        \__phdd_macro_typeset_variant_list:xN
          { \__phdd_get_function_name:n {#1} } #2
      }
  }
\cs_generate_variant:Nn \__phdd_macro_typeset_block:nN { x }
\cs_new_protected:Npn \__phdd_macro_typeset_variant_list:nN #1#2
  {
    \seq_map_inline:Nn \g__phdd_variants_seq
      { \__phdd_macro_single:nNN { #1 : ##1 } \c_false_bool #2 }
  }
\cs_generate_variant:Nn \__phdd_macro_typeset_variant_list:nN { x }
\cs_new_protected:Npn \__phdd_macro_single:nNN #1#2#3
  {
    \tl_set:Nn \saved@macroname {#1}
    \__phdd_macro_typeset_one:nN {#1} #3
    \bool_if:NT #3 { \DoNotIndex {#1} }
    \exp_args:Nx \__phdd_macro_index:nN
      { #1 \bool_if:NT #3 { \tl_to_str:n { TF } } }
      #2
  }
\cs_new_protected:Npn \__phdd_macro_index:nN #1#2
  {
    \DoNotIndex {#1}
    \bool_if:NT #2
      {
        \__phdd_if_macro_internal:nF {#1}
          { \seq_gput_right:Nn \g_doc_macros_seq {#1} }
        \hbox_set:Nw \l__phdd_macro_index_box
          \hbox_unpack_clear:N \l__phdd_macro_index_box
          \int_gincr:N \c@CodelineNo
          \__phdd_special_index:nn {#1} { main }
          \int_gdecr:N \c@CodelineNo
        \exp_args:NNNo \hbox_set_end:
          \tl_set:Nn \saved@indexname { \l__phdd_index_key_tl }
      }
  }
\cs_new_protected:Npn \__phdd_macro_typeset_one:nN #1#2
  {
    \vbox_set:Nn \l__phdd_macro_box
      {
        \vbox_unpack_clear:N \l__phdd_macro_box
        % YL added 15pt if used in conjuction with listings to avoid overlapping
        % still probelms lining up with codeline. Need to hack doc or doc-v3.
        \hbox { \llap { \__phdd_print_macroname:nN {#1} #2 \space}\space\space\space\space }
      }
    \int_incr:N \l__phdd_macro_int
  }
\cs_new_protected:Npn \__phdd_print_macroname:nN #1#2
  {
    \strut
    \__phdd_get_hyper_target:xN
      {
        \exp_not:n {#1}
        \bool_if:NT #2 { \tl_to_str:n {TF} }
      }
      \l__phdd_tmpa_tl
    \cs_if_exist:cTF { r@ \l__phdd_tmpa_tl }
      { \exp_last_unbraced:NNo \hyperref [ \l__phdd_tmpa_tl ] }
      { \use:n }
      {
        \int_compare:nTF { \str_count:n {#1} <= 28 }
          { \MacroFont } {\MacroFont} %{ \MacroLongFont }
        \tl_set:Nn \l__phdd_tmpa_tl {#1}
        \tl_replace_all:Nno \l__phdd_tmpa_tl
          { ~ } { \c_catcode_other_space_tl }
        \__phdd_macroname_prefix:o \l__phdd_tmpa_tl
        \__phdd_macroname_suffix:N #2
      }
  }
\cs_new_protected:Npn \__phdd_macroname_prefix:n #1
  {
    \__phdd_if_macro_internal:nTF {#1}
      { \__phdd_typeset_aux:n {#1} } {#1}
  }
\cs_generate_variant:Nn \__phdd_macroname_prefix:n { o }
\cs_new_protected:Npn \__phdd_macroname_suffix:N #1
  { \bool_if:NTF #1 { \__phdd_typeset_TF: } { } }
\providecommand \MacroLongFont
  {
    \fontfamily{lmtt}\fontseries{lc}\small
  }
\cs_new_protected:Npn \__phdd_print_testfile:n #1
  {
    \bool_set_true:N \l__phdd_macro_tested_bool
    \tl_if_eq:nnF {#1} {*}
      {
        \seq_if_in:NnF \g__phdd_testfiles_seq {#1}
          {
            \seq_gput_right:Nn \g__phdd_testfiles_seq {#1}
            \par
            \__phdd_print_testfile_aux:n {#1}
          }
      }
  }
\cs_new_protected:Npn \__phdd_print_testfile_aux:n #1
  {
    \footnotesize
    (
    \textit
      {
        The~ test~ suite~ for~ this~ command,~
        and~ others~ in~ this~ file,~ is~ \textsf{#1}
      }.
    )\par
  }
\DeclareDocumentCommand \TestFiles {m}
  {
    \par
    \textit
      {
        The~ following~ test~ files~ are~
        used~ for~ this~ code:~ \textsf{#1}.
      }
    \par \ignorespaces
  }
\DeclareDocumentCommand \UnitTested { } { \testfile* }
\DeclareDocumentCommand \TestMissing { m }
  { \__phdd_test_missing:n {#1} }
\cs_new_protected:Npn \__phdd_test_missing:n #1
  {
    \__phdd_test_missing_aux:Nxn
      \g__phdd_missing_tests_prop
      { \seq_use:Nn \l__phdd_names_seq { , } }
      { { \g_file_curr_name_str \c_space_tl (#1) } }
  }
\cs_new_protected:Npn \__phdd_test_missing_aux:Nnn #1#2#3
  {
    \prop_get:NnNTF #1 {#2} \l__phdd_tmpa_tl
      { \tl_put_right:Nn \l__phdd_tmpa_tl { , #3 } }
      { \tl_set:Nn \l__phdd_tmpa_tl {#3} }
    \prop_put:Nno #1 {#2} \l__phdd_tmpa_tl
  }
\cs_generate_variant:Nn \__phdd_test_missing_aux:Nnn { Nx }
\cs_new_protected:Npn \__phdd_macro_end:
  {
    \endtrivlist
    \__phdd_macro_end_check_tested:
    \int_compare:nNnT \l__phdd_nested_macro_int = 1
      { \__phdd_macro_end_style:n { \__phdd_print_end_definition: } }
  }
\cs_new_protected:Npn \__phdd_macro_end_check_tested:
  {
    \bool_lazy_all:nT
     {
       { \g__phdd_checktest_bool }
       { ! \l__phdd_macro_var_bool }
       { ! \l__phdd_macro_tested_bool }
     }
     {
       \seq_set_filter:NNn \l__phdd_tmpa_seq \l__phdd_names_seq
         { ! \__phdd_if_macro_internal_p:n {##1} }
       \seq_gput_right:Nx \g__phdd_not_tested_seq
         {
           \seq_use:Nn \l__phdd_tmpa_seq { , }
           \bool_if:NTF \l__phdd_macro_pTF_bool {~(pTF)}
             { \bool_if:NT \l__phdd_macro_TF_bool {~(TF)} }
         }
     }
  }
\cs_new_protected:Npn \__phdd_macro_end_style:n #1
  {
    \nobreak \noindent
    { \footnotesize ( \emph{#1} ) \par }
  }
\cs_new_protected:Npn \__phdd_macro_end_wrap_item:n #1
  {
    \tl_set:Nn \l__phdd_tmpa_tl {#1}
    \tl_replace_all:Non \l__phdd_tmpa_tl
      { \token_to_str:N _ } { \_ }
    \texttt { \l__phdd_tmpa_tl }
  }
\cs_new_protected:Npn \__phdd_print_end_definition:
  {
    \seq_set_map:NNn \l__phdd_tmpa_seq
      \g__phdd_nested_names_seq
      { \exp_not:n { \__phdd_macro_end_wrap_item:n {##1} } }
    End~ definition~ for~
    \int_compare:nTF { \seq_count:N \l__phdd_tmpa_seq <= 3 }
      {
        \seq_use:Nnnn \l__phdd_tmpa_seq
          { \,~and~ } { \,,~ } { \,,~and~ }
      }
      { \seq_item:Nn \l__phdd_tmpa_seq {1}\,~and~others }
    \@.
    \__phdd_print_documented:
  }
\cs_new_protected:Npn \__phdd_print_documented:
  {
    \seq_gset_filter:NNn \g__phdd_nested_names_seq
      \g__phdd_nested_names_seq
      { ! \__phdd_if_macro_internal_p:n {##1} }

    \seq_if_empty:NF \g__phdd_nested_names_seq
      {
        \int_set:Nn \l__phdd_tmpa_int
          { \seq_count:N \g__phdd_nested_names_seq }
        %\int_compare:nNnTF \l__phdd_tmpa_int = 1 {~This~} {~These~}
        %\bool_if:NTF \l__phdd_macro_var_bool {variable} {function}
        % add switch for this

      }
    \seq_gclear:N \g__phdd_nested_names_seq
  }
\newcommand*{\DescribeOption}
  {
    \leavevmode
    \@bsphack
    \begingroup
      \MakePrivateLetters
      \Describe@Option
  }
\newcommand*{\Describe@Option}[1]
  {
    \endgroup
    \marginpar{
      \raggedleft
      \PrintDescribeEnv{#1}
    }
    \SpecialOptionIndex{#1}
    \@esphack
    \ignorespaces
  }
\newcommand*{\SpecialOptionIndex}[1]
  {
    \@bsphack
    \begingroup
      \HD@target
      \let\HDorg@encapchar\encapchar
      \edef\encapchar usage
        {
          \HDorg@encapchar hdclindex{\the\c@HD@hypercount}{usage}
        }
      \index
        {
          #1\actualchar{\protect\ttfamily#1}~(option)
          \encapchar usage
        }
      \index
        {
          options:\levelchar#1\actualchar{\protect\ttfamily#1}
          \encapchar usage
        }
    \endgroup
    \@esphack
  }
\font \manual = manfnt \scan_stop:
\cs_gset:Npn \dbend { {\manual\char127} }
\newenvironment{TemplateInterfaceDescription}[1]
  {
    \subsection{The~object~type~`#1'}
    \begingroup
    \@beginparpenalty\@M
    \description
    \def\TemplateArgument##1##2{\item[Arg:~##1]##2\par}
    \def\TemplateSemantics
      {
        \enddescription\endgroup
        \subsubsection*{Semantics:}
      }
  }
  {
    \par\bigskip
  }
\newenvironment{TemplateDescription}[2]
  {
    \subsection{The~template~`#2'~(object~type~#1)}
    \subsubsection*{Attributes:}
    \begingroup
    \@beginparpenalty\@M
    \description
    \def\TemplateKey##1##2##3##4
      {
        \item[##1~(##2)]##3%
        \ifx\TemplateKey##4\TemplateKey\else
          \hfill\penalty500\hbox{}\hfill Default:~##4%
          \nobreak\hskip-\parfillskip\hskip0pt\relax
        \fi
        \par
      }
    \def\TemplateSemantics
      {
        \enddescription\endgroup
        \subsubsection*{Semantics~\&~Comments:}
      }
  }
  { \par \bigskip }
\newenvironment{InstanceDescription}[4][xxxxxxxxxxxxxxx]
  {
    \subsubsection{The~instance~`#3'~(template~#2/#4)}
    \subsubsection*{Attribute~values:}
    \begingroup
    \@beginparpenalty\@M
    \def\InstanceKey##1##2{\>\textbf{##1}\>##2\\}
    \def\InstanceSemantics{\endtabbing\endgroup
      \vskip-30pt\vskip0pt
      \subsubsection*{Layout~description~\&~Comments:}}
    \tabbing
    xxxx\=#1\=\kill
  }
  { \par \bigskip }
\DeclareDocumentCommand \OnlyDescription { }
  { \bool_gset_false:N \g__phdd_typeset_implementation_bool }

\DeclareDocumentCommand \AlsoImplementation { }
  { \bool_gset_true:N \g__phdd_typeset_implementation_bool }

\DeclareDocumentCommand \StopEventually { m }
  {
    \bool_if:NTF \g__phdd_typeset_implementation_bool
      {
        \@bsphack
        \tl_gset:Nn \g__phdd_finale_tl { #1 \check@checksum }
        \init@checksum
        \@esphack
      }
      { #1 \endinput }
  }

\DeclareDocumentCommand \Finale { }
  { \tl_use:N \g__phdd_finale_tl }
\tl_new:N \g__phdd_finale_tl
\cs_new_protected:Npn \__phdd_input:n #1
  {
    \tl_gclear:N \g__phdd_module_name_tl
    \MakePercentIgnore
    \input{#1}
    \MakePercentComment
  }

\DeclareDocumentCommand \DocInput { m }
  {
    \clist_map_inline:nn {#1}
      {
        \clist_put_right:Nn \g_docinput_clist {##1}
        \__phdd_input:n {##1}
      }
  }
\DeclareDocumentCommand \DocInputAgain { }
  { \clist_map_function:NN \g_docinput_clist \__phdd_input:n }
\DeclareDocumentCommand \DocInclude { m }
  {
    \relax\clearpage
    \docincludeaux
    \IfFileExists{#1.fdd}
      { \cs_set:Npn \currentfile{#1.fdd} }
      { \cs_set:Npn \currentfile{#1.dtx} }
    \int_compare:nNnTF \@auxout = \@partaux
      { \@latexerr{\string\include\space cannot~be~nested}\@eha }
      { \@docinclude #1 }
  }
\cs_gset:Npn \@docinclude #1
  {
    \clearpage
    \immediate\write\@mainaux{\string\@input{#1.aux}}
    \@tempswatrue
    \if@partsw
      \@tempswafalse
      \cs_set:Npx \@tempb{#1}
      \@for\@tempa:=\@partlist\do
        {
          \ifx\@tempa\@tempb\@tempswatrue\fi
        }
    \fi
    \if@tempswa
      \cs_set_eq:NN \@auxout                 \@partaux
      \immediate\openout\@partaux #1.aux
      \immediate\write\@partaux{\relax}
      \cs_set_eq:NN \@ltxdoc@PrintIndex      \PrintIndex
      \cs_set_eq:NN \PrintIndex              \relax
      \cs_set_eq:NN \@ltxdoc@PrintChanges    \PrintChanges
      \cs_set_eq:NN \PrintChanges            \relax
      \cs_set_eq:NN \@ltxdoc@theglossary     \theglossary
      \cs_set_eq:NN \@ltxdoc@endtheglossary  \endtheglossary
      \part{\currentfile}
      {
        \cs_set_eq:NN \ttfamily\relax
        \cs_gset:Npx \filekey
          { \filekey, \thepart = { \ttfamily \currentfile } }
      }
      \DocInput{\currentfile}
      \cs_set_eq:NN \PrintIndex              \@ltxdoc@PrintIndex
      \cs_set_eq:NN \PrintChanges            \@ltxdoc@PrintChanges
      \cs_set_eq:NN \theglossary             \@ltxdoc@theglossary
      \cs_set_eq:NN \endtheglossary          \@ltxdoc@endtheglossary
      \clearpage
      \@writeckpt{#1}
      \immediate \closeout \@partaux
    \else
      \@nameuse{cp@#1}
    \fi
    \cs_set_eq:NN \@auxout \@mainaux
  }
\cs_gset:Npn \codeline@wrindex #1
  {
    \immediate\write\@indexfile
      {
        \string\indexentry{#1}
          { \filesep \int_use:N \c@CodelineNo }
      }
  }
\tl_gclear:N \filesep
\cs_gset:Npn \docincludeaux
  {
    \tl_set:Nn \thepart { \alphalph { part } }
    \tl_set:Nn \filesep { \thepart - }
    \cs_set_eq:NN \filekey \use_none:n
    \tl_gput_right:Nn \index@prologue
      {
        \cs_gset:Npn \@oddfoot
          {
            \parbox { \textwidth }
              {
                \strut \footnotesize
                \raggedright { \bfseries File~Key: } ~ \filekey
              }
          }
        \cs_set_eq:NN \@evenfoot \@oddfoot
      }
    \cs_gset_eq:NN \docincludeaux \relax
    \cs_gset:Npn \@oddfoot
      {
        \cs_if_exist:cTF { ver @ \currentfile }
          { File~\thepart :~{\ttfamily\currentfile}~ }
          {
            \GetFileInfo{\currentfile}
            File~\thepart :~{\ttfamily\filename}~
            Date:~\ExplFileDate\ % space
            Version~\ExplFileVersion
          }
        \hfill \thepage
      }
    \cs_set_eq:NN \@evenfoot \@oddfoot
  }
\RequirePackage{colorize}

\ExplSyntaxOn
\group_begin:
  \char_set_catcode_other:N \^^A
  \char_set_catcode_active:N \^^S
  \char_set_catcode_active:N \^^B
  \char_set_catcode_other:N \^^L
  \char_set_catcode_other:N \^^R
  \char_set_lccode:nn { `\^^A } { `\% }
  \char_set_lccode:nn { `\^^S } { `\  }
  \char_set_lccode:nn { `\^^B } { `\\ }
  \char_set_lccode:nn { `\^^L } { `\{ }
  \char_set_lccode:nn { `\^^R } { `\} }
  \tex_lowercase:D
    {
      \group_end:
      \cs_set_protected:Npn \xmacro@code #1 ^^A ^^S^^S^^S^^S ^^Bend ^^Lmacrocode^^R
        {\__phdd_xmacro_code:n {#1} \end{macrocode} }
    }

\group_begin:
  \bool_set_false:N \phdd_code_colorize_bool
  \char_set_catcode_active:N \<
  \char_set_catcode_active:N \>
  \cs_new_protected:Npn \__phdd_xmacro_code:n #1
    {
      \tl_if_in:nnTF {#1} { < @ @ = }
        { \__phdd_xmacro_code:w #1 \q_stop }
        {
          \tl_if_in:nnTF {#1} { < nocolor }
          {
            \bool_set_false:N \phdd_code_colorize_bool
            \tl_gset:Nn \l__phdd_store_tl {#1}
            \__phdd_detect_internals:N \l__phdd_store_tl
            \__phdd_replace_at_at:N \l__phdd_store_tl
            % Call the pretty printer or skip

            \bool_if:NTF \phdd_code_colorize_bool
              {
                \listings_code
                \tl_use:N \l__phdd_store_tl
              }
            {#1}

          }
          {
            \tl_gset:Nn \l__phdd_store_tl {#1}
            \__phdd_detect_internals:N \l__phdd_store_tl
            \__phdd_replace_at_at:N \l__phdd_store_tl
            % Call the pretty printer or skip

            \bool_if:NTF \phdd_code_colorize_bool
              {
                \listings_code
                \tl_use:N \l__phdd_store_tl
              }
            {
             \tl_use:N \l__phdd_store_tl

           % #1
            }
          }
        }


    }

  \cs_new_protected:Npn \__phdd_xmacro_code:w #1 < @ @ = #2 > #3 \q_stop
    {
      \tl_set:Nn \l__phdd_tmpa_tl {#1}
      \__phdd_detect_internals:N \l__phdd_tmpa_tl
      \__phdd_replace_at_at:N \l__phdd_tmpa_tl

      \tl_gset:Nn \g__phdd_module_name_tl {#2}
      \tl_put_right:Nn \l__phdd_tmpa_tl { < @ @ = #2 > }

      \tl_set:Nn \l__phdd_tmpb_tl {#3}
      \__phdd_detect_internals:N \l__phdd_tmpb_tl
      \__phdd_replace_at_at:N \l__phdd_tmpb_tl
      \tl_put_right:No \l__phdd_tmpa_tl { \l__phdd_tmpb_tl }
      \tl_use:N \l__phdd_tmpa_tl
    }

\group_end:
\iow_new:N \g__phdd_func_iow
\tl_new:N \l__phdd_doc_def_tl
\tl_new:N \l__phdd_doc_undef_tl
\tl_new:N \l__phdd_undoc_def_tl
\cs_new_protected:Npn \__phdd_show_functions_defined:
  {
    \bool_lazy_and:nnT
      { \g__phdd_typeset_implementation_bool } { \g__phdd_checkfunc_bool }
      {
        \iow_term:x { \c__phdd_iow_separator_tl \iow_newline: }
        \iow_open:Nn \g__phdd_func_iow { \c_sys_jobname_str .cmds }

        \tl_clear:N \l__phdd_doc_def_tl
        \tl_clear:N \l__phdd_doc_undef_tl
        \tl_clear:N \l__phdd_undoc_def_tl
        \seq_map_inline:Nn \g_doc_functions_seq
          {
            \seq_if_in:NnTF \g_doc_macros_seq {##1}
              {
                \tl_put_right:Nx \l__phdd_doc_def_tl
                  { ##1 \iow_newline: }
                \iow_now:Nn \g__phdd_func_iow { > ~ ##1 }
              }
              {
                \tl_put_right:Nx \l__phdd_doc_undef_tl
                  { ##1 \iow_newline: }
                \iow_now:Nn \g__phdd_func_iow { ! ~ ##1 }
              }
          }
        \seq_map_inline:Nn \g_doc_macros_seq
          {
            \seq_if_in:NnF \g_doc_functions_seq {##1}
              {
                \tl_put_right:Nx \l__phdd_undoc_def_tl
                  { ##1 \iow_newline: }
                \iow_now:Nn \g__phdd_func_iow { ? ~ ##1 }
              }
          }
        \__phdd_functions_typeout:nN
          {
            Functions~both~documented~and~defined: \iow_newline:
            (In~order~of~being~documented)
          }
          \l__phdd_doc_def_tl
        \__phdd_functions_typeout:nN
          { Functions~documented~but~not~defined: }
          \l__phdd_doc_undef_tl
        \__phdd_functions_typeout:nN
          { Functions~defined~but~not~documented: }
          \l__phdd_undoc_def_tl

        \iow_close:N \g__phdd_func_iow
        \iow_term:x { \c__phdd_iow_separator_tl }
      }
  }
\AtEndDocument { \__phdd_show_functions_defined: }
\cs_new_protected:Npn \__phdd_functions_typeout:nN #1#2
  {
    \tl_if_empty:NF #2
      {
        \typeout
          {
            \c__phdd_iow_midrule_tl \iow_newline:
            #1 \iow_newline:
            \c__phdd_iow_midrule_tl \iow_newline:
            #2
          }
        \tl_clear:N #2
      }
  }
\cs_new_protected:Npn \__phdd_show_not_tested:
  {
    \bool_if:NT \g__phdd_checktest_bool
      {
        \tl_clear:N \l__phdd_tmpa_tl
        \prop_if_empty:NF \g__phdd_missing_tests_prop
          {
            \cs_set:Npn \__phdd_tmpa:w ##1##2
              {
                \iow_newline:
                \space\space\space\space \exp_not:n {##1}
                \clist_map_function:nN {##2} \__phdd_tmpb:w
              }
            \cs_set:Npn \__phdd_tmpb:w ##1
              {
                \iow_newline:
                \space\space\space\space\space\space * ~ ##1
              }
            \tl_put_right:Nx \l__phdd_tmpa_tl
              {
                \iow_newline: \iow_newline:
                The~ following~ macro(s)~ have~ incomplete~ tests:
                \iow_newline:
                \prop_map_function:NN
                  \g__phdd_missing_tests_prop \__phdd_tmpa:w
              }
          }
        \seq_if_empty:NF \g__phdd_not_tested_seq
          {
            \cs_set:Npn \__phdd_tmpa:w ##1
              { \clist_map_function:nN {##1} \__phdd_tmpb:w }
            \cs_set:Npn \__phdd_tmpb:w ##1
              {
                \iow_newline:
                \space\space\space\space ##1
              }
            \tl_put_right:Nx \l__phdd_tmpa_tl
              {
                \iow_newline:
                \iow_newline:
                The~ following~ macro(s)~ do~ not~ have~ any~ tests:
                \iow_newline:
                \seq_map_function:NN
                  \g__phdd_not_tested_seq \__phdd_tmpa:w
              }
          }
        \tl_if_empty:NF \l__phdd_tmpa_tl
          {
            \int_set:Nn \l__phdd_tmpa_int { \tex_interactionmode:D }
            \errorstopmode
            \ClassError { l3doc } { \l__phdd_tmpa_tl } { }
            \int_set:Nn \tex_interactionmode:D { \l__phdd_tmpa_int }
          }
      }
  }
\AtEndDocument { \__phdd_show_not_tested: }
\g@addto@macro \theindex { \MakePrivateLetters }
\cs_gset:Npn \verbatimchar {&}
\setcounter { IndexColumns } { 2 }
\IndexPrologue
  {
    \part*{Index}
    \markboth{Index}{Index}
    \addcontentsline{toc}{part}{Index}
    The~italic~numbers~denote~the~pages~where~the~
    corresponding~entry~is~described,~
    numbers~underlined~point~to~the~definition,~
    all~others~indicate~the~places~where~it~is~used.
  }
\cs_gset_protected:Npn \SpecialIndex #1
  {
    \@bsphack
    \__phdd_special_index:nn {#1} { }
    \@esphack
  }
\msg_new:nnn { l3doc } { print-index-howto }
  {
    Generate~the~index~by~executing\\
    \iow_indent:n
      { makeindex~-s~gind.ist~-o~\c_sys_jobname_str.ind~\c_sys_jobname_str.idx }
  }
\tl_gput_right:Nn \PrintIndex
  { \AtEndDocument { \msg_info:nn { l3doc } { print-index-howto } } }
\cs_gset_protected:Npn \it@is@a #1
  {
    \use:x
      {
        \__phdd_special_index_module:nnnnN
          {#1}
          { \bslash #1 }
          { }
          { }
          \c_false_bool
      }
  }
\cs_new_protected:Npn \__phdd_special_index:nn #1#2
  {
    \__phdd_key_get:n {#1}
    \quark_if_no_value:NF \l__phdd_override_module_tl
      { \tl_set_eq:NN \l__phdd_index_module_tl \l__phdd_override_module_tl }
    \__phdd_special_index_module:ooonN
      { \l__phdd_index_key_tl }
      { \l__phdd_index_macro_tl }
      { \l__phdd_index_module_tl }
      {#2}
      \l__phdd_index_internal_bool
  }
\cs_generate_variant:Nn \__phdd_special_index:nn { o }
\tl_new:N \l__phdd_index_escaped_macro_tl
\tl_new:N \l__phdd_index_escaped_key_tl
\cs_new_protected:Npn \__phdd_special_index_module:nnnnN #1#2#3#4#5
  {
    \use:x
      {
        \exp_not:n { \__phdd_special_index_aux:nnnnnn {#1} {#2} }
          \tl_if_empty:nTF {#3}
            { { } { } { } }
            {
              \str_if_eq:nnTF {#3} { TeX }
                {
                  { TeX~and~LaTeX2e }
                  { \string\TeX{}~and~\string\LaTeXe{} }
                }
                {
                  {#3}
                  { %\string\pkg our \pkg is a ref use something else
                   \bgroup\string\color{red}
                   \string\texttt{#3}~\egroup }
                }
              { \bool_if:NT #5 { ~internal } ~commands: }
            }
      }
          {#4}
  }
\cs_generate_variant:Nn \__phdd_special_index_module:nnnnN { ooo }
\cs_new_protected:Npn \__phdd_special_index_aux:nnnnnn #1#2#3#4#5#6
  {
    \tl_set:Nn \l__phdd_index_escaped_key_tl {#1}
    \__phdd_quote_special_char:N \l__phdd_index_escaped_key_tl
    \__phdd_special_index_set:Nn \l__phdd_index_escaped_macro_tl {#2}
    \str_if_eq:onTF { \@currenvir } { macrocode }
      { \codeline@wrindex }
      {
        \str_case:nnF {#6}
          {
            { main }  { \codeline@wrindex }
            { usage } { \index }
          }
          { \HD@target \index }
      }
      {
        \tl_if_empty:nF { #3 #4 #5 }
          { #3 #5 \actualchar #4 #5 \levelchar }
        \l__phdd_index_escaped_key_tl
        \actualchar
        {
          \token_to_str:N \verbatim@font \c_space_tl
          \l__phdd_index_escaped_macro_tl
        }
        \encapchar
        hdclindex{\the\c@HD@hypercount}{#6}
      }
  }
\cs_new_protected:Npn \__phdd_special_index_set:Nn #1#2
  {
    \tl_set:Nx #1 { \tl_to_str:n {#2} }
    \__phdd_if_almost_str:nTF {#2}
      {
        \tl_replace_all:Non #1 { \tl_to_str:n { __ } }
          {
            \verbatimchar
            \token_to_str:N \_ \token_to_str:N \_
            \token_to_str:N \verb * \verbatimchar
          }
        \exp_args:Nx \tl_map_inline:nn
          { \tl_to_str:N \verbatimchar \token_to_str:N _ }
          {
            \tl_replace_all:Nnn #1 {##1}
              {
                \verbatimchar \c_backslash_str ##1
                \token_to_str:N \verb * \verbatimchar
              }
          }
        \tl_set:Nx #1
          {
            \token_to_str:N \verb * \verbatimchar
            #1 \verbatimchar
          }
      }
      {
        \tl_set:Nn #1 {#2}
        \tl_replace_all:Non #1
          { \c_backslash_str }
          { \token_to_str:N \bslash \c_space_tl }
      }
    \__phdd_quote_special_char:N #1
  }
\cs_new_protected:Npn \__phdd_quote_special_char:N #1
  {
    \tl_map_inline:nn { \quotechar \actualchar \encapchar \levelchar }
      {
        \tl_replace_all:Nxn #1
          { \tl_to_str:N ##1 } { \quotechar \tl_to_str:N ##1 }
      }
  }
\cs_new_protected:Npn \__phdd_key_get:n #1
  {
    \__phdd_key_get_base:nN {#1} \l__phdd_index_macro_tl
    \tl_set:Nx \l__phdd_index_key_tl
      { \tl_to_str:N \l__phdd_index_macro_tl }
    \tl_clear:N \l__phdd_index_module_tl
    \tl_if_in:NoTF \l__phdd_index_key_tl { \tl_to_str:n { __ } }
      { \bool_set_true:N \l__phdd_index_internal_bool }
      { \bool_set_false:N \l__phdd_index_internal_bool }
    \exp_last_unbraced:NNo
    \tl_if_head_eq_charcode:oNT
      { \l__phdd_index_key_tl } \c_backslash_str
      { \__phdd_key_pop: }
    \tl_if_in:NoTF \l__phdd_index_key_tl { \token_to_str:N : }
      { \__phdd_key_func: }
      {
        \tl_if_in:NoTF \l__phdd_index_key_tl { \token_to_str:N _ }
          { \__phdd_key_var: }
          {
            \tl_if_in:NoT \l__phdd_index_key_tl { \token_to_str:N @ }
              { \tl_set:Nn \l__phdd_index_module_tl { TeX } }
          }
      }
  }
\cs_new_protected:Npn \__phdd_key_pop:
  {
    \tl_set:Nx \l__phdd_index_key_tl
      { \tl_tail:N \l__phdd_index_key_tl }
  }
\cs_new_protected:Npn \__phdd_key_trim_module:n #1
  {
    \cs_set:Npn \__phdd_tmpa:w ##1 #1 ##2 \q_stop
      { \exp_not:n {##1} }
    \tl_set:Nx \l__phdd_index_module_tl
      { \exp_after:wN \__phdd_tmpa:w \l__phdd_index_module_tl #1 \q_stop }
  }
\cs_new_protected:Npn \__phdd_key_drop_underscores:
  {
    \tl_if_head_eq_charcode:oNT { \l__phdd_index_key_tl } _
      { \__phdd_key_pop: \__phdd_key_drop_underscores: }
  }
\cs_new_protected:Npn \__phdd_key_func:
  {
    \tl_if_head_eq_charcode:oNT { \l__phdd_index_key_tl } .
      { \__phdd_key_pop: }
    \__phdd_key_drop_underscores:
    \tl_set_eq:NN \l__phdd_index_module_tl \l__phdd_index_key_tl
    \exp_args:No \__phdd_key_trim_module:n { \token_to_str:N : }
    \exp_args:No \__phdd_key_trim_module:n { \token_to_str:N _ }
  }
\cs_new_protected:Npn \__phdd_key_var:
  {
    \exp_args:Nx \tl_if_head_eq_charcode:nNTF
      { \exp_args:No \str_tail:n \l__phdd_index_key_tl } _
      {
        \str_case:fn { \str_head:N \l__phdd_index_key_tl }
          {
            { q } { \tl_set:Nn \l__phdd_index_module_tl { quark } }
            { s } { \tl_set:Nn \l__phdd_index_module_tl { quark } }
          }
        \__phdd_key_pop:
        \__phdd_key_pop:
        \__phdd_key_drop_underscores:
        \tl_if_empty:NT \l__phdd_index_module_tl
          {
            \seq_set_split:NoV \l__phdd_tmpa_seq
              { \token_to_str:N _ } \l__phdd_index_key_tl
            \tl_set:Nx \l__phdd_index_module_tl
              {
                \int_case:nnF { \seq_count:N \l__phdd_tmpa_seq }
                  {
                    { 0 } { }
                    { 1 } { int }
                    { 2 } { \seq_item:Nn \l__phdd_tmpa_seq { 2 } }
                  }
                  { \seq_item:Nn \l__phdd_tmpa_seq { 1 } }
              }
          }
      }
      {
        \tl_set_eq:NN \l__phdd_index_module_tl \l__phdd_index_key_tl
        \exp_args:No \__phdd_key_trim_module:n { \token_to_str:N _ }
      }
  }
\GlossaryPrologue
  {
    \part*{Change~History}
    {\GlossaryParms\ttfamily\hyphenchar\font=`\-}
    \markboth{Change~History}{Change~History}
    \addcontentsline{toc}{part}{Change~History}
  }
\msg_new:nnn { !__phdd } { print-changes-howto }
  {
    Generate~the~change~list~by~executing\\
    \iow_indent:n
      { makeindex~-s~gglo.ist~-o~\c_sys_jobname_str.gls~
                                      \c_sys_jobname_str.glo }
  }
\tl_gput_right:Nn \PrintChanges
  { \AtEndDocument { \msg_info:nn { !__phdd } { print-changes-howto } } }

\newcounter{phddargcount}
\cs_new:Npn \labelargcount
  {
     \texttt{\#\arabic{phddargcount}\hskip\labelsep$=$}
  }
\cs_new:Npn \macroarguments
  {\list\labelargcount
    {\usecounter{phddargcount}
     \leftmargin=2\leftmargin
     \parsep \z@ \@plus\z@ \@minus\z@
     \topsep 4\p@ \@plus\p@ \@minus2\p@
     \itemsep\z@ \@plus\z@ \@minus\z@
     \def\makelabel##1{\hss\llap{##1}}}
  }

\cs_new:Npn \endmacroaruments {\endlist}
\def\Module{
 \color{green800}
}
\def\AltMacroFont{
 \fontfamily{lmtt}\fontseries{lc}
 }

\ExplSyntaxOff
\wlog{************************************************}
\wlog{ END PHD-DOCUMENTATION                          }
\wlog{************************************************}

\endinput
%%
%% End of file `phd-documentation.sty'.
