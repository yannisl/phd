% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-runningheads 
A package to manage running heads in LaTeX
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a template for defining a class.
%</readme>
%<*readmemd>
### The `phd-runningheads` LaTeX2e package (version 1.0.0)

The `phd` latex package and the class with the same name provide
convenient methods to create new styles for books, reports
and articles. It also loads the most commonly used packages 
and resolves conflicts.

This work consists of the file  

   `phd-runningheads.dtx`,
   
and the derived files   

   `phd-runningheads.ins`,  
   `phd-runningheads.pdf`, 
   `phd-runningheads.sty`.

###Installation

run

       `phd-lua phd-runningheads.dtx` on windows
          

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

### Documentation

The package was written using the `doc` and `docscript` packages,
so that it is self documented in a literary programming style. 
The .pdf is a fat document, providing over fifty book styles (the
equivalent of classes) plus there is a lot of write-up on the inner
workings of TeX and LaTeX2e. However, you don't need to know much
to use it.

      \usepackage{phd}
      \include{style13}

All choices, are made via an extended key-value interface. 
Although not a compliment, it resembles CSS and the keys are a bit verbose but
attributes are easy to change and have a consistent and easy to remember interface.

To set or add a key we only use one command:

      \cxset{chapter name font-size = Huge,
             chapter number font-size = HUGE} 

### Future Development

This is still an experimental version, but I will retain the
interface in future releases. There is a large amount of
work still to be carried out to improve the template styles
provided, to test it more thoroughly and to add a number of
improvements in the special designs. At present I estimate
that I have completed about 80% of the work that needs
to be done.

__The package as it stands is not production stable.__ 


%</readmemd>
%<*todo>
Improve on User markup
%</todo>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd-runningheads 
A package to manage running heads in LaTeX
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble
\postamble
 Copyright (C) 2015 by Dr. Yiannis Lazarides <yannislaz@gmail.com>
\endpostamble
%\usedir{tex/latex/\jobname}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{RH}}
 }
%</install>
%<install>\endbatchfile

%<*internal>
%\usedir{source/latex/\jobname}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
%\usedir{doc/latex/demopkg}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\generate{
  \file{\jobname.md}{\from{\jobname.dtx}{readmemd}}
}
\generate{
  \file{\jobname-todo.tex}{\from{\jobname.dtx}{TODO}}
}
\generate{
  \file{\jobname-tests.tex}{\from{\jobname.dtx}{test}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\RequirePackage[2017/04/15]{latexrelease}

\ProvidesFile{phd-runningheads.drv}%
  [2013/01/13 v1.0 ]%
\documentclass[book,twoside,12pt,a4paper]{phddoc}

\usepackage[bottom=4cm,footskip=3cm,headheight=17.15pt,
            headsep=1.5\baselineskip]{geometry}
\savegeometry{std}
\usepackage{microtype}
\usepackage{phd}
\usepackage{phd-pkgmanager}
\usepackage{phd-fontmanager}
\usepackage{phd-scriptsmanager}
\usepackage{documentation}
\usepackage{phd-lowersections}
\usepackage{phd-runningheads}
\input{defaults-chapters}
\sethyperref
\addbibresource{phd.bib}% Syntax 
\EnableCrossrefs
\CodelineIndex
\RecordChanges
  
   
  
\makeatletter
\long\def\auxm#1(#2);{%
  \def\Xtemp{#1}%
  \def\Ytemp{#2}%
  \parindent=0pt
  \addvspace{1.5pt}%
  \par\leavevmode
  \hangafter=1\relax   \hangindent=1em\relax
  \bgroup  
   \bfseries\sffamily\color{red}\Xtemp\,\color{black}(\textit{\Ytemp})\hskip0.1em
  \egroup
}
\makeatother
\usepackage[cache=false]{minted} 
\usemintedstyle[latex]{borland}  
\let\citep\cite
\tcbuselibrary{raster}
\begin{document}
\DEBUGOFF

 \frontmatter
  \pagestyle{empty}
  
  \def\shorttitle{On Running Heads}
 \coverpage{desert}{Book Design Monographs}{Camel Press}{ON RUNNING HEADS}{AND THEIR DESIGN} 
 \secondpage
 \newpage
 \tableofcontents
 \mainmatter
 \pagestyle{headings}
 
  \makeatletter
  \@debugtrue
  \makeatother
  \cxset{section format=hang,
         chapter format = stewart,
         palette rouge}
  
  \def\docauthoright{Y Lazarides}
  \def\headingslogo{\tikz[remember picture, overlay,inner sep=0pt,outer sep=0pt ]\node[midway]{\includegraphics[width=1.3cm]{latex3.png}};}
  \def\fulltitle{\textsl{ON RUNNING HEADS AND THEIR DESIGN}}
  \def\halftitleleft{\textls{\sffamily DOHA OASIS}}
  \def\halftitleright{\sffamily\textls{MEP COMMERCIAL ANALYSIS}}
   
  \include{./sections/headersandfooters01}           
  \include{./sections/headersandfooters}  
   
    
%   \include{./lua/luaio}   
%      
%   \include{./sections/luatex}            
%   \include{./lua/strings}         
%   \include{./sections/i18n}  
%   \include{./sections/solar}    
%   \include{./lua/lua-tables}      
%   \include{./lua/pattern-matching}
%   \include{./lua/lpeg}
%   \include{./lua/modules}      
%   \include{./lua/nodes}         
%    
%   \include{./lua/metatables}    
%    \end{document}
%   
%   \include{./sections/colors} %pass     
%   \include{./sections/indices}
%%   %\include{./sections/unicodemath}      
%   \include{./sections/expandafter}   %pass
%   \include{./sections/futurelet} %pass     
%   \include{./sections/io} %pass        
%%%  \include{./sections/numbers}         
%   \include{./sections/iteration} %pass        
%  \include{./sections/datastructures}         
%  \include{./sections/characters}  %pass       
%  \include{./sections/paragraphs}       
%  \include{./sections/boxesandglue} %passbiber
%  \include{./sections/rulesandleaders} %pass       
%%  %\include{./l3sections/l3box}  %error due to coffins    
%  \include{./sections/tables} %pass threepart table to fix      
%%%  \include{./sections/environments}         
%  \include{./sections/lists} %pass     
%%%  %\include{./sections/maths-01} 
%%%  \include{./sections/tableofcontents}        
%  \include{./sections/graphics}         
% \include{./sections/captions}       
%%%  %\include{./sections/floats}       
%   \include{./sections/languages} %pass error in epigraph?     
%%%  \include{./sections/acronyms}   
%%%  \include{./sections/dropcaps}    
%   \include{./sections/book-class} %pass      
%  \include{./sections/long-figures} %pass       
% \include{./sections/fonts} %pass       
%% % \include{./sections/luatex-fonts}         
%  \include{./sections/classes}  %pass
%%%  %% KERNEL BELOW    
% \include{./kernel/kernel-intro}   
%%%  \include{./kernel/kernel-ltfsstrc}    
%%%  \include{./kernel/kernel-preload}  
%%%   \include{./kernel/kernel-ltalloc}        
%%% % \include{./kernel/kernel-ltthm}       
%%  \include{./kernel/kernel-ltplain}         
%%%  \include{./kernel/kernel-lthyphen}       
%%%  \include{./kernel/kernel-ltidxglo}       
%%%  \include{./kernel/kernel-lttab}       
%%%  \include{./kernel/kernel-ltpictur}       
%  \include{./kernel/kernel-ltboxes}         
%%%  \include{./kernel/kernel-ltlogos}       
%%%  \include{./kernel/kernel-ltfinal}      
%%%  \include{./kernel/kernel-ltfiles}       
% \include{./kernel/kernel-ltcounts}       
%%%  \include{./kernel/kernel-ltfntcmd}       
%%  \include{./kernel/kernel-ltvers}
%  \include{./kernel/kernel-ltpage}    
%  \include{./kernel/kernel-ltfloat}       
%  \include{./kernel/kernel-ltoutput}
%  \include{./kernel/kernel-ltpageno}
%% 
%  \include{./kernel/kernel-lterror}
%  \include{./kernel/kernel-ltmath}
%   \include{./kernel/kernel-ltspace} 
%%  \include{./kernel/kernel-ltfssini} 
%%  \include{./kernel/kernel-ltbibl}
%%  \include{./kernel/kernel-ltoutenc}
%%  \include{./kernel/kernel-ltfssbas}
%%  \include{./kernel/kernel-fontdef}
%%  
%%  \include{./kernel/kernel-ltcntrl}
%  \include{./kernel/kernel-ltxref}
%  \include{./kernel/kernel-ltclass} 
%%  \include{./kernel/kernel-ltdefns}
%%  \include{./kernel/kernel-ltlists}
%%  \include{./kernel/kernel-ltmiscen} 
%%  \include{./kernel/kernel-d-ltxdefns} 
%%      
%  \include{./kernel/kernel-N-ltlength}     
%  \include{./kernel/kernel-ltsect}   
% 

%\nocite{*}
%\printbibliography
%\printindex
%  \end{document}    
%	  \end{document}     
%  \include{./sections/expandafter}         
%  \include{./sections/io}         
%  \include{./sections/numbers}         
%  \include{./sections/iteration}         
%  \include{./sections/datastructures}         
%  \include{./sections/characters}         
%\end{document}         
% 
%  \include{./sections/OTR}
 %\include{./sections/headersandfooters01}
 %\include{./sections/headersandfooters}
 
 %\overfullrule10pt
 \raggedbottom

 
  \cxset{quotation parindent=1.5em,}
%   \input{./sections/introduction}
%  \input{./sections/OTR}
%  
%  \input{./kernel/kernel-ltfloat}
%  \input{./kernel/kernel-ltoutput}
% 
%  \input{./sections/headersandfooters01}
%  \input{./sections/headersandfooters}
%  \appendix
%  \input{./kernel/kernel-ltpage} 
  \DocInput{phd-runningheads.dtx}%
\end{document}
%</driver>
% \fi
%
% \CheckSum{553}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2011/05/03}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \GetFileInfo{template.dtx}
% \providecommand*{\url}{\texttt}
%  \def\fileversion{v1.0}          
%  \def\filedate{2018/10/26}
% \pagestyle{headings}
% \title{The \textsf{\jobname} package.
% \author{Dr. Yiannis Lazarides}
% \thanks{This
%        file (\texttt{\jobname.dtx}) has version number 
%        \fileversion, last revised
%        \filedate.}
% }
% 
% \date{\filedate}
%
% \maketitle
% \hbadness=10000  ^^A CHECK THIS
% \begin{summary}
%   This package forms part of the \pkgname{phd} bundle and can be used to manage running heads
%   with a key-value interface. It comes with a number of predefined styles, that cover most of the
%  common use cases for books and journals. It is still in alpha stage. However it will not hopefully
%  break anything if used and is compatible with the fancyhdr package.
% \end{summary}
%
% 


% 
%
%
% \StopEventually{}
% \cxset{texti = {In this chapter the code is described, in literate style. We describe how the keys are generated
% semi-automatically. The running heads layout engine is then described in detail. We also have a short code in
% Go that can be used to generate, packages like this, so as to speed up the code.} 
%}
% \cxset{textii=I have been impressed with the urgency of doing. Knowing is not enough;
%  we must apply. Being willing is not enough; we must do.\\
% — Leonardo da Vinci }
% \chapter{Package Code}
%
% \epigraph{A word which stands for anything that has an existence is a Noun.}{---Willian Cobbett, \emph{Grammar} (1819)}
%
% \section{Introduction} 
% 
% \begin{enumerate}
% \item To simplify the user interface for specifying  headers and footers in \latexe documents.
% \item To make available a number of differently styled page headers to lessen
%  the need for book designers to have to create new ones.
% \item To provide a key value interface to blend with the other keys provided by
%  the \pkgname{phd}  package.
% \end{enumerate}
%
% \section{Simplifying the terminology}
% The terminology used here should not be confused with sectioning commands which are referred to as \emph{headings}
% and not headers. We will refer to  \enquote{header} as an exclusive term for \enquote{running heads}.
%
%  \begin{description}
%  \item [header] The top part of the page where a running head can be inserted.
%  \item [footer]  The bottom part of the page, where a running footer can be inserted.
%  \item [header odd] The header on an odd page.
%  \item [header even] The header on an even page.
%  \item [footer odd] The footer on an odd page.
%  \item [footer even] The footer on an even page.
% \end{description}
%
% \section{Users}
%  We classify users according to the \LaTeX3 terminology as a) programmers b) template designers
%  and c) authors.
%
% \subsection{Author}
%  We assume that the author has an exising template which she is using but might want to do
%  some minor modifications, for example use an italic shape for the font of the mark, but an 
%  upright font for the page numbers. 
%
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{|
%~~~~~~~~\textit{header even}~~|format          = apa,|
%~~~~~~~~\textit{header even mark} |font-size   = Large,|
%~~~~~~~~\textit{header even mark} |font-family = serif,|
%~~~~~~~~\textit{header even mark} |font-weight = normal,|
%~~~~~~~~\textit{header even mark} |font-shape  = italic,|  
%~~~~~|}|
%}  
%
% We follow the idea of representing the basic elements of documents
% as elements, each one having a parent in order to specify
% the element we need to style as accurate as possible. One can think of
% this approach being congruent with objects in other languages.
% As a matter fact nothing stops us from defining a key value
% interface as shown below.
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{| 
%~~~~~~~~\textit{header.even.mark.font.size}   = |Large,|
%~~~~~~~~\textit{header.even.mark.font.family} = |serif,|
%~~~~~|}|
%}  
%
% This would pehaps make it easier for the tempalte designer, but I have rejected
% the idea as my aim is to make it easy for the author, who can search the template
% and just enter a couple of new property values.
%
% \subsection{Template designer}
% 
% The template designer in the example above would have selected the format style
% from a number of predefined formats (templates) or would have created a style
% called \textit{apa} from an existing template and modified it using declarative
% key style.
%
% \subsection{The programmer}
%
% The programmer in the example above could have created the basic format
% \textit{apa} by using both declarative as well as defining or using existing
% macros. To the programmer we offer an extension mechanism, where the contents
% of a |ps@| command are defined. For example teh programmer can define a new
% style using \tikzname, but without having to worry about defining full |ps@|
% and their interface.
%
% \section{Canned Templates}
%
% Luckily the available permutations for headers and footers are less than the
% variations one sees in headings. Our approah here is to create |ps@| like
% commands to cover most use cases. We are interested in defining these structurally
% and leave the font and colour styling to the the key value interface.
%
% \begin{enumerate}
%  \item Redefine \textit{plain,headings,myheadings} to add appropriate hooks
%        for styling and rules.
%  \item Provide in addition 5-10 other styles to cover all the needs of the
%        hundred or so designs we provide with the \pkgname{phd} package.
% \end{enumerate}
%
% \subsection{Mark composition}
%
% A mark can either be a \docAuxCommand{leftmark} or a \docAuxCommand{rightmark}. They
% are normally composed of the title of a heading and the page number styled in 
% numerous ways. We need to make allowances as to how to handle different type 
% of mark combinations. Sometimes they include dates, revision numbers, author name, title or short title, logos and even images or links. The latter offers a very user 
% friendly way to navigate through a book's sections.
%
% \section{Introduction}
%  This manual is typeset according to the conventions of the
% \LaTeX{} \textsc{docstrip} utility which enables the automatic
% extraction of the \LaTeX{} macro source files~\footcite{goossens93}.
%    \begin{macrocode}
%<*RH>
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\ProvidesPackage{phd-runningheads}%
  [2017/04/15 v1.0 Running heads styling (YL)]%
%    \end{macrocode}
%
% \section{Marks and pagestyles}
% 
% We first define a number of commonly used headings and then we add some keys
% to make them more flexible. The package happily coexists with \pkgname{fancyhdr}
% so you can define your own if you want.
% 
% We need an ugly hack to avoid some complaints from \pkgname{tikz}.
%    \begin{macrocode}
\global\let\tikz@ensure@dollar@catcode=\relax
%    \end{macrocode}
%
% We define a handler to handle the choice keys for what goes in the center left or right
% of a header or footer.
% 
% \begin{description}
% \item[none] The cell will have no contents.
% \item[leftmark] This will be for more sophisticated users to change. For a two side book class it will normally be:
%           \begin{quote}
%                 \leftmark
%           \end{quote}
% \item[rightmark] This will be for more sophisticated users to change. For a two side book class it will normally be:
%           \begin{quote}
%                 \leftmark
%           \end{quote}
% \item[page] This simply prints the page number.
% \item[today] Prints the date.
% \item [date] Prints a date set by the user. Gets formatted the same way it is typed. 
% \item [jobname] The name of the file of the document. For this document it is {\ttfamily \jobname}.
% \item[author] The author name. 
% \item[copyright] A short copyright note: In this book it is:
%     \begin{quote}
%        \headingscopyrightline
%     \end{quote}
%     The actual text is set at the document key level, or can be redefined by the template designer to something different.
% \item[logo] This is for enterprise people. Inserts a logo. In this document, I have borrowed the \latex3 logo, it is:
%  \begin{center}
%     \headingslogo
%  \end{center}
%  \vspace*{1cm}
% Note that this is defined to place the image on the page background layer, using \tikzname. You can get very creative with this as it
% can act as another hook to the headers. The reason I put it on the background is to keep the height of the real header reasonable. Small
% logos will freak out the enterprise branding committee!
% \item[title] This is the full title of the publication. In this document it is:
%   \begin{quote}
%     \fulltitle
%   \end{quote}
% \item[short title] For publications with very long names, it is preferable to use a shorter title, if you need it in one of the headers or footers. In this document it is:
%   \begin{quote}
%     \shorttitle
%   \end{quote}
%   \item[short title left] For publications with very long names, it is preferable to use a shorter title, if you need it in one of the headers or footers. In this document it is:
%   \begin{quote}
%     \shorttitle
%   \end{quote}
%   \item[short title right] For publications with very long names, it is preferable to use a shorter title, if you need to split in over two pages, this is the right part of the title. Can only be used for two side printing. In this document it is:
%   \begin{quote}
%     \shorttitle
%   \end{quote}
%  \item[file date] For publications with very long names, it is preferable to use a shorter title, if you need to split in over two pages, this is the right part of the title. Can only be used for two side printing. In this document it is:
%   \begin{quote}
%     \filedate
%   \end{quote}
% \end{description}
% I have listed all the above here, both as an aide memoir as well as a feature test. 
%    \begin{macrocode}
\ExplSyntaxOn
  \pgfkeys{/handlers/.mark/.code = 
    \pgfkeysalso
      {
        \pgfkeyscurrentpath/.code=
          \str_case_x:nnTF {##1}  
            {
              { none       } { \tl_gset:cn  {#1} { \empty        } } 
              { leftmark   } { \tl_gset:cn  {#1} { \leftmark     } } 
              { rightmark  } { \tl_gset:cn  {#1} { \rightmark    } } 
              { page       } { \tl_gset:cn  {#1} { \thepage      } } 
              { today      } { \tl_gset:cn  {#1} { \today        } } 
              { jobname    } { \tl_gset:cn  {#1} { \jobname      } }
              { author     } { \tl_gset:cn  {#1} 
                                   { \docauthoright              } }
              { copyright  } { \tl_gset:cn  {#1} 
                                  { \headingscopyrightline       } }
              { logo       } { \tl_gset:cn  {#1} { \headlogo     } }
              { shorttitle } { \tl_gset:cn  {#1} { \shorttitle   } } 
              { fulltitle  } { \tl_gset:cn  {#1} { \fulltitle    } }
              { filedate   } { \tl_gset:cn  {#1} { \filedate     } }
            }
            {                         }
            {   \tl_gset:cn {#1} { } \tl_put_right:cn {#1} 
                        {\csname ##1 \endcsname}   }
    }   
  }
\ExplSyntaxOff     
% 
%    \end{macrocode}
%
% \section{Author interface commands}
% \begin{docCommand}{docauthorright}{}
% \end{docCommand}
%    \begin{macrocode}
\def\@docauthor{Y Lazarides}

\def\docauthoright{\@docauthor}

\def\headlogo{\tikz[remember picture, overlay,inner sep=0pt,outer sep=0pt ]\node[midway]     {\includegraphics[width=1.2cm]{latex3.png}};}
  \def\fulltitle{\textsl{ON RUNNING HEADS AND THEIR DESIGN}}
  \def\halftitleleft{\textls{\sffamily DOHA OASIS}}
  \def\halftitleright{\sffamily\textls{MEP COMMERCIAL ANALYSIS}}
%    \end{macrocode}  
%    \begin{macrocode}  
\ExplSyntaxOn
\dim_new:N \phd_headerwidth_dim
\dim_new:N \phd_footerwidth_dim
\ExplSyntaxOff
%    \end{macrocode}
%  As we are having three basic elements for every heading, this results in
%  12 sets of properties, i.e. if we target font weight, we need to allow for
%  odd pages, even pages and top and bottom. But we have left, center and 
%  right, hence  $4 \times 3 = 12$. An alternative way would be to target
%  the marks, however we are allowing for arbitrary text, fields such as jobname
%  and dates to be inserted, to cater for all the marks would be too tedious.
%
%  We also want to keep to the primary objectives of the phd package to provide
%  the user a set of keys that do not require macro mark-up. It ended up as tedious
%  and verbose, but by the time a full template is provided the user will see styles
%  rather than keys.
%  
% \begin{docCommand} {create_pagestyle_keys:n } { \marg{pagestyle name} }
%    Creates a standard set of keys for a |\pagestyle|. It takes the |\pagestyle|
%    name as its argument, which is used a prefix for the keys and the functions.
%    The same prefixing is later on used in the formatters and the |\pagestyle|
%    creation functions, thus enabling the automatic creation of new styles.
% \end{docCommand}
%    \begin{macrocode}    
\ExplSyntaxOn
\cs_new:Npn \create_pagestyle_keys:n #1 
  {
    \cxset
      {
%    \end{macrocode}
%
% The key \refAux{style\_name even header left} produces control sequences holding values for the content
% of one of the header or footer elements, i.e, left, center, right. Valid keys are those that  
% have been defined earlier through the handler code. For example:
%
%   \refAux{style\_name even header left} = \docValue{today} 
%
% will print the date in the even header element at the left.
%
%
%    \begin{macrocode}       
        #1~even~header~left~mark/.mark   = #1_even_header_left,
        #1~even~header~center~mark/.mark = #1_even_header_center,
        #1~even~header~right~mark/.mark  = #1_even_header_right,
        #1~even~footer~left~mark/.mark   = #1_even_footer_left,
        #1~even~footer~center~mark/.mark = #1_even_footer_center,
        #1~even~footer~right~mark/.mark  = #1_even_footer_right,
%    \end{macrocode}
% Next we define keys for background colors
%
%    \begin{macrocode}        
        #1~even~header~background~color/.code = 
          \cs_set:cpn {#1_even_header_background_color}{##1},
        #1~even~footer~background~color/.code = 
          \cs_set:cpn {#1_even_footer_background_color}{##1},
          
        #1~even~header~frame~color/.code = 
          \cs_set:cpn {#1_even_header_frame_color}{##1},
        #1~even~footer~frame~color/.code = 
          \cs_set:cpn {#1_even_footer_frame_color}{##1},  

        #1~even~header~toprule/.code = 
          \cs_set:cpn {#1_even_header_toprule_dim}{##1},
        #1~even~footer~toprule/.code = 
          \cs_set:cpn {#1_even_footer_toprule_dim}{##1}, 
          
        #1~even~header~bottomrule/.code = 
          \cs_set:cpn {#1_even_header_bottomrule_dim}{##1},
        #1~even~footer~bottomrule/.code = 
          \cs_set:cpn {#1_even_footer_bottomrule_dim}{##1},                                                      
         
%          
        #1~even~header~left~font-family/.fontfamily   = 
           #1_even_header_left_fontfamily, 
        #1~even~header~left~font-size/.fontsize       = 
           #1_even_header_left_fontsize, 
        #1~even~header~left~font-weight/.fontweight   = 
           #1_even_header_left_fontweight,  
        #1~even~header~left~font-shape/.fontstyle     = 
           #1_even_header_left_fontshape,
%         
        #1~even~header~center~font-family/.fontfamily = 
           #1_even_header_center_fontfamily, 
        #1~even~header~center~font-size/.fontsize     = 
           #1_even_header_center_fontsize, 
        #1~even~header~center~font-weight/.fontweight = 
           #1_even_header_center_fontweight,  
%    \end{macrocode}
% \lorem\lorem
%    \begin{macrocode}           
        #1~even~header~center~font-shape/.fontstyle   = 
           #1_even_header_center_fontshape,
%          
        #1~even~header~right~font-family/.fontfamily  = 
           #1_even_header_right_fontfamily, 
        #1~even~header~right~font-size/.fontsize      = 
           #1_even_header_right_fontsize, 
        #1~even~header~right~font-weight/.fontweight  = 
           #1_even_header_right_fontweight,  
        #1~even~header~right~font-shape/.fontstyle    = 
           #1_even_header_right_fontshape,         
%        
        #1~odd~header~left~mark/.mark    = #1_odd_header_left,
        #1~odd~header~center~mark/.mark  = #1_odd_header_center,
        #1~odd~header~right~mark/.mark   = #1_odd_header_right,
        #1~odd~footer~left~mark/.mark    = #1_odd_footer_left,
        #1~odd~footer~center~mark/.mark  = #1_odd_footer_center,
        #1~odd~footer~right~mark/.mark   = #1_odd_footer_right,        
        #1~odd~header~background~color/.code = 
          \cs_set:cpn {#1_odd_header_background_color}{##1},
        #1~odd~footer~background~color/.code = 
          \cs_set:cpn {#1_odd_footer_background_color}{##1},     
%        
        #1~odd~header~frame~color/.code = 
          \cs_set:cpn {#1_odd_header_frame_color}{##1},
        #1~odd~footer~frame~color/.code = 
          \cs_set:cpn {#1_odd_footer_frame_color}{##1}, 
          
        #1~odd~header~toprule/.code = 
          \cs_set:cpn {#1_odd_header_toprule_dim}{##1},
        #1~odd~footer~toprule/.code = 
          \cs_set:cpn {#1_odd_footer_toprule_dim}{##1},  
          
        #1~odd~header~bottomrule/.code = 
          \cs_set:cpn {#1_odd_header_bottomrule_dim}{##1},
        #1~odd~footer~bottomrule/.code = 
          \cs_set:cpn {#1_odd_footer_bottomrule_dim}{##1},                                                                                            
%    \end{macrocode}
% \paragraph{Odd header font property key definitions}
%    \begin{macrocode}           
		  #1~odd~header~left~font-face/.fontface   = 
            #1_odd_header_left_fontface_tl,
            
        #1~odd~header~left~font-family/.fontfamily   = 
            #1_odd_header_left_fontfamily, 
        #1~odd~header~left~font-size/.fontsize       = 
            #1_odd_header_left_fontsize, 
        #1~odd~header~left~font-weight/.fontweight   = 
            #1_odd_header_left_fontweight,  
        #1~odd~header~left~font-shape/.fontstyle     = 
            #1_odd_header_left_fontshape,
%         
        #1~odd~header~center~font-family/.fontfamily = 
            #1_odd_header_center_fontfamily, 
        #1~odd~header~center~font-size/.fontsize     = 
            #1_odd_header_center_fontsize, 
        #1~odd~header~center~font-weight/.fontweight = 
            #1_odd_header_center_fontweight,  
        #1~odd~header~center~font-shape/.fontstyle   = 
            #1_odd_header_center_fontshape,
%          
        #1~odd~header~right~font-family/.fontfamily  = 
            #1_odd_header_right_fontfamily, 
        #1~odd~header~right~font-size/.fontsize      = 
            #1_odd_header_right_fontsize, 
        #1~odd~header~right~font-weight/.fontweight  = 
            #1_odd_header_right_fontweight,  
        #1~odd~header~right~font-shape/.fontstyle    = 
            #1_odd_header_right_fontshape, 
%    \end{macrocode}
% \paragraph{Odd footer font properties} These are defined using the same conventions as for the rest.
%    \begin{macrocode}            
%  footer fonts
        #1~odd~footer~left~font-family/.fontfamily   = 
            #1_odd_footer_left_fontfamily, 
        #1~odd~footer~left~font-size/.fontsize       = 
            #1_odd_footer_left_fontsize, 
        #1~odd~footer~left~font-weight/.fontweight   = 
            #1_odd_footer_left_fontweight,  
        #1~odd~footer~left~font-shape/.fontstyle     = 
            #1_odd_footer_left_fontshape,
%         
        #1~odd~footer~center~font-family/.fontfamily = 
            #1_odd_footer_center_fontfamily, 
        #1~odd~footer~center~font-size/.fontsize     = 
            #1_odd_footer_center_fontsize, 
        #1~odd~footer~center~font-weight/.fontweight = 
            #1_odd_footer_center_fontweight,  
        #1~odd~footer~center~font-shape/.fontstyle   = 
            #1_odd_footer_center_fontshape,
%          
        #1~odd~footer~right~font-family/.fontfamily  = 
            #1_odd_footer_right_fontfamily, 
        #1~odd~footer~right~font-size/.fontsize      = 
            #1_odd_footer_right_fontsize, 
        #1~odd~footer~right~font-weight/.fontweight  = 
            #1_odd_footer_right_fontweight,  
        #1~odd~footer~right~font-shape/.fontstyle    = 
            #1_odd_footer_right_fontshape,
%    \end{macrocode}
%
% \paragraph{Even footer font properties} We continue with the even footer properties, setting all the font properties
% individually.\par
%
%    \begin{macrocode}
        #1~even~footer~left~font-family/.fontfamily   = 
            #1_even_footer_left_fontfamily, 
        #1~even~footer~left~font-size/.fontsize       = 
            #1_even_footer_left_fontsize, 
        #1~even~footer~left~font-weight/.fontweight   = 
            #1_even_footer_left_fontweight,  
        #1~even~footer~left~font-shape/.fontstyle     = 
            #1_even_footer_left_fontshape,
         
        #1~even~footer~center~font-family/.fontfamily = 
            #1_even_footer_center_fontfamily, 
        #1~even~footer~center~font-size/.fontsize     = 
            #1_even_footer_center_fontsize, 
        #1~even~footer~center~font-weight/.fontweight = 
            #1_even_footer_center_fontweight,  
        #1~even~footer~center~font-shape/.fontstyle   = 
            #1_even_footer_center_fontshape,
          
        #1~even~footer~right~font-family/.fontfamily  = 
            #1_even_footer_right_fontfamily, 
        #1~even~footer~right~font-size/.fontsize      = 
            #1_even_footer_right_fontsize, 
        #1~even~footer~right~font-weight/.fontweight  = 
            #1_even_footer_right_fontweight,  
        #1~even~footer~right~font-shape/.fontstyle    = 
            #1_even_footer_right_fontshape,                                 
  }  
}
\ExplSyntaxOff
%    \end{macrocode}

% \begin{docCommand} {set_pagestyle_key_defaults:n } { \marg{pagestyle name} }
%     Creates a standard set of keys for a |\pagestyle|. It takes the |\pagestyle|
%     name as its argument, which is used a prefix for the keys and the functions.
%     The same prefixing is later on used in the formatters and the |\pagestyle|
%     creation functions, thus enabling the automatic creation of new styles.
% \end{docCommand}
% We now set the defaults.    
%    \begin{macrocode}
\ExplSyntaxOn  
\cs_new:Npn \set_pagestyle_key_defaults:n #1 
 {  
  \cxset
  { 
  
    #1~odd~header~left~mark              = leftmark,
    #1~odd~header~center~mark            = none,
    #1~odd~header~right~mark             = page, 
    #1~odd~footer~left~mark              = today,
    #1~odd~footer~center~mark            = jobname,
    #1~odd~footer~right~mark             = logo,    
    #1~even~header~left~mark             = page,
    #1~even~header~center~mark           = none,
    #1~even~header~right~mark            = rightmark, 
    #1~even~footer~left~mark             = today,
    #1~even~footer~center~mark           = none,
    #1~even~footer~right~mark            = page,
    
   
%    \end{macrocode}
% \lorem\lorem
%
%    \begin{macrocode}    
% bg colors    
    #1~odd~header~background~color  = theoddheaderbgcolor,
    #1~odd~footer~background~color  = theoddfooterbgcolor,,
    #1~even~header~background~color = theevenheaderbgcolor,
    #1~even~footer~background~color = theevenfooterbgcolor,
% frame colors    
    #1~odd~header~frame~color       = theoddheaderframerule,
    #1~odd~footer~frame~color       = theoddfooterframerule,
    #1~even~header~frame~color      = theevenheaderframerule,
    #1~even~footer~frame~color      = theevenfooterframerule,    
% toprule
    #1~odd~header~toprule  = 0pt,
    #1~odd~footer~toprule  = 0pt,
    #1~even~header~toprule = 0pt,
    #1~even~footer~toprule = 0pt,   
% bottomrule
    #1~odd~header~bottomrule  = 1.2pt,
    #1~odd~footer~bottomrule  = 0pt,
    #1~even~header~bottomrule = 1.2pt,
    #1~even~footer~bottomrule = 0pt,          
% fonts even header
    #1~even~header~left~font-family = sffamily, 
    #1~even~header~left~font-weight = normal, 
    #1~even~header~left~font-size   = small, 
    #1~even~header~left~font-shape  = upshape,  
%
    #1~even~header~center~font-family = sffamily, 
    #1~even~header~center~font-weight = normal, 
    #1~even~header~center~font-size   = small, 
    #1~even~header~center~font-shape  = upshape,   
%
    #1~even~header~right~font-family = sffamily, 
    #1~even~header~right~font-weight = normal, 
    #1~even~header~right~font-size   = small, 
    #1~even~header~right~font-shape  = itshape, 
%
% fonts odd header
   % #1~odd~header~left~font-face     = tiresias,
    #1~odd~header~left~font-family   = rmfamily, 
    #1~odd~header~left~font-weight   = normal, 
    #1~odd~header~left~font-size     = small, 
    #1~odd~header~left~font-shape    = upshape,  
%

    #1~odd~header~center~font-family = sffamily, 
    #1~odd~header~center~font-weight = normal, 
    #1~odd~header~center~font-size   = small, 
    #1~odd~header~center~font-shape  = upshape,   
%
    #1~odd~header~right~font-family  = rmfamily, 
    #1~odd~header~right~font-weight  = normal, 
    #1~odd~header~right~font-size    = small, 
    #1~odd~header~right~font-shape   = upshape, 
    
% footer fonts
    #1~even~footer~left~font-family = rmfamily, 
    #1~even~footer~left~font-weight = normal, 
    #1~even~footer~left~font-size   = small, 
    #1~even~footer~left~font-shape  = upshape,  
%
    #1~even~footer~center~font-family = sffamily, 
    #1~even~footer~center~font-weight = normal, 
    #1~even~footer~center~font-size   = normal, 
    #1~even~footer~center~font-shape  = upshape,   
%
    #1~even~footer~right~font-family = sffamily, 
    #1~even~footer~right~font-weight = normal, 
    #1~even~footer~right~font-size   = small, 
    #1~even~footer~right~font-shape  = upshape, 
%    \end{macrocode}
% \lorem\lorem
%    \begin{macrocode}
% fontsfooter
    #1~odd~footer~left~font-family   = rmfamily, 
    #1~odd~footer~left~font-weight   = normal, 
    #1~odd~footer~left~font-size     = small, 
    #1~odd~footer~left~font-shape    = upshape,  
%
    #1~odd~footer~center~font-family = rmfamily, 
    #1~odd~footer~center~font-weight = normal, 
    #1~odd~footer~center~font-size   = small, 
    #1~odd~footer~center~font-shape  = upshape,   
%
    #1~odd~footer~right~font-family  = rmfamily, 
    #1~odd~footer~right~font-weight  = normal, 
    #1~odd~footer~right~font-size    = small, 
    #1~odd~footer~right~font-shape   = upshape,                    
   }   
}
 

\ExplSyntaxOff   
%    \end{macrocode}
% 
%    \begin{macrocode}
\cxset{pagestyle/.code=\pagestyle{#1}}
%    \end{macrocode}
%
%
% \section{Formatters}
%
%  Formatters are functions responsible for typesetting the layout, given
%  the key constrains.
% 
%  First we define some lengths to use as offsets for drawing the running heads into
%  the margins.
%  \begin{docCommand}{even_offset_l}{\marg{length}}
%  
%  \end{docCommand}
% The \docLength*{header_width_dim} is the width of the header. This is defined in \latex2e to be equal to the 
% \docAuxCommand*{textwidth}. This dimension can be adjusted using offsets.
%    \begin{macrocode}
\ExplSyntaxOn
\dim_gzero_new:N \head_width_dim
\dim_set_eq:NN \head_width_dim \textwidth

\dim_new:N  \even_offset_l 
\dim_set:Nn \even_offset_l {1cm}
\dim_new:N  \even_offset_r
\dim_set:Nn \even_offset_r {0pt}

\let\ps@plainltx\ps@plain
%    \end{macrocode}
%
%  
%    \begin{macrocode}   
%
\tl_new:N \leftglue
\tl_new:N \rightglue 
\ExplSyntaxOff
%
%    \end{macrocode}
%
%
% \section{Formatting with \cs{parbox}es}
% The classical way of formatting headers uses \docAuxCommand*{parbox}'es. This package adopts
% an approach using formatters, where the typesetting can be used in various ways. The first
% such formatter, which we call classical adopts this approach. We start by defining parboxes.
%
% \begin{docCommand}{phd_parbox_header_left:nnnnn}{}
%    The function takes 5 parameters.
%    \begin{itemize}
%    \item[\#1] parbox alignment, accepts c,t,b and defaults to c.
%    \item[\#2] parbox width
%    \item[\#3] hook
%    \item[\#4] alignment
%    \item[\#5] contents
%    \end{itemize}
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\msg_new:nnnn { phd-runningheads }{ invalid-parbox-alignment }
  { #1~not~a~valid~parbox~alignment~token. }
  { use~one~of~ [t,b,c]. I~have~changed~#1~to~`b'.~Press~enter~to~continue.}
  
\cs_gset:Npn \phd_parbox_header_left:nnnnn #1 #2 #3 #4 #5 
  {
    \str_case:nnTF {#1}
      {
        {c} {}
        {b} {}
        {t} {}
	    } 
	    {\parbox[#1]{#2}{#3#4#5}} %true code
	    {
	     \msg_error:nnx { phd-runningheads } { invalid-parbox-alignment } {#1}
	     \parbox[b]{#2}{#3 #4 #5}}  %false code
      }
      
\cs_gset:Npn \phd_parbox_header_center:nnnnn #1 #2 #3 #4 #5 
  {
    \str_case:nnTF {#1}
      {
        {c} {}
        {b} {}
        {t} {}
	    } 
	    {\parbox[#1]{#2}{#3 #4 #5}} %true code
	    {\parbox[b]{#2}{#3 #4 #5}}  %false code
  }  
\cs_gset:Npn \phd_parbox_header_right:nnnnn #1 #2 #3 #4 #5 
  {
    \str_case:nnTF {#1}
      {
        {c} {}
        {b} {}
        {t} {}
	    } 
	    {\parbox[#1]{#2}{#3 #4 #5}} %true code
	    {\parbox[b]{#2}{#3 #4 #5}}  %false code
  }   
  
\cs_gset:Npn \phd_parbox_footer_left:nnnnn #1 #2 #3 #4 #5 
  {
    \str_case:nnTF {#1}
      {
        {c} {}
        {b} {}
        {t} {}
	    } 
	    {\parbox[#1]{#2}{#3 #4 #5}} %true code
	    {\parbox[b]{#2}{#3 #4 #5}}  %false code
  }
\cs_gset:Npn \phd_parbox_footer_center:nnnnn #1 #2 #3 #4 #5 
  {
    \str_case:nnTF {#1}
      {
        {c} {}
        {b} {}
        {t} {}
	    } 
	    {\parbox[#1]{#2}{#3 #4 #5}} %true code
	    {\parbox[b]{#2}{#3 #4 #5}}  %false code
  }  
\cs_gset:Npn \phd_parbox_footer_right:nnnnn #1 #2 #3 #4 #5 
  {
    \str_case:nnTF {#1}
      {
        {c} {}
        {b} {}
        {t} {}
	    } 
	    {\parbox[#1]{#2}{#3 #4 #5}} %true code
	    {\parbox[b]{#2}{#3 #4 #5}}  %false code
  }   
  	
\ExplSyntaxOff
%    \end{macrocode}
%</RH>
%<*test>
%    \begin{macrocode}
%% Tests for error messages in parboxes. 
%% First test must generate an error message.
%% Must get one error message.
\PassOptionsToPackage{latin}{babel}
\documentclass{book}
\usepackage{expl3}
\usepackage{phd}
\usepackage{phd-pkgmanager}
\usepackage{phd-runningheads}
\begin{document}
\selectlanguage{Latin}
\pagestyle{test}
\chapter{First Chapter}
\lipsum[1-6]
\section{First Section}
\lipsum[1-20]
\ExplSyntaxOn
\fboxsep=0pt
\fbox
  {
    \phd_parbox_header_left:nnnnn {d}{.45\textwidth}{
       \relax}{\raggedright}{\lorem}
  } 
%  
\fbox
  {
    \phd_parbox_header_left:nnnnn {b}{.45\textwidth}{\relax}{
       \raggedleft}{\lorem}
  } 
\ExplSyntaxOff
\end{document}
%    \end{macrocode}
%</test>
%<*RH>
% 
% \begin{docCommand}{phdh_head}{\meta{arguments}}
%   \#1 phddimolh etc \cs{relax} or \cs{hss}\\
%   \#2 Contents left\\
%   \#3 Contents center\\
%   \#4 Contents right\\
%   \#5 phddimolh relax or hss\\
%   headeight is from latx geometry\\
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
% resets all parameters
% save some latex2e kernel macros
\let\ltxoddhead\@oddhead
\let\ltxbaselinestretch\baselinestretch
\let\phd_baselinestretch\baselinestretch

% latex2e interfaces to the package
\let\phd_raggedleft\raggedleft
\let\phdh_raggedright\raggedright
\let\phdh_centering\centering
\let\phdh_everypar\everypar
\let\phd_head_height\headheight

\dim_new:N \head_width
\dim_set:Nn \head_width {\textwidth}
%    \end{macrocode}
%    \begin{macrocode}
\dim_new:N \phd_dim_even_left_header
\dim_new:N \phd_dim_even_right_header
\dim_new:N \phd_dim_odd_left_header
\dim_new:N \phd_dim_odd_right_header
%    \end{macrocode}
%
% 
%    \begin{macrocode}
\dim_new:N \phd_dim_even_left_footer
\dim_new:N \phd_dim_even_right_footer
\dim_new:N \phd_dim_odd_left_footer
\dim_new:N \phd_dim_odd_right_footer
%    \end{macrocode}
%
%    \begin{macrocode}
\def\phdh@setoffs{%
  \phdh@global\let\headwidth\phdh_headwidth
  \phdh@global\let\phd_dimolh\phd_offset_olh
  
  \phdh@global\let\phd_dimelh\phd_offset_elh 
  \phdh@global\let\phd_dimorh\hss
  \phdh@global\let\phd_dimerh\hss 
  \phdh@global\let\phd_dimolf\phd_offset_olf
  
  \phdh@global\let\phd_dimelf\phd_offset_elf 
  \phdh@global\let\phd_dimorf\hss

  \phdh@global\let\phd_dimerf\hss
}

%\addtolength{\head_width_dim}{\marginparsep}
%\addtolength{\head_width_dim}{\marginparwidth}

%    \end{macrocode}
%
% \lorem\lorem\lorem
%    \begin{macrocode}
\cs_set:Npn \phdh_reset{
  \phdh_everypar{}
  \restorecr\endlinechar=13
  \let\\\@normalcr 
}

\cs_gset:Npn \phd_redefines{  
  \cs_set:Npn \phd_scratch {5}
  \if_meaning:w
    \phd_scratch \phd_baselinestretch
  \else:
    \cs_gset:Npn \phd_baselinestretch {1}
  \fi:  
  \let\baselinestretch\phd_baselinestretch 
  
   
  \def\nouppercase##1
      {
        { 
          \let\uppercase\relax\let\MakeUppercase\relax
          \expandafter\let\csname MakeUppercase \endcsname\relax##1
        }
      }%
      
  \ifx\undefined\@newbaseline % NFSS not present; 2.09 or 2e
     \ifx\@normalsize\undefined 
       \normalsize % for ucthesis.cls
     \else 
       \@normalsize 
    \fi 
  \else % NFSS (2.09) present
    \@newbaseline%
  \fi
}

%    \end{macrocode}
%\lorem\lorem
%    \begin{macrocode}

\def\phdh@vbox#1#2{
  \setbox0\vbox{#2}
  \ifdim\ht0>#1\phdh@warning
  {\string#1 is too small (\the#1): ^^J Make it at least \the\ht0.^^J We
    now make it that large for the rest of the document.^^J This may
    cause the page layout to be inconsistent, however\@gobble}%
  \dimen0=#1\global\setlength{#1}{\ht0}\ht0=\dimen0\fi %\color{yellow}\color@block{\wd0}{\ht0}{\dp0}
  \box0}
%    \end{macrocode}
%
% \begin{docCommand}{format_running_head_parbox}{\meta{arguments}}
%   Typesets the layout using parboxes
% \end{docCommand}
% \lorem\lorem
%    \begin{macrocode}  
\cs_new:Npn \format_running_head_parbox #1#2#3#4#5 {
  \group_begin:
  \fboxsep0pt
  #1
  \hbox to\head_width_dim {\colorbox{yellow}{%
  
  \phdh_reset
  \emergencystretch 3em%
  \phd_redefines
  \tex_hsize:D = \textwidth
  \dim_add:Nn \phd_head_height{17pt}
  \colorbox{yellow}{\phdh@vbox \phd_head_height
    {%
      \tex_hrule:D width \dimexpr(\head_width_dim) height1.5pt \scan_stop:
      \vskip 2.5pt
        % set the hbox to natural width
      \hbox to \textwidth 
        {
    	    % first box overlaps to the right
         \hbox_overlap_right:n 
            {
               %\parbox[t]{\head_width}{\raggedright#2}
               \phd_parbox_header_left:nnnnn {t} {\head_width_dim}{\empty}{\RaggedRight}{#2}
            } 
            \hfill
             \parbox[t]{\head_width_dim}{\centering#3}
            \hfill
            \hbox_overlap_left:n
              {
                \parbox[t]{\head_width}{\raggedleft#4}
              }
         }
         \tex_hrule:D width \dimexpr(\head_width) height1.5pt \relax
      }
    }
    #5--
    }} % end colorbox
    \group_end:
  }
  
\cs_gset:cpn {ps_aux_parbox} #1 #2 
  {  
    \cs_gset:Npn \@oddhead {\format_running_head_parbox {}
      {
         \thepage}{Chapter 1\\ First Chapter}{right}{} 
      }
    \cs_gset:Npn \@evenhead {\format_running_head_parbox{}{
       test}{The~Title~of~the~Book}{right}{}}
    \def\@oddfoot{\format_running_head_parbox{}{test}{
       The Title of the Book}{right}{}}
    \def\@evenfoot{\format_running_head_parbox{}{test}{
      The Title of the Book}{right}{}}
  } 
 
\ExplSyntaxOff
%    \end{macrocode}
% 
%
% The headerboxes are four boxes, based on \pkg{tcolorbox} that are used to place the text. We can speed
% things up, by developing our own boxes, or use tikznodes. However for the time being I have decided to
% retain the tcolorbox style, so as to have a ready made set of keys.
% 
%    \begin{macrocode}
\ExplSyntaxOn
\newtcbox{\headerbox}[1] 
  {%
     nobeforeafter,
     size     = minimal,
     width    = 0pt, 
     colback  = \cs_if_exist_use:cTF {#1background_color} {} {blue},  
     colframe = \cs_if_exist_use:cTF {#1frame_color} { } {blue},
     box~align= base, 
     toprule  = \cs_if_exist_use:cTF {#1toprule_dim} { } {0pt},
     bottomrule=\cs_if_exist_use:cTF {#1bottomrule_dim} { } {0pt},
     %arc=1mm,
     %boxsep=1pt,
     top=1pt,
     bottom=1.5pt,
     %sharp~corners=north,
     %colframe= \cs_if_exist_use:cTF {#1frame_color} { } {red}, 
		%interior~style={top~color=bgsexy,
		%bottom~color=white},
     %rounded~corners=all,
     %drop~shadow=black,
  }
%    \end{macrocode}
%    \begin{macrocode}

\def\getcolorback#1{#1}
  
  
\tcbset{framed/.style={nobeforeafter,
     size=minimal,
     width= 0pt, 
     %left~skip=20pt,
     colback= {\cs_if_exist_use:cTF {#1background_color} { } 
                {      
                     %\msg_error:nnn {phd-runningheads}{undefined-variable}{~~}
                     yellow               }
                },  
     toprule =2pt,
     bottomrule = 2pt,
     leftrule = 2pt,
     rightrule = 2pt,
     colframe= {\cs_if_exist_use:cTF {#1frame_color} { } {red}},
     box~align=base,
     %arc=2mm,
    boxsep=2pt,
    %rounded~corners=all,
    coltext=black,}}  
    
\tcbset{default/.style={nobeforeafter,
     size=minimal,
     width= 0pt, 
     %left~skip=20pt,
     colback= {\cs_if_exist_use:cTF {#1background_color} { } 
                {      
                  yellow
                  %\msg_error:nnn {phd-runningheads}{undefined-variable}{#1}   
                    
                }
              },  
     toprule =0pt,
     bottomrule = 0pt,
     leftrule = 0pt,
     rightrule = 0pt,
     colframe= {\cs_if_exist_use:cTF {#1frame_color} { } {red}},
     box~align=base,
     %arc=2mm,
    boxsep=0pt,
    %rounded~corners=all,
    coltext=black,}}     
    
\newtcbox{\headerboxleft}[1]%
  {
%     nobeforeafter,
%     size=minimal,
%     width= 0pt, 
%     %left~skip=20pt,
%     colback= {\cs_if_exist_use:cTF {#1background_color1} { } 
%                {      
%                    
%                      white
%                    
%                }
%              },  
%     toprule =2pt,
%     bottomrule = 2pt,
%     leftrule = 2pt,
%     rightrule = 2pt,
%     colframe= {\cs_if_exist_use:cTF {#1frame_color1} { } {red}},
%     box~align=base,
%     %arc=2mm,
%    boxsep=2pt,
%    %rounded~corners=all,
%    coltext=black,
    %drop~shadow=black,
    %grow~to~right~by=1cm,
    default=#1,
  } 
  
\newtcbox{\headerboxcenter}[1]%
  {
%     nobeforeafter,
%     size=minimal,
%     width=0pt,
%     colback=   \cs_if_exist_use:cTF {#1background_color} { } {blue}, 
%     colframe= white,
%     box~align=base,
      
      default=#1,
      %width=0.3\textwidth,
 }  
 
\newtcbox{\headerboxright}[1]%
  {
     default=#1,
 } 
  
%    \end{macrocode}
% 
%  \begin{docCommand} { set_header_font_aux:n  }  {  \marg{prefix}  }
%   Internal auxiliary function for setting fonts.
%  \end{docCommand}
%
%    
% \section{Error messages}
%    \begin{macrocode} 
\ExplSyntaxOn
 \msg_new:nnnn { phd-runningheads }{ undefined-variable }
  { #1~is~not~defined. }
  { Use~the~settings~command~to~set~it.}
  


\msg_new:nnnn {phd-runningheads}{font / font-face-property-undefined}
  {font-face~property~for~#1~is~not~defined.}
  {use \string\cxset toset it.}  
  
\msg_new:nnnn {phd-runningheads}{font / font-family-property-undefined}
  {fontfamily~property~for~#1~is~not~defined.}
  
  {use \string\cxset toset it.}
\msg_new:nnnn {phd-runningheads}{font / font-weight-property-undefined}
  {fontweight~property~for~#1~is~not~defined.}
  {use \string\cxset toset it.}

\msg_new:nnnn {phd-runningheads}{font / font-shape-property-undefined}
  {fontshape~property~for~#1~is~not~defined.}
  {use \string\cxset toset it.}
  
\msg_new:nnnn {phd-runningheads}{font / font-size-property-undefined}
  {font-size~property~for~#1~is~not~defined.}
  {use \string\cxset toset it.}  
  
\cs_new:Npn \set_header_font_aux:n #1
 {
   %\normalfont
%   \cs_if_exist_use:cTF {panunicode}{} % #1_fontface_tl   }{}
%   	{
%        \msg_warning:nnn {phd-runningheads} {font / font-face-property-undefined } { #1 }
%   	}
   	\normalfont
   \cs_if_exist_use:cTF { #1_fontfamily }{}
     {
       \msg_error:nnn{phd-runningheads}{font / font-family-property-undefined } { #1 }  
     }
     
   \cs_if_exist_use:cTF { #1_fontweight }{}
     {
       \msg_error:nnn{phd-runningheads}{font / font-weight-property-undefined } { #1 }  
     }
     
   \cs_if_exist_use:cTF { #1_fontshape  }{}
     {
       \msg_error:nnn{phd-runningheads}{font / font-shape-property-undefined } { #1 } 
     }
     
   \cs_if_exist_use:cTF { #1_fontsize   }{}
     {
       \msg_error:nnn{phd-runningheads}{font / font-shape-property-undefined } { #1 } 
     }
 }
\ExplSyntaxOff 
%    \end{macrocode} 
%
% \begin{docCommand}{headerhookleft}{}
% Adds a hook at the beginning of the top running head, to enable the addition of
% extra code. This is ideal for watermarks and the like. This command will have
% to be redefined before it is used.
% \end{docCommand}
%
%    \begin{macrocode} 
\ExplSyntaxOn
\cs_set:Npn \headhookleft {}      
%    \end{macrocode}
%
% \begin{docCommand} {format_running_head_box} { \marg {prefix} \marg{} \marg{} \marg{} }
%   The general formatter for heads.
%   \begin{description}
%   \item [\#1] outer box style
%   \item [\#2] page box style
%   \item [\#3] left glue
%   \item [\#4] right glue
%   \item [\#5] not used
%   \end{description}
%% \end{docCommand}
%
% The command typesets an |\hbox| to the total width of the text. It then uses a skip
% to draw the hbox into the margins or to push it into the right margin if necessary. We
% could have also used a leftskip and rightskip, if necessary.
%
% The |\hbox| contains three colorboxes, that contain the left, center and right contents.
% \lorem\lorem
%    \begin{macrocode}
\cs_new:Npn \format_running_head_box #1 #2 #3 #4 #5
  { \bgroup
   \emergencystretch 3em%
   \headhookleft
   \hoffset=0pt
     %\leftskip50pt\relax %\even_offset_l
     %\rightskip50pt%-\even_offset_l
    %
    %\skip_horizontal:n {-\dim_use:N \even_offset_l}\relax
    \vbadness=11000
      \hskip-\even_offset_l \vbox{
       \vfill 
       \rlap{\hbox{
          \dim_add:Nn \head_width_dim {2\even_offset_l}\relax
          
          \hbox~to~\head_width_dim %\head_width_dim
            
      { 
        \headerbox{#1} 
       { 
         \hbox_to_wd:nn \head_width_dim
         { 
           \rlap{\headerboxleft {#1}
             { 
               \set_header_font_aux:n { #1left  }
               \cs_if_exist_use:c   { #1left    }
              
             }}
             \hss
             \headerboxcenter {#1}
                {
                 \set_header_font_aux:n {#1center        }
                 \cs:w #1center \cs_end:
                 %[middle] for debug
                }  
             \hss
             \llap{\headerboxright {#1}
              { 
                 \set_header_font_aux:n   { #1right        }
                 % Calls the command for right box
                  \cs:w #1right \cs_end:
                  \selectfont
                  %\hss

              
             }
            }
          } % headerbox
      }}
     }
    }
    \par\vfill
    }  
    \egroup
  }
  
     %https://tex.stackexchange.com/questions/433265/header-and-footer-with-special-format          
%     \iffalse
%    \begin{tikzpicture}[remember~picture,overlay]
%    \fill[bgsexy]
%        (current~page.south~east) -- ++(-5,0) 
%            -- node[white,below~right,node~font=\sffamily,scale=3] 
%     {\thepage~~}
%        ++(5,5) -- cycle;
%    \end{tikzpicture}
%      \fi  
%    \end{macrocode}
%
% \begin{docCommand}{ps_aux}{\marg{running head name}\marg{formatter name}}
%    This auxiliary macro renews all the traditional commands for heads.
%    \#1 heading style name
%    \#2 formatter model name (available box, parbox)
% \end{docCommand}
%
%    \begin{macrocode}
\cs_gset:cpn {ps_aux_box} #1 #2
  { 
    \renewcommand*{\@evenhead}
      { 
        \cs:w format_running_head_#1 \cs_end: {#2_even_header_} {} {} {} {}
      } 
    \renewcommand*{\@oddhead}
      { 
        \cs:w format_running_head_#1\cs_end:  {#2_odd_header_} {} {} {} {}
      } 
    \renewcommand*{\@evenfoot}
      { 
        \cs:w format_running_head_#1\cs_end: {#2_even_footer_} {} {} {} {}
      } 
    \renewcommand*{\@oddfoot}
      { 
        \cs:w format_running_head_#1\cs_end: {#2_odd_footer_} {} {} {} {}
      }
    \cs_gset:Npn \sectionmark##1
     {
       \markright{\ifnum \c@secnumdepth >\z@
       \thesection\enskip\fi ##1}
     }
 }
%    \end{macrocode}
% 
% \section{Pagestyle}
%
% We are now almost ready to create the styles as used by \latex2e. By convention there are two commands that are used. 
% |\pagestyle| and |\thispagestyle|. These are defined in the kernel. 
%
% \begin{docCommand} {phd_create_new_ps:nnn}{ \marg{style name} \marg{prefix}  \marg{format suffix name} }
%  A generic function for creating new pagestyles. The function takes the pagestyle name as its
%  argument and calls an auxiliary function to create the |ps@| command. The 
%  second argument is a unique renderer name, in our case the most commonly used one is |box|  
% \end{docCommand}
% 
% The namespace |ps@| can be used as an interface to the \latex2e.
%
% \#1 namespace ps@
% \#2 heading style name
% \#3 formatter model name (available box, parbox)
%
%    \begin{macrocode} 
\cs_gset:Npn \phd_create_new_ps:nnn #1 #2 #3
  {
     \cs_gset:cpn {#1#2} 
       {  \SaveCurrentPalette
          \cxset{#2~style}
           % calls a function with the name ps_aux_box
           \cs:w ps_aux_#3\cs_end: {#3}{#2}
          \
       }
  }   
\ExplSyntaxOff 
%    \end{macrocode}
%
% Next we create the headings with some default keys. The default keys can then be overwritten
% to develop styles for each heading.
% 
%
% \begin{docCommand}{CreateNewPagestyle}{\oarg{options} \marg{prefix} \marg{style name} \marg{formatter name} }
%  Create a new set of running heads. 
% \end{docCommand}
%    \begin{macrocode} 
\ExplSyntaxOn
\NewDocumentCommand\CreateNewPagestyle {o m m m} 
  {
    \create_pagestyle_keys:n {#3} 
    % create standard defaults for the template
    \set_pagestyle_key_defaults:n {#3}
%   modify the defaults here and create a style
%   set the palette and add other keys
    \SaveCurrentPalette
    \cxset{#3~style/.style = {palette~\previouspalette,}}
    \phd_create_new_ps:nnn {#2}{#3} {#4}
   }
%    \end{macrocode}
% Once the keys are set, values can be changed by the user using |\cxset| at any point.
% The style is then available to be used normally as \cs{thispagestyle}\marg{pagestylename} or
% \cs{pagestyle}\marg{pagestylename}.
% For example I have changed the settings for this page's style to \textit{headings-spring-onion}
% by using:
%    \begin{quote}
%      |\thispagestyle{headings-spring-onion}|
%    \end{quote}   
% \thispagestyle{headings-spring-onion}
% and you can see that this page's style has been changed. There is no need to have the dashes
% in the pagestyle name; I have introduced this convention, just in case users get confused and
% leave extraneous spaces. 
%
% I have not used the name spaces |plain|, |empty|, |headings|, |myheadings|, |fancy| to avoid
% clashes with packages that might have been loaded or headings defined already by other classes.
% If these are to be redefined they are to be redefined by the template designer.
%
%    \begin{macrocode}
\CreateNewPagestyle[palette~bbc]{ps@}{test}{parbox}
\CreateNewPagestyle[palette~smithsonian]{ps@}{plainx}{box}
\CreateNewPagestyle[palette~orange~sakura]{ps@}
                                      {orange~sakura}{box}


\CreateNewPagestyle[palette~spring~onion]{ps@}
                                      {headings}{box}
\CreateNewPagestyle[palette~rouge]{ps@}{headings-rouge}{box}
\CreateNewPagestyle[palette~spring~onion]{ps@}
                                   {headings-spring-onion}{box}
\CreateNewPagestyle[palette~oprah]{ps@}{headings-oprah}{box}
\CreateNewPagestyle[palette~bbc]{ps@}{headings-bbc}{box}
\CreateNewPagestyle[palette~budapest]{ps@}
                                  {headings-budapest}{box}
\CreateNewPagestyle[palette~sugar~hearts]{ps@}
                                  {headings-sugar-hearts}{box}
\CreateNewPagestyle[palette~architectural]{ps@}{headings-architectural}{box}                                  
\ExplSyntaxOff



%    \end{macrocode} 
%
%  
%    \begin{macrocode} 
    \def\chaptermark#1{%
      \markboth {{%
      \begingroup
      \color{thechaptercolor}\MakeUppercase{%
        \ifnum \c@secnumdepth >\m@ne
          \if@mainmatter
            \@chapapp\ \thechapter}. \ %
          \fi
        \fi
        \endgroup
      {\color{thechaptercolor}#1}}}{}}%


\edef\@copyrightline{}
\newcommand\c@pyrightline[1]{%
  \gdef\@c@pyrightline{#1}}

\gdef\@c@pyrightline{%
  \emergencystretch 3em%need to remove
  \vbox to 5.5\p@{\noindent
 % \parbox[t]{\textwidth}{\normalfont\footnotesize\baselineskip 9\p@
 % \@copyrightline
  %}%
  \vss}%
}

\NewDocumentCommand\headingscopyrightline{ }{\copyright\ Y Lazarides (2013-2018)}
%    \end{macrocode}
% \section{The pagestyle headings}
% This is one of the most common headings. We provide a full |ps@| function for
% speed utilizing only some parameters. The \refCom{sectionmark} is inserted
% by \tex's inserts mechanism, during the section typesetting.
%   
% \section{Centered headings}
% 
%  \begin{docCommand}{ps@centerheadings } { \meta{void} }
%   Provides centered headings. Puts the section mark at the middle
%  of the header and the page at the right or left.
% \end{docCommand}
% 
%    \begin{macrocode}
\def\ps@centerheadings{%
 \let\@mkboth=\markboth
 \def\@evenfoot{}
  \def\@oddfoot {}
  
  \def\@evenhead{
   \verbatimsize
    \vbox{
     \tikzi[even center]
     \noindent
     \global\hoffset=0pc
      \mbox{\rm \thepage}~%
      \it \strut
       \leftmark\hfill\hbox{}%\par\vbox to 13pt{}%
%    \noindent\rule{37pc}{0.25pt}%
    }%
  }%
  \def\@oddhead{
    \vbox{%
    \tikzi[odd center]
     \global\hoffset=0pc
    \noindent\hfill
    \mbox{}\it 
    \verbatimsize
    \rightmark\hfill\hbox{}
      \makebox[\z@][r]{\rm
      \thepage}\par\nointerlineskip%
      \hfill
      \vskip0pt
    %\noindent\hspace*{0pc}\rule{37pc}{0.25pt}%
     }%
  }%
  
  \def\chaptermark##1{\markboth{##1}{##1}}
  
  \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
    \thesection\enskip\fi ##1}}%
   \def\chaptermark##1{\markboth{##1}{##1}}
   \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
      \thesection\hspace{0.5em}\fi ##1}}%
}
%    \end{macrocode}
%
% \end{document}
% \section{Flush headings}
% 
%  \begin{docCommand}{ps@flush} { \meta{void} }
%    Provides centered headings. Puts the section mark at the middle
%    of the header and the page at the right or left.
%  \end{docCommand}
% 
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \ps@flush
  { 
     \let\@mkboth=\markboth
     \def\@evenfoot{}
     \def\@oddfoot {}
     \def\@evenhead{}
     \def\@oddhead {}
     \def\@evenhead{
         \verbatimsize
         \parbox[t]{\textwidth}{
         \tikzi[even flush]
          \noindent
           \mbox{
             \rm \thepage}%
             \it \strut
            \enskip\leftmark
            \hfill\hbox{}
             }%
      }%
  
\def\@oddhead
  {
     \hbox:n
       {
         \rlap{\parbox[t]{\textwidth}
          {
            % \tikzi[odd flush]
             \noindent\hfill\hfill
              \mbox{} 
              \verbatimsize \rm
              \rightmark\hbox{}
              \mbox{
                 \rm
                 \space/\thinspace
                 \thepage
                }
%               \par\nointerlineskip%
%               \vskip0pt
%               \noindent\hspace*{0pc}\rule{\textwidth}{0pt}%
          }
       }  
    }%
  }
  
 \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
        \thesection\enskip\fi ##1}}%
        
 %\def\chaptermark##1{\markboth{##1}{}}

 \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
     \sectionname \enspace \thesection\hspace{0.5em}\fi ##1}}%
      
\ExplSyntaxOff      
}
%    \end{macrocode}

% \section{Chaperstyle heading}    
% 
%  This style provides a special heading to be used on chapter opening pages only.
%  \tcbdocmarginnote[width=2cm]{U 20-6-2015}
%  
%    \begin{macrocode}
\def\ps@chapterstyle{%
    \let\@oddfoot\@empty\let\@evenfoot\@empty
    \def\@evenhead{\thepage\hfil\slshape\leftmark}%
    \def\@oddhead{{\slshape\rightmark}\hfil\thepage}%
    \let\@mkboth\@gobbletwo
    \let\chaptermark\@gobble
    \let\sectionmark\@gobble}
%    \end{macrocode}
%
%
% 
% \section{Myheadings}
%
% \begin{docCommand}{ps@myheadings} {\meta{void}}
%   The classic myheadings macro, with some parameters!
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \ps@myheadings 
  {
    \let\@mkboth=\@gobbletwo
    \def\@evenfoot{Even page note 2}
    \def\@oddfoot {Odd page note 1}
    
    \def\@evenhead
    {
      \verbatimsize
      \vbox:n
        {  
          \global\hoffset=6pc\noindent
         \makebox[\z@][l]{\rm \thepage}%
         \upshape \strut\hfill\leftmark%\hbox{ }%\par\vbox to 13pt{}%
         \noindent\rule{37pc}{0.25pt}%
        }%
    }%
% for one side or both sides    
  \def\@oddhead{\verbatimsize
    \vbox:n 
      {
        \global\hoffset=0pc\noindent
        \tcbox[width=\textwidth]{\upshape\strut\rightmark\hfill\hbox{}\makebox[\z@][r]{\rm
        MHEADINGS  \thepage}%\par\vbox to 13pt{}%
        \vspace{1pt}
     \noindent\hspace*{-9pc}\rule{37pc}{0.25pt}%
      }%
  }%
%
    \def\chaptermark##1{}
    \def\sectionmark##1{}
    \def\subsectionmark##1{}
   }
 }
\ExplSyntaxOff 
%    \end{macrocode}
%
% \section{Watermarks}

% Some special styles
%    \begin{macrocode}
\IfFileExists{changepage.sty}{\RequirePackage{changepage}}{}
\IfFileExists{rotating.sty}{\RequirePackage{rotating}}{}
%    \end{macrocode}
%
% {even@samplepage}
% {odd@samplepage}
%    \begin{macrocode}
\def\even@samplepage{%
 \begin{picture}(0,0)
   \put(\Xeven,\Yeven){\turnbox{90}{\Huge \textcolor{\watermark@textcolor}{\watermark@text}}}
\end{picture}
}
%% Define a macro to print SAMPLE PAGE IN THE MARGIN
\def\odd@samplepage{%
 \begin{picture}(0,0)
   \put(\Xodd,\Yodd){\turnbox{90}{\Huge \textcolor{\watermark@textcolor}{\watermark@text}}}
 \end{picture}
}
%    \end{macrocode}
% 
% 

% \section{watermarktext}
%  Define the watermark words
%    \begin{macrocode}
\gdef\watermarktext#1{\gdef\watermark@text{\fontfamily{phv}\selectfont#1}}
\def\watermarktextcolor#1{\gdef\watermark@textcolor{#1}}
\watermarktext{SAMPLE PAGE}
\watermarktextcolor{black!50}
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\ps@samplepage{\let\@mkboth\@gobbletwo
 \let\@oddhead\odd@samplepage\def\@oddfoot{\reset@font\hfil\thepage}
 \let\@evenhead\even@samplepage\def\@evenfoot{\reset@font\thepage\hfil}}
%
% We define two macros to position the watermark on the page
\def\Xodd{480}
\def\Xeven{-15}\def\Yeven{-810}
\def\Yeven{-\expandafter\strip@pt\textheight}
\let\Yodd\Yeven


\cxset{blank page text/.store in=\blankpagetext@cx{#1}}
\cxset{blank page text={}}

%\def\cleardoublepage{\clearpage\if@twoside \ifodd\c@page\else
%    \hbox{}\newpage\if@twocolumn\hbox{}\newpage\fi\fi\fi}

\newcommand{\clearemptydoublepage}{%
        \clearpage{\pagestyle{empty}\cleardoublepage}}

\newcommand{\startnewpage}{\if@openright\clearemptydoublepage\else\clearpage\fi}

\def\cleardoublepage{\clearpage\if@twoside\ifodd\c@page\else
  \hbox{}
  \vspace*{\fill}
  \begin{center}
     \blankpagetext@cx      
  \end{center}
  \vspace{\fill}
  \thispagestyle{empty}
  \newpage
  \if@twocolumn\hbox{}\newpage\fi\fi\fi}
%    \end{macrocode}
%</RH>       
\endinput
% \bibliographystyle{alpha}
% \begingroup
% \raggedright
%
% \begin{thebibliography}{GMSN94A}
%
% \bibitem[GMS94]{GOOSSENS94}
% Michel Goossens, Frank Mittelbach, and Alexander Samarin.
% \newblock {\em The LaTeX Companion}.
% \newblock Addison-Wesley Publishing Company, 1994.
%

%
% \end{thebibliography}
% \endgroup
%
% \PrintIndex
% \Finale
\endinput

%    \begin{macrocode}
\newif\ifphd@multisty \phd@multistyfalse
\newcommand\copyrightline[1]{%
  \def\@copyrightline{#1}}


%\section{A vertical rule heading}
%
% Provides a vertical rule (for style 22)
% \thispagestyle{verticalrule}
%    \begin{macrocode}
\def\ps@verticalrule{\leftskip\z@\let\@mkboth\@gobbletwo\vfuzz=5\p@
    \def\@oddhead{}%
    \def\@evenhead{}%
    
\def\@oddfoot{\verbatimsize
    \parbox[t]{\textwidth}{
    %\vspace{15pt}%
      \global\hoffset=0pc%
      \noindent\hbox to\textwidth{\rule{1pt}{10pt}\color{blue}%
        \hskip5pt %
          \thepage\hskip10pt\headingscopyrightline}%
%     \noindent\hspace*{-9pc}\rule{37pc}{0.25pt}%
    }%
  }%
  
  \def\@evenfoot{\verbatimsize
    \vbox{\vspace{15pt}%
   % \global\hoffset=6pc%
    \noindent\hbox to\textwidth{{\color{blue}\rmfamily
    \thepage}\hfill\makebox[0pt][l]{\rule{1pt}{30pt}}}
    \makebox[\z@][l]{\headingscopyrightline}%
%   \noindent\rule{37pc}{0.25pt}%
    }%
  }%
  \def\sectionmark##1{}%
  \def\subsectionmark##1{}%
%
%
%  
 }
%    \end{macrocode}
