% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-pkgmanager --- a package to shorten preambles
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides provides the file phd-colorpalette.sty
%</readme>
%<*readmemd>
## The `phd-colorpalette` LaTeX2e package

The `phd-colorpalette` latex package is part of the `phd` bundle
which provides convenient methods to create new styles for books, reports
and articles. It also loads the most commonly used packages 
and resolves conflicts.

This work consists of the file  `phd-colorpalette.dtx`,
and the derived files   `phd-colorpalette.ins`,  `phd-colorpalette.pdf`, 
and `phd-colorpalette.sty`.

## Installation

run
          phd-lua.bat on windows
          pdflatex phd.dtx
          makeindex -s gind.ist -g phd 

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

### Documentation

The package was written using the `doc` and `docscript` packages,
so that it is self documented in a literary programming style. 
The .pdf is a fat document, providing over fifty book styles (the
equivalent of classes) plus there is a lot of write-up on the inner
workings of TeX and LaTeX2e. However, you don't need to know much
to use it.

      \usepackage{phd}
      \input{style13}

All choices, are made via an extended key-value interface. 
Although not a compliment, it resembles CSS and the keys are a bit verbose but
attributes are easy to change and have a consistent and easy to remember interface.

To set or add a key we only use one command:

      \cxset{chapter name font-size = Huge,
             chapter number font-size = HUGE} 

## Future Development

This is still an experimental version, but I will retain the
interface in future releases. There is a large amount of
work still to be carried out to improve the template styles
provided, to test it more thoroughly and to add a number of
improvements in the special designs. At present I estimate
that I have completed about 90% of the work that needs
to be done.

__The package as it stands is not production stable.__ 


%</readmemd>
%
%<*phd-colorpalette-todo>
1. On final round add pkg options. This was left as last in order not to solve problems by adding
    options. Too many options are not a good User Interface.
2.  Finish symbol management, both text and math. Math already 60% incorporated.
3.  Better integration of indexing commands.   
4.  Revisit layout manager for Chapters. Broke again in tests.
5.  Docs. Add all references.
6.  Incorporate phd class for more flexibility.
7. Improve package manager.
8. Group script loading for better font management.
9. General font management to relook it again.
10. Add all style sections (about 100 already prepared). Once they
     are all working issue beta version.
%</phd-colorpalette-todo>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- A package to beautify documents.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble
%\BaseDirectory{C:/users/admin/my documents/github/phd}
%\usedir{MWE}
\generate{\file{\jobname.sty}{
  \from{\jobname.dtx}{PLT}
  }
  }
%\nopreamble\nopostamble
%</install>
%<install>\endbatchfile
%<*internal>
%\usedir{tex/latex/phd}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\generate{
	\file{README-PHD-COLORPALETTE.txt}{\from{\jobname.dtx}{readme}}
  }
\generate{
  \file{\jobname.md}{\from{\jobname.dtx}{readmemd}}
}
\generate{
  \file{phd-colorpalette-todo.md}{\from{\jobname.dtx}{TODO}}
}
\generate{\file{tikz-page.sty}{\from{\jobname.dtx}{PAGE}}}
%removed as latest LaTeX updates fixed it
%\generate{\file{shellesc.sty}{\from{shellesc.dtx}{package}}}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>
%\listfiles
%gdef\@onlypreamble{} % TO BE REMOVED NEEDED FOR TUTS
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\RequirePackage[2017/04/15]{latexrelease}
\documentclass[book,oneside,10pt,a4paper]{phddoc}
\usepackage[bottom=2cm]{geometry}
\savegeometry{std}
% \usepackage[style=mla]{biblatex}
\let\HUGE\huge 
\usepackage[microtype=off]{phd}
\usepackage{phd-runningheads}
\usepackage{phd-toc}
\usepackage{phd-lowersections}

% Settings for hyperref
\sethyperref
\AtBeginDocument{\hypersetup{allcolors=orange,pdfborderstyle={/S/U/W 0.6}}}
%\hypersetup{,pdfborderstyle={/S/U/W 1}}
\addbibresource{phd.bib}% Syntax f
\cxset{palette african sun}
\begin{filecontents}{defaults-chapters}
%%    General Defaults for Chapters
\cxset{%    
    chapter title margin-top-width    =  0cm,
    chapter title margin-right-width  =  1cm,
    chapter title margin-bottom-width = 10pt,
    chapter title margin-left-width   = 0pt,
    chapter align                     = left,
    chapter title align               = left, %checked
    chapter name                      = Chapter,
    chapter format                    = stewart,%hdr,
    chapter font-size                 = Huge,
    chapter font-weight               = bold,
    chapter font-family               = sffamily,
    chapter font-shape                = upshape,
    chapter color                     = thechaptercolor,
    chapter number prefix             = ,
    chapter number suffix             = ,
    chapter numbering                 = arabic,
    chapter indent                    = 0pt,
    chapter beforeskip                = -3cm,
    chapter afterskip                 = 30pt,
    chapter afterindent               = off,
    chapter number after              = ,
    chapter arc                       = 0mm,
    chapter background-color          = bgsexy,
    chapter afterindent               = off,
    chapter grow left                 = 0mm,
    chapter grow right                = 0mm, 
    chapter rounded corners           = northeast,
    chapter shadow                    = fuzzy halo,
    chapter border-left-width         = 0pt,
    chapter border-right-width        = 0pt,
    chapter border-top-width          = 0pt,
    chapter border-bottom-width       = 0pt,
    chapter padding-left-width        = 0pt,
    chapter padding-right-width       = 10pt,
    chapter padding-top-width         = 10pt,
    chapter padding-bottom-width      = 10pt,
    chapter number color              = white,
    chapter label color               = white,    
    }
 \cxset{    
    chapter number font-size          = huge,
    chapter number font-weight        = bfseries,
    chapter number font-family        = sffamily,
    chapter number font-shape         = upshape,
    chapter number align              = Centering,
    section number color              = thesectionnumbercolor,
    subsection number color           = thesubsectionnumbercolor,
    subsubsection color               = thesubsubsectioncolor,
    subsubsection number color        = thesubsubsectionnumbercolor,
    }
\cxset{%    
     chapter title font-size        = Huge,
     chapter title font-weight      = bold,
     chapter title font-family      = calligra,
     chapter title font-shape       = upshape,
     chapter title color            = thechapternumbercolor,
     }    
\end{filecontents}
\input{defaults-chapters}  

\cxset{chapter format=plain,
       chapter title color= thechapternumbercolor,
       chapter label color = creamy,
       chapter number color = thechapternumbercolor,
       chapter number font-size = Huge,
       subsection title color = thechapternumbercolor,
       chapter name = CHAPTER,
       chapter label case = upper,
       chapter number align=left,
       part format = traditional,
       part background-color=spot,
       part beforeskip                = -3cm,
       part afterskip                 = 30pt,
       section color                  = thesectioncolor,
       section font-family      = sffamily,
       section format = hang,
       subsection font-family   = sffamily,
       chapter afterindent=on,
       section afterindent =on,
       subsection afterindent = on,
       subsubsection afterindent = on,
       }
\usepackage{makeidx}  
%\usepackage[cache=false]{minted} 
%\usemintedstyle[latex]{borland}   
\usepackage{phd-documentation}
\usepackage{phd-toc}
\makeindex
\setcounter{tocdepth}{4}
%\usepackage{microtype}
\usepackage{tikz-page}
%\fancypagestyle{plain}{
%  \fancyhf{}
%  \chead{\tikzpage}
%}
%\fancypagestyle{titlepage}{
%  \fancyhf{}
%  \chead{\tikzpage}
%}
%\setminted[go]{fontsize=\footnotesize,style=friendly}
%\setminted[bash]{bgcolor=black, formatcom=\color{white}, fontsize=\footnotesize,linenos,firstnumber=last,style=friendly}
%\setminted[batch]{fontsize=\footnotesize,framesep=5pt, linenos,firstnumber=last,style=friendly,escapeinside=VV}
%\setminted[SQL]{fontsize=\footnotesize,framesep=5pt, linenos,firstnumber=last,style=friendly}
%\setminted[tex]{fontsize=\footnotesize,framesep=5pt, linenos,firstnumber=last,style=friendly}
%\def\sql#1{%
%\mintinline[fontsize=\footnotesize,style=friendly]{sql}{#1}%
%\relax\xspace}
\cxset{chapter opening=any}
\begin{document}
\makeatletter
\DEBUGOFF
\makeatother
\pagestyle{plain}
\parindent1em
\coverpage{asia}{Book Design }{Camel Press}{COLOR PALETTES}{} 
\pagestyle{empty}
\secondpage
\pagestyle{empty}
\clearpage
\tableofcontents
\pagestyle{empty}
\setcounter{secnumdepth}{6}
\parskip0pt plus.1ex minus.1ex
\mainmatter
\pagenumbering{arabic}
\pagestyle{plain} 
\newcommand{\tikzpagelayout}{%
\tpshowframes
\tikzpageputanchors
}
%\pagestyle{empty}
%\tikzpage
%\begin{tikzpicture}[remember picture, overlay] 
%  \node[text width=0.5\textwidth] at (page.body center){\includegraphics[width=\textwidth]{balthus-11} This is the caption. \lorem };
%   \node[text width=0.3\textwidth, below] at (page.top south){\includegraphics[width=\textwidth]{balthus-11} This is the caption. \lorem };
%\end{tikzpicture}  
\mainmatter
%\input{./sql/basic-sql}
%\input{./sql/sql_style_guide}
%\input{./sql/sqlite}
%\input{./sql/sqlite_triggers}
%\input{./sql/excel}
%\input{./redis/redis}
%\input{./golang/golang-01}
%\input{./docker/docker}
%\input{./golang/functions}
%\input{./golang/goroutines}
%\input{./golang/interfaces}
%\input{./golang/io}
%\input{./sql/postgress}
%\input{./sql/psql}
%\input{./kernel/kernel-classes}
%\input{./sections/colors}
%\input{./sections/chapterdesign}
%\input{./sections/pages} 
%\input{./sections/geometry-chapter}     
%       
%\input{./sections/tikz}
%\input{./mep/claim}  
%\input{./mep/dewa} 
%\input{./mep/busbar}
%\input{./mep/disruption}
%\input{./mep/RFI-mechanical}
%\input{./mep/RFI-electrical}
%%\input{./mep/internal}
%\input{./mep/provisional-sums}
%\input{./sections/introduction}
%
%\input{./styles/style01}
%\input{./styles/style02}
%\input{./styles/style03}
%\input{./styles/style04}
%\input{./styles/style05}
%\cxset{chapter format=block}
%\input{./sections/chapterdesign}
%\input{./sections/lowerlevelheadings}
\newfontfamily\aegean{Aegean.ttf}
%\input{./languages/ancient-and-historic-scripts}
%\input{./languages/hieroglyphics}
\DocInput{\jobname.dtx}
%\input{./tests/test-colorpalette}

%\input{./languages/european-alphabetic}
%\input{./languages/modern-scripts}
%\input{./languages/middle-eastern-scripts}

\nocite{*}
\printbibliography
\printindex
\end{document}
%</driver>
% \fi
% 
%  \CheckSum{0}
%  \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% 
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
%
%
% 
% ^^A\maketitle
% 
% ^^A\frontmatter
%  ^^A\coverpage{./images/hine02.jpg}{Book Design }{Camel Press}{}{}
%  \newpage
% ^^A\secondpage
% \pagestyle{empty}
%
%
% 
%
%
% \pagestyle{headings}
% \raggedbottom
%  \OnlyDescription
%
% ^^A\StopEventually{\printindex}
% \CodelineNumbered
% \pagestyle{headings}
% 
% 
% ^^A\part{IMPLEMENTATION AND FRIENDS}
% 
%
% \chapter{Code Implementation and Objectives}
%
% 
% 
%
% Having provided for individual control for virtually all document elements, we need
% some form of organizing all the color keys. This package defines different color
% palettes, that make it easier to change all the colors of a document with a single
% key setting (provided of course we have a predefined palette).
%
% We start by outlining what we are trying to achieve with the \pkgname{phd-colorpalette}
% package.
%
% \begin{enumerate}
% \item To provide a declarative interface to enable users to modify colors
%       specifications in logical groups rather than individual elements..  
% \item To provide a number of predefined color themes.
% \item To provide a plug-in architecture for user extensions.
% \end{enumerate}
% 
% \section{Terminology}
%
%  \begin{description}
%  \item [document] Any written item, as a book, article, or letter, especially 
%                  of a factual or informative nature.
%  \item [heading] A division of a document or document series. For a normal
%        book headings are chapters, sections etc. However we allow for
%        specifying a more complex document divided into books, volumes
%        parts etc. For example the Bible has Books, chapters and verses,
%        where a legal document might require divisions such as clauses.
%        In general these divisions are numbered. These document divisions
%        are stored in the comma list 
%  \item [head] A typeset heading, such as chapter head, or section head.
%        This can include a counter, label and title for example, 
%        \emph{Chapter 1 Introduction}.
%  \item [dom] This is a programming interface that provides a structured
%        representation of the document (a tree) and it defines a way
%        that the structure can be accessed. Although \latexe does not
%        offer a standard way to build such a tree (mainly because
%        \tex does not require the marking of paragraphs, it is 
%        useful to think of the document as a tree structure. We also
%        allow for a semi-automated way to build such a tree (with the 
%        exception that paragraphs are not included).
% \item [element] A part of the document tree that can be styled on
%       its own. For example the chapter label, or the section number.
%
% \end{description}
%
%
% \section{Users}
%  We classify users according to the \LaTeX3 terminology as a) programmers b) template designers
%  and c) authors.
% \subsection{Author}
%  We assume that the author has an exising template which she is using but might want to do
%  some minor modifications, for example use an italic shape for the font of the mark, but an 
%  upright font for the page numbers. 
%
%
% We follow the idea of representing the basic elements of documents
% as elements, each one having a parent in order to specify
% the element we need to style as accurate as possible. One can think of
% this approach being congruent with objects in other languages.
% As a matter fact nothing stops us from defining a key value
% interface as shown below.
%
%
% \subsection{Template designer}
% \
% The template designer in the example above would have selected the format style
% from a number of predefined formats (templates) or would have created a style
% called \textit{apa} from an existing template and modified it using declarative
% key style.
%
% \subsection{The Programmer}
%
% The programmer in the example above could have created the basic format
% \textit{apa} by using both declarative as well as defining or using existing
% macros. To the programmer we offer an extension mechanism, where the contents
% of a |ps@| command are defined. For example the programmer can define a new
% style using \tikzname, but without having to worry about defining full |ps@|
% and their interface.
%
% \section{Color Palettes}
%
% Although documents would normally have only a small number of colors, the
% number of variables that need a color setting is quite large. In this package
% we introduce the option of a \textit{color palette}, where all color settings can be
% in one place.\index{color palette}
%
% \section{Companion Go packages}
%
% The Companion Go \pkgname{colornames.go} package can be used to generate Material Design color palettes inspired 
% by Google's  \href{https://material.google.com/style/color.html}{material design}. Color in Material Design
% uses bold hues juxtaposed with muted environments, deep shadows, and bright highlights.
%
% Palettes provided with the package have memorable names. 
% \begin{teXXX}
%\cxset{palette bbc}
%\colorbox{primary}{\color{white}palette bc}
% \end{teXXX}
%
% Once a palette is set a number of colornames are available and are used by the rest of the 
% phd packages to set colors.
%
% For example setting the palette to \textit{unorange} will change \docColor{thesubsectioncolor} to
% an orange color defined with the \textit{unorange} palette.
%
% This renders as follows:
% \begin{texexample}{Example for Changing Heading Colors}{ex:headcolors}
% \bgroup
% \cxset{palette Purple500}
% \subsection{Subsection heading example}
% \subsubsection{Subsubsection example}
% \lorem 
% This is a  \href{http:\\test}{test} link now rendered in a different color. And \hyperref[tosee]{just to see}
% \egroup
% \end{texexample}
%
% \section{Preliminaries}
%
%  Standard file identification. We first announce the package 
%	 and require that it be used with \LaTeX2e. \tcbdocmarginnote{need to upgrade}
% \iffalse
%<*PLT>
% \fi
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\RequirePackage[2017/04/15]{latexrelease}
\ProvidesFile{phd-colorpalette}[2015/1/13 v1.0 color palettes (YL)]%
%    \end{macrocode}
%
%    \begin{macrocode}
\@ifpackageloaded{xcolor}{}%
 {\PassOptionsToPackage{\xcolorkeys@cx}{xcolor}
  \RequirePackage{xcolor}}
%    \end{macrocode}
% \section{Palette and Color Naming Conventions}
%
% One of the convetions used in the \pkg{phd} series of packages is that mostly names are lower cased. Another convention to
% avoid conflicts with other packages is to define standard colors with a \enquote{the} prefix, as for example the color
% \docColor{blue} is defined as |the|\meta{blue}. A similar convention is used for document elements. For example,
% the colors \docColor{thechaptercolor}, \docColor{thesectioncolor} and similar color
% definitions are used to color the title of a heading command.
%    \begin{macrocode}
\def\palettename{palette}
\definecolor{glyphbox}{rgb}{0.86,0.86,0.8}
%\definecolor{codebackground}{rgb}{0.8,0.8,1}
\definecolor{theblue} {rgb}{0.02,0.04,0.48}
\definecolor{thered}  {rgb}{0.65,0.04,0.07}
\colorlet{thefontname}{black}%font examples
\colorlet{thehighlight}{yellow}%soul  highlight
\colorlet{thecancel}{thered}%for cancel commands
\definecolor{thegreen}{rgb}{0.06,0.44,0.08}
\definecolor{thelightgreen}{rgb}{0.06,0.44,0.06}
\definecolor{thegrey} {gray}{0.5}
\definecolor{thegray} {gray}{0.5}
\definecolor{thedarkgray} {gray}{0.95}
\definecolor{lightgray}{gray}{0.6}
\definecolor{shadedcolor}{gray}{0.6}
\definecolor{thelightgray}{gray}{0.6}
\definecolor{theshade}{gray}{0.94}
\definecolor{theframe}{gray}{0.75}
\definecolor{thecream}{rgb}{1,0.95,0.4}
\definecolor{spot}{rgb}{0,0.2,0.6}%some shades of blue
\definecolor{sweet}{rgb}{0,.68,.93}%shades of blue
%\colorlet{codebackground}{spot!5!white}
\definecolor{boxframe}{gray}{0.8}
\definecolor{boxfill}{rgb}{0.95,0.95,0.99}
\definecolor{theoption}{gray}{0.6}
\definecolor{ExampleFrame}{rgb}{0.628,0.705,0.942}
\definecolor{ExampleBack}{rgb}{0.963,0.971,0.994}
\colorlet{preciscolor}{sweet}
\definecolor{creamy}{HTML}{FDEBD7}
\definecolor{tofu}{HTML}{e7e3d8}
% check this
\newcommand{\TODO}{\textcolor{red}{\bf TODO!}\xspace}
%    \end{macrocode}
%
% \section{Creating new palettes}
%
%  \begin{docCommand}{createpalette}{\marg{name of color palette}\marg{color space} \marg{hex color code}\marg{optional extra code} } 
%    Creates a palette, given a hex code and a name.
%  \end{docCommand}
%
%  Following the design pattern in other sections we try to generalize the command.
%  Given a color applicable to heading titles, I have set the color commands as best 
%  as I could. For some color combinations this is not satisfactory and modifications
%  are necessary. This can be done by the |\addtocolorpalette| function. 
%    \begin{macrocode} 
\ExplSyntaxOn  
\cs_gset:Npn \createpalette #1#2#3#4
  { \tl_gset:cn {auxpalette#1_tl} {} 
    \addtotl {#1}{#2}{#3}{#4}
%
    \cxset{palette~#1/.code  = \cs:w auxpalette#1_tl \cs_end: }
    % the below are useless
    \definecolor{primary}{#2}{#3}
    \definecolor{#1}{#2}{#3}
   % store the name of the palette 
    \cs_gset:cpn {palette#1} {#1 }
 }
%
\cs_set:Npn \addtotl #1 #2 #3 #4
  {
    \tl_put_left:cn {auxpalette#1_tl} 
      {
        \definecolor{bgsexy}{#2}{#3} %{D11C23}
        \colorlet{thechaptercolor}{bgsexy} %font examples
        \colorlet{thechapternumbercolor}{bgsexy}
        \colorlet{thesectioncolor}{bgsexy} %font examples
        \colorlet{thesectiontitlecolor}{bgsexy}
        \colorlet{thesubsectioncolor}{bgsexy} %font examples
        \colorlet{thesubsectiontitlecolor}{bgsexy}
        \colorlet{thesubsubsectioncolor}{bgsexy} %font examples
        \colorlet{theparagraphcolor}{bgsexy} %font examples
        \colorlet{thesubparagraphcolor}{bgsexy} %font examples
        \colorlet{thesectionnumbercolor}{bgsexy}
        \colorlet{thesubsectionnumbercolor}{bgsexy}
         \colorlet{thesubsubsectionnumbercolor}{bgsexy}
        \colorlet{thelinkcolor}{bgsexy}
        \colorlet{thecommentstyle}{thegreen}
        \colorlet{thestringstyle}{thegreen}
        \colorlet{thekeywordstyle}{spot!90}
        % code
        \colorlet{thecodebackground}{bgsexy!10}
        \colorlet{thecodeframe}{bgsexy!20}
        \colorlet{theoption}{black}
%    \end{macrocode}
% The following deal with colorchemes for code highlighting in listings
% and documentation commands.
%    \begin{macrocode}        
        \colorlet{thecs}{bgsexy}        
        \colorlet{theoption}{bgsexy}
        \colorlet{themodule}{bgsexy}
        \colorlet{thecomment}{bgsexy}
        \colorlet{thebeginend}{bgsexy}
        \colorlet{theenv}{bgsexy}
        \colorlet{theenvironment}{bgsexy}
        \colorlet{thevalue}{bgsexy}
        \colorlet{thekey}{bgsexy}
        \colorlet{theargument}{bgsexy}
        \colorlet{theoarg}{bgsexy}
        % maybe duplicate of the MANT consider removing.
        \colorlet{themeta}{thegreen}
        \colorlet{versionnote}{black!75}
        \colorlet{bibentry}{thegreen}
        \colorlet{bibentryfield}{black}
        \colorlet{theidx}{thegreen}
        % headers
        \colorlet{theplainoddheaderbgcolor}{white}
        \colorlet{theplainevenheaderbgcolor}{white}
        \colorlet{theplainoddfooterbgcolor}{white}
        \colorlet{theplainevenfooterbgcolor}{white}
        %
        \colorlet{theoddheaderbgcolor}{white}
        \colorlet{theevenheaderbgcolor}{white}
        \colorlet{theoddfooterbgcolor}{white}
        \colorlet{theevenfooterbgcolor}{white}
        %
        \colorlet{theheadingsoddheaderbgcolor}{white}
        \colorlet{theheadingsevenheaderbgcolor}{white}
        \colorlet{theheadingsoddfooterbgcolor}{white}
        \colorlet{theheadingsevenfooterbgcolor}{white}
        #4
        % rules
        \colorlet{theplainnoddheaderframerule}{bgsexy}
        \colorlet{theplainoddfooterframerule}{bgsexy}
        \colorlet{theplainevenheaderframerule}{bgsexy}
        \colorlet{theplainevenfooterframerule}{bgsexy}
        %
        \colorlet{theoddheaderframerule}{bgsexy}
        \colorlet{theoddfooterframerule}{bgsexy}
        \colorlet{theevenheaderframerule}{bgsexy}
        \colorlet{theevenfooterframerule}{bgsexy}
%        
        \colorlet{theheadingsoddheaderframerule}{bgsexy}
        \colorlet{theheadingsoddfooterframerule}{bgsexy}
        \colorlet{theheadingsevenheaderframerule}{bgsexy}
        \colorlet{theheadingsevenfooterframerule}{bgsexy}
%     toc name color, i.e., Table of Contents
%     this is normally best to be black. 
        \colorlet{thetocname}{bgsexy}
        \colorlet{thelofname}{bgsexy}
        \colorlet{thelotname}{bgsexy}
        \colorlet{thetocpart}{bgsexy}
        \colorlet{thetocchapter}{bgsexy}
        \colorlet{thetocsection}{black}
        \colorlet{thetocsubsection}{black}
%        
        % list bullets
        \colorlet{theitemicolor}{bgsexy}
        \colorlet{theitemiicolor}{bgsexy}
        \colorlet{theitemiiicolor}{bgsexy}
        \colorlet{theitemivcolor}{bgsexy}
        \colorlet{theitemvcolor}{bgsexy}
        \colorlet{theitemvicolor}{bgsexy}
        % phd doc specific
        \colorlet{theunicodesymbolcolor}{bgsexy}
        \colorlet{thecmdcolor}{bgsexy}
        % epigraph rule
        \colorlet{theepigraphrulecolor}{bgsexy}
        %tabulars
        \colorlet{thetablevrulecolor}{bgsexy}
        \colorlet{thetableheadbgcolor}{bgsexy}
    }
}
% We now create a number of color palettes for convenience.  
% These are given various names, mostly from magazines or the web
% that have inspired the color schemes.
%
\createpalette {esquire}     {HTML}  {D11C23} {}  % red shade
\createpalette {fortune}     {HTML}  {EA8A4E} {}  % brick color
\createpalette {oprah}       {HTML}  {F060A8} {}  % nice pinkish modern
\createpalette {vogue}       {HTML}  {F21C93} {}  % nice pinkish modern
\createpalette {bbc}          {HTML}  {991B1e} {}  % dark red 
\tl_put_right:cn {auxpalettebbc_tl}  
  {
    \colorlet{thecodebackground}{thelightgray!20}
  }
% blue shades
\createpalette {architectural} {HTML} {0168FD} {}  % blue shade
\createpalette {instyle}       {HTML} {227CE8} {}  % blue shade    
\createpalette {smithsonian}   {HTML} {60A8C0} {}  % milky blue 
\createpalette {blueprint}     {HTML} {486090} {}  % dark milky blue
%
% green shades
\createpalette {knoll}         {HTML} {88A65E} {}  % nice sweet green
\createpalette {living}        {HTML} {678756} {}  % green shade
\createpalette {spring~onion}  {HTML} {90D228} {}  % bright green shade
\createpalette {olive}         {HTML} {EED38D} {}  % washed out not nice
\createpalette {zealous}       {HTML} {075D6B} {}  % 
% orangey
\createpalette {orange~sakura} {HTML}{E6781E} {}  % nice modern serious book
\createpalette {orange}        {HTML}{FF6927} {}  % bright orange
\createpalette{unorange}       {HTML} {FE6B08} {}  %unbelievable orange 
\createpalette{african~sun}    {HTML} {F76E2A} {}  %african sun http://www.colourlovers.com/palette/567184/Satellite_Of_Love
% brown
\createpalette {brown}         {HTML}{AF0C39} {}  % red brown  
\createpalette {brown~red}     {HTML}{8D2420} {}  % brown red, serious luxury
% purples
\createpalette {black~tulip}   {HTML}{420943} {}  % darkish purple 
\createpalette {helvetica}     {HTML}{404547} {}  % darkish purple 
\createpalette {budapest}      {HTML}{BD7898} {}  % serious purple
%
\createpalette {cerulean}      {HTML}{9bb7d6} {}  % pantone light milky bluish  
\createpalette {sealife }      {HTML}{7c7d89} {}  % sea life from https://www.benjaminmoore.com/en-us/color-overview/color-collections/color-trends-2017
% reds
\createpalette {rouge}         {HTML}{D2476F} {}  %rouge like in hot lips
\createpalette {sugar~hearts}  {HTML}  {FE4365} {}  % red rose http://www.colourlovers.com/palette/629637/()
\createpalette{Purple500}      {HTML} {7B1FA2} {}
%  
%  
\tl_put_right:cn {auxpalettecerulean_tl}  
  {
    \colorlet{thecodebackground}{tofu}
  }
% 
\tl_put_right:cn {auxpaletteblueprint_tl}  
  {
    \colorlet{theunicodesymbolcolor}{bgsexy}
    \colorlet{thecodebackground}{thelightgray!20}
  }
\ExplSyntaxOff
\cxset{
%</PLT>
%<*PLT|DFLT>
    % default palette
    palette orange sakura,
%</PLT|DFLT>
%<*PLT>    
}%    
%    \end{macrocode}
%
%
% \section{Hyperlinks}
% 
% These colors are used for hyperlinking. We normally provide a uniform 
% color for all hyperlinks
%
%    \begin{macrocode}
\colorlet{thelinkcolor}{bgsexy}   %linkcolor (also used in toc)
\colorlet{theanchorcolor}{bgsexy} %anchorcolor
\colorlet{thecitecolor}{bgsexy}   %citecolor
\colorlet{thefilecolor}{bgsexy}   %filecolor
\colorlet{themenucolor}{bgsexy}   %menucolor
\colorlet{theruncolor}{bgsexy}    %runcolor
\colorlet{theurlcolor}{bgsexy}    %urlcolor
\definecolor{Hyperlink}{rgb}{0.281,0.275,0.485}                                     
%    \end{macrocode}
%
% \section{Code listings and documentation macros}
%
%  For publications that require listings or self running
%  examples we need to define a number of colors. We also need
%  to cater for control sequences in the text and the like.
%
%    \begin{macrocode}
\definecolor{lstbgcolor}{rgb}{0.9,0.9,0.9}
\colorlet{examplefill}{yellow!80!black}
%
%\definecolor{thecodebackground}{HTML}{F2F2EA}
%\definecolor{thecodebackground}{HTML}{DED4B9}
%\definecolor{thecodebackground}{HTML}{F3EFE3} % light 
\definecolor{thekeywordstyle}{HTML}{000000}
\definecolor{thecommentstyle}{HTML}{DF8743}
\definecolor{thestringcolor}{HTML}{DF8743}
\definecolor{theemphasiscolor}{HTML}{DF8743}
\definecolor{theframerulecolor}{HTML}{FF6927}
\definecolor{theframefillcolor}{HTML}{000000}
\definecolor{theidentifiercolor}{HTML}{000000}
%
% tcolorbox commands
\definecolor{themacro}{rgb}{0.784,0.06,0.176}
%
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\done{\cellcolor{teal}done}  
\def\partialdone{\cellcolor{yellow}done}
\def\hcyan#1{{\color{teal} #1}}
%    \end{macrocode}
% \iffalse
%</PLT>
% \fi
% \endinput
%
% If you want to simulate the default |fancyhdr| behaviour you can define the
% \docAuxCommand{tikzpagelayout} as following:
% \iffalse
%<*PAGE>
% \fi
\def\pkgfileversion{1.0}
\def\pkgfiledate{2016/08/22}
% \iffalse
%</PAGE>
% \fi
%
% \title{the \textsc{tikz-page} package }
% \author {Sébastien Gross <seb chezwam org>}
% \date{This file describes version \pkgfileversion\  (\pkgfiledate)}
% \maketitle
% \tableofcontents
% \section{Implementation}
% \iffalse
%<*PAGE>
% \fi
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tikz-page}[\pkgfiledate\space (v\pkgfileversion)]
%    \end{macrocode}

% The \meta{textpos} option can be used if you want to use |textpos|
% \meta{overlay} option instead of |current page| to position the page
% layout. Beware that |textpos| with \meta{overlay} option maybe incompatible
% with some other packages. On the other hand |tikz| |current page| requires
% at least 2 compilation to work correctly. Thus you might want to use
% \meta{textpos} at conception time and remove this option for your final
% build or if you have incompatibility issues.
%
%    \begin{macrocode}
\newif\if@tp@use@textpos\@tp@use@textposfalse
\DeclareOption{textpos}{\@tp@use@textpostrue}
\ProcessOptions
%
\if@tp@use@textpos
\RequirePackage[absolute]{textpos}
\fi
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{fancyhdr}
\RequirePackage{tikz}
\usetikzlibrary{plotmarks,calc,shapes,positioning,decorations.text}
\RequirePackage{graphicx}
\RequirePackage{calc}
%    \end{macrocode}
%
%
\makeatletter
%
% All margin sizes are defined in\docLength{@tp@left@margin},
% \docLength{@tp@right@margin}, \docLength{@tp@top@margin},
% \docLength{@tp@bottom@margin} their values are computed by the
% \refCom{tp@compute@margins}.
%
%    \begin{macrocode}
\newlength{\@tp@left@margin}
\newlength{\@tp@right@margin}
\newlength{\@tp@top@margin}
\newlength{\@tp@bottom@margin}
%    \end{macrocode}
%
% \begin{docCommand}{@tp@create@length}{\marg{block name}\marg{length name}}
%
% Generate a \cs{tp@\meta{block name}@\meta{length name}} length. This
% command is intended to be only used to create block length defined below.
%
%    \begin{macrocode}
\newcommand\@tp@create@length[2]{%
  \expandafter\newskip\csname tp@#1@#2\endcsname%
}%
%    \end{macrocode}
% \end{docCommand}
% 
%
% For each standard blocks in the page (|page|, |body|, |marginpar|,
% |header|, |footer|) and additionnal blocks (|top|, |right|, |bottom|,
% |left|), 6 lenths are computed in order to define their anchors. Each
% length is defined using the \refCom{@tp@create@length} macro.
%
%    \begin{macrocode}
\foreach\@@tp@element in {page,body,marginpar,header,footer,top,right,bottom,left}{%
  \foreach\@@tp@len in {xmin,xmax,xmid,ymin,ymax,ymid}{%
    \@tp@create@length{\@@tp@element}{\@@tp@len}%
}}%
%    \end{macrocode}
%
% \begin{docCommand}{tcflip}{\marg{odd page code}\marg{even page code}}
% Execute \meta{odd page even code} on odd pages and \meta{even page code}
% on even ones.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\tpflip}[2]{\ifodd\thepage#1\else#2\fi}
%    \end{macrocode}
%
% \begin{docCommand}{tp@compute@margins}{}
%
% This is where the magic happens. This command sets all \cs{tp@\meta{block
% name}@\meta{length name}} lengths.
%
% \end{docCommand}
%
%    \begin{macrocode}
\def\tp@compute@margins{%
  \setlength{\tp@page@xmin}{0pt}%
  \setlength{\tp@page@ymin}{0pt}%
  \setlength{\tp@page@xmax}{\paperwidth}%
  \setlength{\tp@page@ymax}{\paperheight}%
  \setlength{\tp@page@xmid}{\dimexpr(\tp@page@xmin+\tp@page@xmax)/2\relax}%
  \setlength{\tp@page@ymid}{\dimexpr(\tp@page@ymin+\tp@page@ymax)/2\relax}%
  %
  \setlength\@tp@left@margin{\dimexpr(1in+\hoffset+\tpflip{\oddsidemargin}{\evensidemargin})\relax}%
  \setlength\@tp@right@margin{\dimexpr(\paperwidth-\@tp@left@margin-\textwidth)\relax}%
  \setlength\@tp@top@margin{\dimexpr(1in+\voffset+\topmargin+\headheight+\headsep)\relax}%
  \setlength\@tp@bottom@margin{\dimexpr(\paperheight-(\textheight+\@tp@top@margin))\relax}%
  %% Body computation
  \setlength\tp@body@xmin{\dimexpr\tp@page@xmin+\@tp@left@margin\relax}%
  \setlength\tp@body@xmax{\dimexpr\tp@page@xmax-\@tp@right@margin\relax}%
  \setlength\tp@body@xmid{\dimexpr((\tp@body@xmax+\tp@body@xmin)/2)\relax}%
  \setlength\tp@body@ymax{\dimexpr(\tp@page@ymax-\@tp@top@margin)\relax}%
  \setlength\tp@body@ymin{\dimexpr\tp@body@ymin+\@tp@bottom@margin\relax}%
  \setlength\tp@body@ymid{\dimexpr(\tp@body@ymin+(\tp@body@ymax-\tp@body@ymin)/2)\relax}%
  %
  %% Margin computation
  %
  \tpflip{%
    \setlength\tp@marginpar@xmin{\dimexpr\tp@body@xmax+\marginparsep\relax}
    \setlength\tp@marginpar@xmax{\dimexpr\tp@marginpar@xmin+\marginparwidth\relax}%
  }{%
    \setlength\tp@marginpar@xmax{\dimexpr\tp@body@xmin-\marginparsep\relax}%
    \setlength\tp@marginpar@xmin{\dimexpr\tp@marginpar@xmax-\marginparwidth\relax}%
  }%
  \setlength\tp@marginpar@xmid{\dimexpr((\tp@marginpar@xmax+\tp@marginpar@xmin)/2)\relax}%
  \setlength\tp@marginpar@ymax{\tp@body@ymax}%
  \setlength\tp@marginpar@ymin{\tp@body@ymin}%
  \setlength\tp@marginpar@ymid{\tp@body@ymid}%
  %
  %% header
  %
  \setlength\tp@header@xmax{\tp@body@xmax}%
  \setlength\tp@header@xmin{\tp@body@xmin}%
  \setlength\tp@header@xmid{\tp@body@xmid}%
  \setlength\tp@header@ymin{\dimexpr\tp@body@ymax+\headsep\relax}%
  \setlength\tp@header@ymax{\dimexpr\tp@header@ymin+\headheight\relax}%
  \setlength\tp@header@ymid{\dimexpr((\tp@header@ymax+\tp@header@ymin)/2)\relax}%
  %
  %% footer
  %
  \setlength\tp@footer@xmax{\tp@body@xmax}%
  \setlength\tp@footer@xmin{\tp@body@xmin}%
  \setlength\tp@footer@xmid{\tp@body@xmid}%
  \setlength\tp@footer@ymin{\dimexpr\tp@body@ymin-\footskip\relax}%
  \setlength\tp@footer@ymax{\tp@footer@ymin}%
  \setlength\tp@footer@ymid{\dimexpr((\tp@footer@ymax+\tp@footer@ymin)/2)\relax}%
  %%
  %% blocks%
  %%
  \setlength\tp@top@xmin{\tp@page@xmin}%
  \setlength\tp@top@xmax{\tp@page@xmax}%
  \setlength\tp@top@xmid{\dimexpr((\tp@top@xmax+\tp@top@xmin)/2)\relax}%
  \setlength\tp@top@ymin{\tp@body@ymax}%
  \setlength\tp@top@ymax{\tp@page@ymax}%
  \setlength\tp@top@ymid{\dimexpr((\tp@top@ymax+\tp@top@ymin)/2)\relax}%
  %%
  \setlength\tp@bottom@xmin{\tp@page@xmin}%
  \setlength\tp@bottom@xmax{\tp@page@xmax}%
  \setlength\tp@bottom@xmid{\dimexpr((\tp@bottom@xmax+\tp@bottom@xmin)/2)\relax}%
  \setlength\tp@bottom@ymin{\tp@page@ymin}%
  \setlength\tp@bottom@ymax{\tp@body@ymin}%
  \setlength\tp@bottom@ymid{\dimexpr((\tp@bottom@ymax+\tp@bottom@ymin)/2)\relax}%
  %%
  \setlength\tp@left@xmin{\tp@page@xmin}%
  \setlength\tp@left@xmax{\tp@body@xmin}%
  \setlength\tp@left@xmid{\dimexpr((\tp@left@xmax+\tp@left@xmin)/2)\relax}%
  \setlength\tp@left@ymin{\tp@body@ymin}%
  \setlength\tp@left@ymax{\tp@body@ymax}%
  \setlength\tp@left@ymid{\dimexpr((\tp@left@ymax+\tp@left@ymin)/2)\relax}%
  %%
  \setlength\tp@right@xmin{\tp@body@xmax}%
  \setlength\tp@right@xmax{\tp@page@xmax}%
  \setlength\tp@right@xmid{\dimexpr((\tp@right@xmax+\tp@right@xmin)/2)\relax}%
  \setlength\tp@right@ymin{\tp@body@ymin}%
  \setlength\tp@right@ymax{\tp@body@ymax}%
  \setlength\tp@right@ymid{\dimexpr((\tp@right@ymax+\tp@right@ymin)/2)\relax}%
}%%    \end{macrocode}
%
% \section*{Generate Anchors}
%
% \begin{docCommand}{@tp@genanchors}{\marg{block name}}
% Generate all 9 anchors (|northwest|, |north|, |northest|, |west|,
% |center|, |east|, |southwest|, |south|, |southest|) for \meta{block name}.
% \end{docCommand}

%    \begin{macrocode}
\def\@tp@genanchors#1{%
  \anchor{#1 north}{\pgf@x=\csname tp@#1@xmid\endcsname  
                    \pgf@y=\csname tp@#1@ymax\endcsname}%
  \anchor{#1 south}{\pgf@x=\csname tp@#1@xmid\endcsname 
                    \pgf@y=\csname tp@#1@ymin\endcsname}%
  \anchor{#1 west}{\pgf@x=\csname tp@#1@xmin\endcsname 
                   \pgf@y=\csname tp@#1@ymid\endcsname}%
  \anchor{#1 northwest}{\pgf@x=\csname tp@#1@xmin\endcsname 
                        \pgf@y=\csname tp@#1@ymax\endcsname}%
  \anchor{#1 southwest}{\pgf@x=\csname tp@#1@xmin\endcsname 
                        \pgf@y=\csname tp@#1@ymin\endcsname}%
  \anchor{#1 east}{\pgf@x=\csname tp@#1@xmax\endcsname 
                   \pgf@y=\csname tp@#1@ymid\endcsname}%
  \anchor{#1 northeast}{\pgf@x=\csname tp@#1@xmax\endcsname 
                        \pgf@y=\csname tp@#1@ymax\endcsname}%
  \anchor{#1 southeast}{\pgf@x=\csname tp@#1@xmax\endcsname 
                        \pgf@y=\csname tp@#1@ymin\endcsname}%
  \anchor{#1 center}{\pgf@x=\csname tp@#1@xmid\endcsname 
                     \pgf@y=\csname tp@#1@ymid\endcsname}%
}% 
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand\tp@pgfdeclareanchoralias[3]{%
  \expandafter\def\csname pgf@anchor@#1@#3\expandafter\endcsname
    \expandafter{\csname pgf@anchor@#1@#2\endcsname}}
%    \end{macrocode}
% 
% \section*{Declare the page shape}
% \pgfname provides methods to declare new shapes. There are a number of special commands defined
% that can be used for declaring a shape (See PGF manual page 1039). Our shape will be called page.
% We will used this as a key.
% 
% Next we declare the page shape
% \begin{docCommand}{pgfdeclareshape}{}
%
% \end{docCommand}
%    \begin{macrocode}
\pgfdeclareshape{page}{
  \backgroundpath{
    \pgfpathmoveto{\pgfpoint{\tp@page@xmin}{\tp@page@ymin}}
    \pgfpathlineto{\pgfpoint{\tp@page@xmin}{\tp@page@ymax}}
    \pgfpathlineto{\pgfpoint{\tp@page@xmax}{\tp@page@ymax}}
    \pgfpathlineto{\pgfpoint{\tp@page@xmax}{\tp@page@xmin}}
    \pgfpathclose
  }
  %% basic anchors
  \anchor{north}{\pgf@x=\tp@page@xmid \pgf@y=\tp@page@ymax}%
  \anchor{south}{\pgf@x=\tp@page@xmid \pgf@y=\tp@page@ymin}%
  \anchor{west}{\pgf@x=\tp@page@xmin \pgf@y=\tp@page@ymid}%
  \anchor{northwest}{\pgf@x=\tp@page@xmin \pgf@y=\tp@page@ymax}%
  \anchor{southwest}{\pgf@x=\tp@page@xmin \pgf@y=\tp@page@ymin}%
  \anchor{east}{\pgf@x=\tp@page@xmax \pgf@y=\tp@page@ymid}%
  \anchor{northeast}{\pgf@x=\tp@page@xmax \pgf@y=\tp@page@ymax}%
  \anchor{southeast}{\pgf@x=\tp@page@xmax \pgf@y=\tp@page@ymin}%
  %\anchor{center}{\pgfpointorigin}
  \anchor{center}{\pgf@x=\tp@page@xmid \pgf@y=\tp@page@ymid}
  \anchor{origin}{\pgfpointorigin}%\pgf@x=0pt \pgf@y=0pt}
  \@tp@genanchors{page}
  %% Body anchors
  \@tp@genanchors{body}
  \@tp@genanchors{marginpar}
  \@tp@genanchors{header}
  \@tp@genanchors{footer}
  \@tp@genanchors{top}
  \@tp@genanchors{bottom}
  \@tp@genanchors{left}
  \@tp@genanchors{right}
}
%    \end{macrocode}
%
%
%Create a new |tpx| mark to show anchor location when using
%\refCom{tikzpageputanchors} to display anchors on the page.
%
%    \begin{macrocode}
\newdimen\tp@linewidth
\newdimen\tp@marksize
\setlength\tp@marksize{3pt}
\pgfdeclareplotmark{tpx}{
  \setlength{\tp@linewidth}{\pgflinewidth}
  \pgfsetlinewidth{0.1pt}
  \pgfpathmoveto{\pgfpoint{-\tp@marksize}{-\tp@marksize}}
  \pgfpathlineto{\pgfpoint{\tp@marksize}{\tp@marksize}}
  \pgfpathmoveto{\pgfpoint{-\tp@marksize}{\tp@marksize}}
  \pgfpathlineto{\pgfpoint{\tp@marksize}{-\tp@marksize}}
  \pgfusepathqstroke
  \setlength{\pgflinewidth}{\tp@linewidth}
}
%    \end{macrocode}


% Anchors can be displayed block by block (using
% \cs{tikzpageputanchorsdefaults}, \cs{tikzpageputanchors}
% \cs{tikzpageputanchorsmarginpar}, \cs{tikzpageputanchorsheader},
% \cs{tikzpageputanchorsfooter}, \cs{tikzpageputanchorstop},
% \cs{tikzpageputanchorsright}, \cs{tikzpageputanchorsbottom},
% \cs{tikzpageputanchorsleft}) or globally (using \refCom{tikzpageputanchors}).

%    \begin{macrocode}
\def\tikzpageputanchorsdefaults{
  \foreach \anchor/\placement in {%
    northwest/below right%
    ,north/below%
    ,northeast/below left%
    ,west/right%
    ,center/below%
    ,east/left%
    ,southwest/above right%
    ,south/above%
    ,southeast/above left%
  } \draw[red,shift=(page.\anchor)] plot[mark=tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement] {\scriptsize\texttt{(page.\anchor)}};
}

\def\tikzpageputanchorsbody{
  \foreach \anchor/\placement in {%
    body northwest/below right%
    ,body north/below%
    ,body northeast/below left%
    ,body west/right%
    ,body center/below%
    ,body east/left%
    ,body southwest/above right%
    ,body south/above%
    ,body southeast/above left%
  } \draw[red,shift=(page.\anchor)] plot[mark=tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement] {\scriptsize\texttt{(page.\anchor)}};
}


\def\tikzpageputanchorsmarginpar{
  \foreach \anchor/\placement in {%
    marginpar northwest/below left%
    ,marginpar north/left%
    ,marginpar northeast/above left%
    ,marginpar west/below%
    ,marginpar center/below%
    ,marginpar east/above%
    ,marginpar southwest/below right%
    ,marginpar south/right%
    ,marginpar southeast/above right%
  } \draw[red,shift=(page.\anchor)] plot[mark=tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement, rotate=90] {\scriptsize\texttt{(page.\anchor)}};
}


\def\tikzpageputanchorsheader{
  \foreach \anchor/\placement in {%
    header northwest/above right%
    ,header north/above%
    ,header northeast/above left%
    ,header west/right%
    ,header center/right%
    ,header east/left%
    ,header southwest/below right%
    ,header south/below%
    ,header southeast/below left%
  } \draw[red,shift=(page.\anchor)] plot[mark=tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement] {\scriptsize\texttt{(page.\anchor)}};
}


\def\tikzpageputanchorsfooter{
  \foreach \anchor/\placement in {%
    footer northwest/above right%
    ,footer north/above%
    ,footer northeast/above left%
    ,footer west/right%
    ,footer center/right%
    ,footer east/left%
    ,footer southwest/below right%
    ,footer south/below%
    ,footer southeast/below left%
  } \draw[red,shift=(page.\anchor)] plot[mark=tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement] {\scriptsize\texttt{(page.\anchor)}};
}

\def\tikzpageputanchorstop{
  \foreach \anchor/\placement in {%
    top northwest/below right%
    ,top north/below%
    ,top northeast/below left%
    ,top west/right%
    ,top center/below%
    ,top east/left%
    ,top southwest/above right%
    ,top south/above%
    ,top southeast/above left%
  } \draw[red,shift=(page.\anchor)] plot[mark=tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement] {\scriptsize\texttt{(page.\anchor)}};
}


\def\tikzpageputanchorsbottom{
  \foreach \anchor/\placement in {%
    bottom northwest/below right%
    ,bottom north/below%
    ,bottom northeast/below left%
    ,bottom west/right%
    ,bottom center/below%
    ,bottom east/left%
    ,bottom southwest/above right%
    ,bottom south/above%
    ,bottom southeast/above left%
  } \draw[red,shift=(page.\anchor)] plot[mark=ball%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement] {\scriptsize\texttt{(page.\anchor)}};
}


\def\tikzpageputanchorsleft{
  \foreach \anchor/\placement in {%
    left northwest/below left%
    ,left north/left%
    ,left northeast/above left%
    ,left west/below%
    ,left center/below%
    ,left east/above%
    ,left southwest/below right%
    ,left south/right%
    ,left southeast/above right%
  } \draw[red,shift=(page.\anchor)] plot[mark=ball%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement, rotate=90] {\scriptsize\texttt{(page.\anchor)}};
}

\def\tikzpageputanchorsright{
  \foreach \anchor/\placement in {%
    right northwest/below left%
    ,right north/left%
    ,right northeast/above left%
    ,right west/below%
    ,right center/below%
    ,right east/above%
    ,right southwest/below right%
    ,right south/right%
    ,right southeast/above right%
  } \draw[red,shift=(page.\anchor)] plot[mark=10-pointed star %%tpx%% my plot mark
  ] coordinates{(0,0)}
  node[blue,\placement, rotate=90] {\scriptsize\texttt{(page.\anchor)}};
}
%    \end{macrocode}
%
% \begin{docCommand}{tikzpageputanchors}{}
% A simple short hand to display all anchors at once.
% \end{docCommand}
%    \begin{macrocode}
\def\tikzpageputanchors{
  \tikzpageputanchorsdefaults
  \tikzpageputanchorsbody
  \tikzpageputanchorsmarginpar
  \tikzpageputanchorsheader
  \tikzpageputanchorsfooter
  \tikzpageputanchorstop
  \tikzpageputanchorsbottom
  \tikzpageputanchorsleft
  \tikzpageputanchorsright
}
%    \end{macrocode}
%
% \begin{docCommand}{tpshowframes}{}
% 
% Display |top|, |right|, |bottom| and |left| block using a specific
% background. This can be used in conjunction with \refCom{tikzpageputanchors} for
% debuging purposes.
% 
% \end{docCommand}
%    \begin{macrocode}
\tikzset{bottom style/.style={fill=blue!10, opacity=.3, draw}}
\tikzset{top style/.style={fill=blue!10, opacity=.3, draw}}
\def\tpshowframes{
  \draw[top style] (page.bottom northwest) rectangle (page.bottom southeast);
  \draw[fill=yellow!50, opacity=.3, draw] (page.top northwest) rectangle (page.top southeast);
  \draw[fill=red!50, opacity=.3, draw] (page.left northwest) rectangle (page.left southeast);
  \draw[bottom style] (page.right northwest) rectangle (page.right southeast);
}
%    \end{macrocode}
%
%
% \begin{docCommand}{tpfancyhdrdefault}{}
% An example to display headers and footer as |fancyhdr| does.
% \end{docCommand}
%    \begin{macrocode}
\def\tpfancyhdrdefault{
  \node [outer sep=0,inner sep=0, anchor=mid] at (page.header center) {};
  \node [outer sep=0,inner sep=0, anchor=mid east] at (page.header east) {\tpflip{\sl\leftmark}{\sl\rightmark}};
  \node [outer sep=0,inner sep=0, anchor=mid west] at (page.header west) {\tpflip{\sl\rightmark}{\sl\leftmark}};
  \node [outer sep=0,inner sep=0, anchor=base east] at (page.footer east) {};
  \node [,outer sep=0,inner sep=0,anchor=base] at (page.footer center) {\thepage};
  \node [outer sep=0,inner sep=0, anchor=base west] at (page.footer west) {};
}
%    \end{macrocode}
%
% \begin{docCommand}{tikzpage}{}
% Generate a |tikzpicture| for the whole page. if a \cs{tikzpagelayout}
% command exists, it will be executed.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\tikzpage}{
  \if@tp@use@textpos
  \begin{textblock*}{\textwidth}[0,0](0pt,0pt)%
    \fi
    \tp@compute@margins%
    \if@tp@use@textpos
    \begin{tikzpicture}[]%
      \clip (0,0) rectangle (\paperwidth, \paperheight);
      \else
      \begin{tikzpicture}[remember picture, overlay]%
      \fi
      \if@tp@use@textpos
      \node[anchor=origin,shape=page] (page) {};
      \else
      \node[anchor=origin,shape=page] (page) at (current page.south west) {};
      \fi
      \@ifundefined{tikzpagelayout}{}{\tikzpagelayout}
    \end{tikzpicture}%
  \if@tp@use@textpos
  \end{textblock*}%
  \fi
}
%    \end{macrocode}
% \newpage
%\tikzpage
% \newpage
% \tikzpage
\makeatother
% \iffalse
%</PAGE>
% \fi
%
% \Finale
%
% \begin{thebibliography}{9}
% 
% \bibitem{Graphical Decoration} Trying to do graphical decorations in
% “ClassicThesis style” \url{http://tex.stackexchange.com/questions/86294}
% \end{thebibliography}
%
% 
% 
\endinput