% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-pkgmanager --- a package to shorten preambles
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a phd for defining a class.
%</readme>
%<*readmemd>
###The `phd-counters` LaTeX2e package (version 0.10.0)

The `phd-counters` latex package forms part of the `phd` package
bundle and the class with the same name. The bundle provides
convenient methods to create new styles for books, reports
and articles. It also loads the most commonly used packages 
and resolves conflicts.

This work consists of the file  

    `phd-counters.dtx`,
    
and the derived files   

    `phd-counters.ins`,  
    `phd-counters.pdf`, 
    `phd-counters.sty`.

###Installation

run
          `phd-lua` on windows
          

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

### Documentation

The package was written using the `doc` and `docscript` packages,
so that it is self documented in a literary programming style. 
The .pdf is a fat document, providing over fifty book styles (the
equivalent of classes) plus there is a lot of write-up on the inner
workings of TeX and LaTeX2e. However, you don't need to know much
to use it.

      \usepackage{phd}
      \input{style13}

All choices, are made via an extended key-value interface. 
Although not a compliment, it resembles CSS and the keys are a bit verbose but
attributes are easy to change and have a consistent and easy to remember interface.

To set or add a key we only use one command:

      \cxset{chapter name font-size = Huge,
             chapter number font-size = HUGE} 

### Future Development

This is still an experimental version, but I will retain the
interface in future releases. There is a large amount of
work still to be carried out to improve the template styles
provided, to test it more thoroughly and to add a number of
improvements in the special designs. At present I estimate
that I have completed about 70% of the work that needs
to be done.

__The package as it stands is not production stable.__ 


%</readmemd>
%
%<*TODO>
1. On final round add pkg options. This was left as last in order not to solve problems by adding
    options. Too many options are not a good User Interface.
2.  Finish symbol management, both text and math. Math already 80% incorporated.
3.  Better integration of indexing commands.   
4.  Revisit layout manager for Chapters. Broke again in tests.
5.  Docs. Add all references.
6.  Incorporate phd class for more flexibility.
7.  Improve package manager.
8.  Group script loading for better font management.
9.  General font management to relook it again.
10. Add all style sections (about 100 already prepared). Once they
     are all working issue beta version.
%</TODO>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- A package to beautify documents.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble

%\BaseDirectory{C:/users/admin/my documents/github/phd}
%\usedir{MWE}
\generate{\file{\jobname.sty}{
  \from{\jobname.dtx}{COUNTERS}}
  }
%\nopreamble\nopostamble
%
%</install>
%
%<install>\endbatchfile
%<*internal>
%\usedir{tex/latex/phd}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble

\generate{
	\file{README.txt}{\from{\jobname.dtx}{readme}}
  }

\generate{
  \file{\jobname.md}{\from{\jobname.dtx}{readmemd}}
}
\generate{
  \file{\jobname-todo.tex}{\from{\jobname.dtx}{TODO}}
}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>

%\listfiles
%gdef\@onlypreamble{} % TO BE REMOVED NEEDED FOR TUTS
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\RequirePackage[2017/04/15]{latexrelease}
\documentclass[book,twoside,11pt,a4paper,microtype=on]{phddoc}
\usepackage[bottom=2cm]{geometry}
\savegeometry{std}
% \usepackage[style=mla]{biblatex}
\usepackage{phd-documentation}
\usepackage{phd-counters}
\usepackage{phd-toc}
\usepackage{phd-runningheads}
\usepackage{phd-lowersections}
\usepackage{makeidx}
\usepackage{phd-lists}
\sethyperref
\addbibresource{phd1}
\cxset{palette oprah}
\makeindex
\begin{filecontents}{defaults-chapters}
%%    General Defaults for Chapters
\cxset{%    
    chapter title margin-top-width    =  0cm,
    chapter title margin-right-width  =  1cm,
    chapter title margin-bottom-width = 10pt,
    chapter title margin-left-width   = 0pt,
    chapter align                     = left,
    chapter title align               = left, %checked
    chapter name                      = hang,
    chapter format                    = fashion,
    chapter font-size                 = Huge,
    chapter font-weight               = bold,
    chapter font-family               = sffamily,
    chapter font-shape                = upshape,
    chapter color                     = black,
    chapter number prefix             = ,
    chapter number suffix             = ,
    chapter numbering                 = arabic,
    chapter indent                    = 0pt,
    chapter beforeskip                = -3cm,
    chapter afterskip                 = 30pt,
    chapter afterindent               = off,
    chapter number after              = ,
    chapter arc                       = 0mm,
    chapter background-color          = bgsexy,
    chapter afterindent               = off,
    chapter grow left                 = 0mm,
    chapter grow right                = 0mm, 
    chapter rounded corners           = northeast,
    chapter shadow                    = fuzzy halo,
    chapter border-left-width         = 0pt,
    chapter border-right-width        = 0pt,
    chapter border-top-width          = 0pt,
    chapter border-bottom-width       = 0pt,
    chapter padding-left-width        = 0pt,
    chapter padding-right-width       = 10pt,
    chapter padding-top-width         = 10pt,
    chapter padding-bottom-width      = 10pt,
    chapter number color              = white,
    chapter label color               = white,    
    }
 \cxset{    
    chapter number font-size        = huge,
    chapter number font-weight      = bfseries,
    chapter number font-family      = sffamily,
    chapter number font-shape       = upshape,
    chapter number align            = Centering,
    }
\cxset{%    
     chapter title font-size        = Huge,
     chapter title font-weight      = bold,
     chapter title font-family      = calligra,
     chapter title font-shape       = upshape,
     chapter title color            = black,
     }    
\end{filecontents}
\input{defaults-chapters}  
%\definecolor{bgsexy}{HTML}{FF6927}
%
%\definecolor{creamy}{HTML}{FDEBD7}
\cxset{chapter title color= creamy,
       chapter label color = creamy,
       chapter number color = creamy,
       chapter number font-size = Huge,
       subsection title color = creamy,
       chapter name = CHAPTER,
       chapter label case = upper,
       chapter number align=left,
       part format = traditional,
       part background-color=spot,
       part beforeskip                = -3cm,
       part afterskip                 = 30pt,
       subsection afterindent         = off,
       }
       
\ExplSyntaxOn
\makeatletter
\tl_map_inline:nn
 {
  \@ifpackageloaded
  \@ifpackagewith
  \RequirePackage
  \@ifl@aded
  \@ifpackagelater
  \@ifclasslater
  \@ifclassloaded
  \@ifl@t@r
  \@parse@version
 }
 {
  \tl_remove_once:Nn \@preamblecmds {\do#1}
 }
 \makeatother
\ExplSyntaxOff  
%\usepackage[perpage]{footmisc}        
\begin{document}
\let\citep\footcite
\DEBUGOFF
\parindent1em
\def\secondpageimgdescription {Failaka Islad, Kuwait, building wall showing bullet
  holes, from the Iraqi invasion a quarter-century ago. (Megan O'Toole Al Jazeera }
\coverpage{bullets}{Book Design Monographs}{Camel Press}{COUNTERS}{DESIGN} 
\pagestyle{empty}
%\coverpage{habtoor-city}{Delay Claim}{HLS-DSE/JV}{HABTOOR CITY}{MEP CLAIM} 
\secondpage
\pagestyle{empty}
\clearpage

\tableofcontents

\pagestyle{empty}
\setcounter{secnumdepth}{6}
\parskip0pt plus.1ex minus.1ex
\mainmatter
\pagenumbering{arabic}
\pagestyle{headings}
      
\makeatletter
%\@debugtrue
\makeatother
%\input{./l3sections/latex3-basic}
%\input{./l3sections/l3expansion}
%\input{./l3sections/l3macros}
%\input{./l3sections/l3counters}
%\input{./l3sections/l3error}
%\input{./l3sections/l3files}
%\input{./l3sections/l3keys}
%\input{./l3sections/l3seq}
%\input{./l3sections/l3clists}
%\input{./l3sections/l3quarks}
%\input{./l3sections/l3token}
%\input{./l3sections/l3xtemplate}
%\input{./l3sections/l3main}
\DocInput{\jobname.dtx}
\MakePercentComment
\appendix
%\input{./kernel/kernel-ltcounts}
\printbibliography 
\printindex
%
% 
\end{document}
%</driver>
% \fi
% 
%  \CheckSum{0}
%  \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% 
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
% 
% ^^A\maketitle
% 
% ^^A\frontmatter
%  ^^A\coverpage{./images/hine02.jpg}{Book Design }{Camel Press}{}{}
%  \newpage
% ^^A\secondpage
%
% \raggedbottom
%  \OnlyDescription
%
%  ^^A\StopEventually{\printindex}

% \CodelineNumbered
% \pagestyle{headings}
% 
% 
% ^^A\part{IMPLEMENTATION AND FRIENDS}
% 
% \cxset{fashion image=hypatia.jpg}
%
% \chapter{Counters Package Code Implementation Objectives and Strategy}
% 
% \epigraph{
% It would be nice if all of the data which sociologists require could be enumerated because then we could run them through IBM machines and draw charts as the economists do. However, not everything that can be counted counts, and not everything that counts can be counted.
%}{---William Bruce Cameron in \emph{Casual Introduction to Sociological Thinking}.}
%
% We start by outlining what we are trying to achieve with this package:
%
% \begin{enumerate}
%
% \item To provide an expl3 interface to using integers as counters for
%       headings etc, without the need to resort to \latex2e counters.
%
% \item To provide a declarative interface to enable users to use counters
%       with headings and other book elements (interface to \pkg{phd}).

% \item To provide an interface to packages handling localizations and internationalization.
%        This should provide facilities for representing integers as cardinals, ordinals
%        in a particular language.
%
% \item To provide a compatibility mode, where documents wishing to test the package
% can have an easy switch to switch in and out. This is also important for the testing of the package.
%
% \item To provide easy means of getting the total of standard or custom counters, 
%  such as last page, last section
%        etc.
% \item To provide a plug-in architecture for extensions.

% \end{enumerate}
% 
% \section{Terminology}
%
%  \begin{description}
%  \item [document] Any written item, as a book, article, or letter, especially 
%                  of a factual or informative nature.
%  \item [heading] A division of a document or document series. For a normal
%        book headings are chapters, sections etc. However we allow for
%        specifying a more complex document divided into books, volumes
%        parts etc. For example the Bible has Books, chapters and verses,
%        where a legal document might require divisions such as clauses.
%        In general these divisions are numbered. These document divisions
%        are stored in the comma list \refCom{phd_book_divisions_clist}.
%  \item [head] A typeset heading, such as chapter head, or section head.
%        This can include a counter, label and title for example, 
%        \emph{Chapter 1 Introduction}.
%  \item [dom] This is a programming interface that provides a structured
%        representation of the document (a tree) and it defines a way
%        that the structure can be accessed. Although \latexe does not
%        offer a standard way to build such a tree (mainly because
%        \tex does not require the marking of paragraphs, it is 
%        useful to think of the document as a tree structure. We also
%        allow for a semi-automated way to build such a tree (with the 
%        exception that paragraphs are not included).
% \item [element] A part of the document tree that can be styled on
%       its own. For example the chapter label, or the section number.
%
% \end{description}
%
% \section{Users}
%  We classify users according to the \LaTeX3 terminology as a) programmers b) template designers
%  and c) authors.
% \subsection{Author}
%  We assume that the author has an exising template which she is using but might want to do
%  some minor modifications, for example use an italic shape for the font of the mark, but an 
%  upright font for the page numbers. 
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{|
%~~~~~~~~\textit{chapter number color}~~|format          = apa,|
%~~~~~~~~\textit{section title font-size} |font-size   = Large,|
%~~~~~|}|
%}  
%
% We follow the idea of representing the basic elements of documents
% as elements, each one having a parent in order to specify
% the element we need to style as accurate as possible. One can think of
% this approach being congruent with objects in other languages.
% As a matter fact nothing stops us from defining a key value
% interface as shown below.
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{| 
%~~~~~~~~\textit{header.even.mark.font.size}   = |Large,|
%~~~~~~~~\textit{header.even.mark.font.family} = |serif,|
%~~~~~|}|
%}  
%
% This would pehaps make it easier for the template designer, but I have rejected
% the idea as my aim is to make it easy for the author, who can search the template
% and just enter a couple of new proerty values.
%
% \subsection{Template designer}
% \pagestyle{headings}
% The template designer in the example above would have selected the format style
% from a number of predefined formats (templates) or would have created a style
% called \textit{apa} from an existing template and modified it using declarative
% key style.
%
% \subsection{The programmer}
%
% The programmer in the example above could have created the basic format
% \textit{apa} by using both declarative as well as defining or using existing
% macros. To the programmer we offer an extension mechanism, where the contents
% of a |ps@| command are defined. For example the programmer can define a new
% style using \tikzname, but without having to worry about defining full |ps@|
% and their interface.
%
% \section{State of the art}
%
% \paragraph{Reset a counter}
%
% Counters can be reset to an initial value when another counter is reset. For
% example a section is reset when a chapter counter is incremented and hence
% this is difficult to determine. This functionality is offered by \latexe
%
% \paragraph{Add to reset} This functionality is offered by the \pkg{chngcntr}\footcite{chngcntr} or you can use the 
% \latexe command \refCom{@addtoreset}. The |chngcntr|
%     package just adds it to the list kept by \latexe for resetting.
%
% \paragraph{Total number of counters}
%     Sometimes it can be useful to know the total number of elements (e.g. sections,
%     pages, citations, etc.) in a \latex document. 
% 
% There are numerous packages that deal with counters one way or another on \ctan.
% Packages such as \pkg{totpages} (\citep{totpages}), \pkg{lastpage} \citep{lastpage}, \pkg{pageslts} \citep{pageslts}, \pkg{count1to} \citep{count1to} and \pkg{TotCount} \citep{totcount}
% provide user level commands for accessing the last count of either special
% counters, such as |\page| or in the case of the \pkg{TotCount} of creating
% counters that enable the computation and display of the last counter inside a
% document (usually the maximum value of the counter). 

% Another package that can be
% used by programmers to access, such is information is Heiko Oberdiek's package
% \pkg{zref}\footcite{zref}. I have  a preference for the last one and its modules,
% as we are using it elsewhere as well and it is likely that if you are using 
% \pkg{hyperref} this would have been loaded automatically. 

% Referring to the total 
% number of sections, pages, citations and similar can be difficult to achieve.
% The difficulty arises when the reference is before the \emph{definition} of all
% the elements that need to be counted. In this case it requires the saving
% of the counter in an auxiliary file, in much the same way that \latexe uses for 
% headings, table of contents and citations. For example this document's last page
% is last chapter is \zref[chapter]{LastPage}  \zref[thepage]{LastPage}. The absolute
% total pages are \ztotpages. 
%
% \paragraph{Integer representation as Alph, Ordinals, Cardinals, symbols.}
% The counters can be represented as ordinals or cardinals. There is
% limited support in \latexe, including symbols used in footnotes.
% 
% Internationalization is handled by fmcount, babel, polyglossia.
%
% \subsection{The expl3 l3int package}
%
%
% \section{Preliminaries}
%
%  Standard file identification. We first announce the package 
%	 and require that it be used with \LaTeX2e. 
% \iffalse
%<*COUNTERS>
% \fi
%  
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\RequirePackage[2017/04/15]{latexrelease}
\ProvidesFile{phd-counters}[2017/04/15 v1.0 less preamble (YL)]%
%    \end{macrocode}
%
% We load the \pkg{zref} with a number of options including the 
% |user| module. This means that all the user commands will be prefixed by |z|
% to avoid name clashes with macros of the same functionality. \zlabel{zref}
%
%    \begin{macrocode}
\RequirePackage[thepage,abspage,%
                lastpage,totpages, user,savepos,xr,pagelayout]{zref}
%    \end{macrocode}
%
% The \pkg{zref} is a programmer's toolbox for referencing, hence we
% need to add a number of properties and macros to set it up properly
% for what we need to achieve. See \zpageref{zref}, 
% \zpageref{abspage}
%
%    \begin{macrocode}
\newcounter{foo}
\renewcommand*{\thefoo}{\Alph{foo}}
\zref@newprop{thefoo}{\thefoo}
\zref@newprop{valuefoo}{\the\value{foo}}
\zref@newprop{chapter}{\thechapter}
\zref@newprop{thepage}{\thepage}
\zref@addprops{LastPage}{thepage,abspage,thefoo,valuefoo,chapter}
\newcommand*{\foo}{%
\stepcounter{foo}%
 [Current foo: \thefoo]%
}
%    \end{macrocode}
%
% Next we define error messages. We group them here for convenience
%    \begin{macrocode}
\ExplSyntaxOn
\msg_new:nnnn { phd-counters } {counter-too-large-for-ordinal}
  { #1~is~too~large~to~be~converted~to~ordinals }
  { I~am~leaving~it~as~a~numeral.\\ ~Press~enter~to~continue.}
\msg_new:nnnn { phd-counters } { unknown-language }
  { I do not know the language tag #1. }
  { I~am~leaving~it~as~a~numeral.\\ ~Press~enter~to~continue.} 
\msg_new:nnnn { phd-counters } { counter-exists }
  { I~cannot~create~the~counter~#1. }
  { As~it~already~exists.}    
  
\ExplSyntaxOff  
%    \end{macrocode}

% Unlike \latexe and in order to enable compatibility where required,
% define a counter prefix to be used with counters. When this is set
% to |c@| the counter will be fully compatible with \latexe but be
% able also to use commands from this package. Each counter has a list
% of associated counters that are reset, when it is changed. This is
% created with using the prefix |\counter_resets_prefix:|.
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npx  \ltx_counter_prefix_tl  { c@                       }
\cs_new:Npx  \phd_counter_prefix_tl  { c@                       }
\cs_new:Npx  \counter_resets_prefix: { __counter_resets_prefix_ }
%    \end{macrocode}
%
% \begin{docCommand}{phd_create_new_counter:n} {\marg{name}}
%    Internal version of the command to create a new counter. This
%    uses the expl3 internal allocation system to avoid conflicts
%    by creating a new integer.
% \end{docCommand}
%
%    \begin{macrocode}
\cs_gset:Nn  \phd_create_new_counter:n 
  {
    \int_if_exist:cTF 
      {\phd_counter_prefix_tl#1}
            {
            \msg_error:nnn { phd-counters } { counter-exists }{#1}
            }
      { 
        \int_gzero_new:c {\phd_counter_prefix_tl#1}
        \seq_new:c {\counter_resets_prefix:#1}
      }
  }
%    \end{macrocode}
% 
% Next define some functions around the counter in a similar fashion
% to \latexe. We provide |the|\meta{counter name}, but for consistency
% we also provide an uppercase variant, so if the counter is named
% |exam|, |\ExamValue| holds the integer value. 
%
% 
%    \begin{macrocode}
\cs_gset:Npn\phd_make_auxiliary_functions: #1
  {
    \phd_make_aux_commands#1\scan_stop:
  }

\cs_gset:Npn \phd_make_aux_commands #1 #2\scan_stop:
  {
    \uppercase{\exp_after:wN \cs_gset:Npn \cs:w #1}#2Value\cs_end:
       {\tex_the:D\cs:w\phd_counter_prefix_tl#1#2\cs_end:\relax}
  
       \cs_gset:cpn {the#2} 
         {
           \tex_the:D\cs:w\phd_counter_prefix_tl#1#2\cs_end:\relax 
         }
  }
%    \end{macrocode}  
%
% The \docAuxCommand{phd_add_to_reset:nn} adds a counter to the reset of another.
% It takes two arguments and store the resets in a sequence. 
%
%    \begin{macrocode}    
\cs_gset:Nn \phd_add_to_reset:nn 
  {
    \exp_args:Nf \seq_put_left:cn {\counter_resets_prefix:#1}{#2}
  }
%    \end{macrocode} 
%
% \begin{docCommand} {phd_reset_counter:c} { \marg{counter name}}
%   Resets the counter to zero.
% \end{docCommand}
%
%    \begin{macrocode} 
\cs_gset:Npn \resetcounter:c #1
  {
    \int_gset:cn {\phd_counter_prefix_tl #1}{0}
  }
%    \end{macrocode}
% 
% \begin{docCommand} {phd_step_counter:c} { \marg{counter name}}
%   Steps a counter by one and resets all counters in the resets list
%   to zero.
% \end{docCommand}
%
%    \begin{macrocode}  
\cs_gset:Npn \stepcounter:c #1
  {
    \int_gincr:c {\phd_counter_prefix_tl #1}
    \seq_set_eq:Nc \tempa {__counter_resets_prefix_#1}
    \seq_map_inline:Nn \tempa {\resetcounter:c{##1}}
  }      
%    \end{macrocode}
%
%  \begin{docCommand} {phd_set_counter:cn} { \marg{counter name} \marg{value} }
%     Sets a counter to the value given by its second argument.
%  \end{docCommand}
%
%    \begin{macrocode}
\cs_gset:Npn \setcounter:cn #1 #2
  {
    \int_gset:cn {\phd_counter_prefix_tl #1} { #2 }
  }
%    \end{macrocode}
%
%  \begin{docCommand} {NewCounter} { \oarg{reset} \marg{counter name} }
%    Creates a new counter. This is equivalent to \latexe's \docAuxCommand*{newcounter}.
%  \end{docCommand}
%
%    \begin{macrocode}
\DeclareDocumentCommand\NewCounter { o m } 
  {
    \phd_create_new_counter:n {#2}
      \IfNoValueF {#1}
        {
          \int_if_exist:cT { \counter_resets_prefix:#1 } 
            { \phd_add_to_reset:nn {#1} {#2} } 
        }    
    \phd_make_auxiliary_functions: {#2}
  }
\ExplSyntaxOff
%    \end{macrocode}
%
%  
%  
%  
%
% \section{Ordinal and Cardinal Numbers}
%
% The next sections deal with cardinal and ordinal numbers. Ordinal numbers are
% words representing position or rank in a sequential order whereas cardinal numbers
% represent quantity, so cardinal is one, two etc whereas ordinal is first, second etc.
%
% These are incomplete but fast functions suitable for Chapter headings. For a 
% more comprehensive treatment the \pkg{fmtcount} as well as \pkg{Polyglossia}
% or \pkg{Babel} can be used.
%
% Start with the mixed case, as it is easier and safer to convert it afterwards to
% uppercase or lowercase words.
%
% \begin{docCommand}{int_to_mixedcase_cardinal:nn} { \marg{language tag} \marg{integer} }
%  Converts an integer to its cardinal representation for a given language.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \int_to_mixedcase_cardinal:nn #1 #2
  {
    \cs_if_exist:cTF {int_to_cardinal_aux_#1:n}
        { \cs:w int_to_cardinal_aux_#1:n\cs_end:{#2} }
        {  
          \msg_error:nnnn { phd-counters } { unknown-language } {#1} {} 
          \cs:w int_to_cardinal_aux_en:n\cs_end:{#2} 
        }   
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% The auxiliary function \docAuxCommand {int_to_cardinal_aux_en:n} is used to
% select the cardinal representation of the integer. There should be one
% for each of the supported languages. I still need to decide how best to
% integrate this with the rest of the code, either picking up files from
% Polyglossia or Babel. The auxiliary is always in mixed case.
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \hundred_en  #1 { Hundred~  }
\cs_new:Npn \thousand_en #1 { Thousand~ }
\cs_new:Npn \million_en  #1 { Million~  }
\cs_new:Npn \and_name_en #1 { ~and~     }
\ExplSyntaxOff
%    \end{macrocode}
% \begin{docCommand} {unit_strings_en:n } { \marg{integer}}
%   Converts integer to cardinal for integer 0--9.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \unit_strings_en:n #1
  {
     \int_to_symbols:nnn {#1} {20}
       {
          {  1 } { Zero~      }
          {  2 } { One~       }
          {  3 } { Two~       }
          {  4 } { Three~     }
          {  5 } { Four~      }
          {  6 } { Five~      }
          {  7 } { Six~       }
          {  8 } { Seven~     }
          {  9 } { Eight~     }
          { 10 } { Nine~      }
          { 11 } { Ten~       }
          { 12 } { Eleven~    }
          { 13 } { Twelve~    }
          { 14 } { Thirteen~  }
          { 15 } { Forteen~   }
          { 16 } { Fifteen~   }
          { 17 } { Sixteen~   }
          { 18 } { Seventeen~ }
          { 19 } { Eighteen~  }
          { 20 } { Nineteen~  }
       }    
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docCommand} {teens_strings_en:n } { \marg{integer}}
%   Converts 10+integer to cardinal.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \teen_strings_en:n #1
  {
     \int_to_symbols:nnn {#1} {9}
       {
          
          {  1 } { Eleven         }
          {  2 } { Twelve         }
          {  3 } { Thirteen       }
          {  4 } { Forteen        }
          {  5 } { Fifteen        }
          {  6 } { Sixteen        }
          {  7 } { Seventeen      }
          {  8 } { Eighteen       }
          {  9 } { Nineteen       }
       }    
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docCommand} {tens_strings_en:n } { \marg{integer}}
%   Converts 10*integer to cardinal.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \tens_strings_en:n #1
  {
     \int_to_symbols:nnn {#1} {8}
       {
 
          {  1 } { Twenty~~      }
          {  2 } { Thirty~~      }
          {  3 } { Forty~        }
          {  4 } { Fifty~        }
          {  5 } { Sixty~        }
          {  6 } { Seventy~      }
          {  7 } { Eighty~       }
          {  8 } { Ninety~       }
       }    
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
 \int_gzero_new:N \int_current_mod
 \int_gzero_new:c {int_current_val}
 \int_gzero_new:N \int_thousands
 \int_gzero_new:N \int_hundreds
 \int_gzero_new:N \int_tens
 \int_gzero_new:N \int_units
 \int_gzero_new:N \int_to_be_converted
%    \end{macrocode}
%
% \begin{docCommand}{int_to_cardinal_aux_en:n}{\marg{integer}}
%  Converts an integer number to a cardinal number. The suffix \enquote{\_en} indicates
% the short language code.
% \end{docCommand}
%    \begin{macrocode} 
\cs_gset:Npn \int_to_cardinal_aux_en:n #1
  {
%    \end{macrocode}
%
% Start from higher numbers first. Take the number and divide by 100, then truncate
% the decimal part. We also store the original arabic number in \docAuxCommand{int_to_be_converted} in
% order to check for exceptions, where the algorithm fails such as zero for English, where we print
% it if is requested, but do not typeset it when it is a suffix or prefix.
%
%    \begin{macrocode}
   \int_gset:Nn \int_to_be_converted {#1} 
   \int_gset:Nn \int_thousands {\int_div_truncate:nn {#1}{1000}}
%    \end{macrocode}  
%
% We check to see if we have any thousands 
%    \begin{macrocode}
    \int_compare:nTF {\int_thousands > 0}
      {
        % \unit_strings_en:n {\int_hundreds +1 }
         \phd_hundreds {\int_thousands}
         \thousand_en\ \and_name_en\
         \exp_after:wN \int_gset:Nn \l_tmpa_int {#1-\int_thousands*1000}
         \phd_hundreds {\l_tmpa_int}
      } 
      { 
         \phd_hundreds {#1}
      }
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docCommand}{l_phd_hundreds} { \marg{integer} }
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \phd_hundreds #1
  {
%    \begin{macrocode}
   \int_gset:Nn \int_hundreds {\int_div_truncate:nn {#1}{100}} 
%    \end{macrocode}
%
% If the number is greater than 0 we have hundreds 100/100 will give 1, so it
% also covers the case.
%
%    \begin{macrocode}   
    \int_compare:nNnTF {\int_hundreds} > {0}
      {
        % \unit_strings_en:n {\int_hundreds +1 }
         \phd_units:n {\int_hundreds+1}
         \hundred_en
         \exp_after:wN \int_gset:Nn \l_tmpa_int {#1-\int_hundreds*100}
         \l_phd_tens:n {\l_tmpa_int} 
      } 
      { 
         \l_phd_tens:n {#1}
      }
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {l_phd_tens:n} { \marg{integer<100}}
%   Typesets an integer in the range 0--99.
% \end{docCommand}
%
%    \begin{macrocode}          
\ExplSyntaxOn
\cs_set:Npn \l_phd_tens:n #1 
  {
%    \end{macrocode}
%  Assuming 25 will give us 2 and 10 will give us 1 and 93 9  
%    \begin{macrocode}  
     \int_gset:Nn \int_tens {\int_div_truncate:nn {#1}{10}}
     [\int_use:N \int_tens]
  %    \end{macrocode}
% 
%  The first 19 numbers are hard-coded and hence we check for these 
%    \begin{macrocode}      
      \int_compare:nTF { #1 < 20 }
      {
        %\unit_strings_en:n {\int_eval:n {#1+1} }
        \phd_units:n {\int_eval:n {#1+1} }
      }
      {
        \tens_strings_en:n {\int_tens-1}
        % how many units?   
        \int_gset:Nn \int_current_val {#1+1-\int_tens*10 }
        \phd_units:n {\int_current_val}
     }
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {phd_units:n} { \marg{integer<20} }
%    Typesets an integer in the range 0-19 as a cardinal.
% \end{docCommand}
%
% As these digits can be appended or prepended to constructions, we take care not to print
% the zero, such as One Hundred and Zero or Zero One hundred unless the original number to
% be converted was a zero. In retrospect maybe zero should have been handled as a special
% string, like hundred.
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \phd_units:n #1
  {
   \int_compare:nTF {#1 > 1 }
   {  \unit_strings_en:n {#1}  }
   {
     \int_compare:nT {\int_to_be_converted = 0}
       {
         \unit_strings_en:n {1} 
       }
   }
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docCommand} {int_to_uppercase_cardinal:nn } { \marg{language tag} \marg{integer} }
%   Converts an integer to its uppercase cardinal representation for a given language.
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \int_to_uppercase_cardinal:nn #1 #2
  {
    \cs_if_exist:cTF {int_to_cardinal_aux_#1:n}
        { \exp_after:wN \MakeTextUppercase {\cs:w int_to_cardinal_aux_en:n\cs_end: {#2}} }
        {  
          \msg_error:nnnn { phd-counters } { unknown-language } {#1} {} 
          \cs:w int_to_cardinal_aux_en:n\cs_end:{#2} 
        }   
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {int_to_lowercase_cardinal:nn } { \marg{language tag} \marg{integer} }
%  Converts an integer to its lowercase cardinal representation for a given language.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \int_to_lowercase_cardinal:nn #1 #2
  {
    \cs_if_exist:cTF {int_to_cardinal_aux_#1:n}
        { \exp_after:wN \tl_lower_case:n {\cs:w int_to_cardinal_aux_#1:n\cs_end:{#2}} }
        {  
          \msg_error:nnnn { phd-counters } { unknown-language } {#1} {} 
          \cs:w int_to_cardinal_aux_en:n\cs_end:{#2} 
        }   
  }
\ExplSyntaxOff
%    \end{macrocode}
%
%
% \section{Ordinals (English)}
%
%  The package defaults to English and we provide conversion to
%  ordinals.
%  \begin{docCommand} {int_to_mixedcase_ordinal:nn} { \marg{short language code}  \marg{integer} }
%    Switch to typeset an ordinal given an integer. 
%  \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \int_to_mixedcase_ordinal:nn #1 #2
  {
    \cs_if_exist:cTF {int_to_ordinal_aux_#1:n}
        { \cs:w int_to_ordinal_aux_#1:n\cs_end:{#2} }
        {  
          \msg_error:nnnn { phd-counters } { unknown-language } {#1} {} 
          \cs:w int_to_ordinal_aux_en:n\cs_end:{#2} 
        }   
  }

\cs_new:Npn \int_to_ordinal_aux_en:n #1
  { 
    \int_compare:nNnTF  {#1} < {31} 
    { 
      \int_to_symbols:nnn {#1} {30}
       {
        {  0 } { Zeroeth      }
        {  1 } { First        }
        {  2 } { Second       }
        {  3 } { Third        }
        {  4 } { Fourth       }
        {  5 } { Fifth        }
        {  6 } { Sixth        }
        {  7 } { Seventh      }
        {  8 } { Eighth       }
        {  9 } { Ninth        }
        { 10 } { Tenth        }
        { 11 } { Eleventh     }
        { 12 } { twelfth      }
        { 13 } { Thirteenth   }
        { 14 } { Fourteenth   }
        { 15 } { Fifteenth    }
        { 16 } { Sixteenth    }
        { 17 } { Seventeenth  }
        { 18 } { Eighteenth   }
        { 19 } { Nineteenth   }
      }
    }{ \msg_error:nnnn { phd-counters } { counter-too-large-for-ordinal } {#1} {} }
  }
\ExplSyntaxOff
%    \end{macrocode}
%
%   \begin{docCommand} {int_to_lowercase_ordinal:nn} { \marg{short language code}  \marg{integer} }
%    Typesets a lowercase ordinal for the integer passed to its second argument. 
%  \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \int_to_lowercase_ordinal:nn #1 #2
  {
    \cs_if_exist:cTF {int_to_ordinal_aux_#1:n}
        { 
           \exp_after:wN 
           \MakeTextLowercase{ \cs:w int_to_ordinal_aux_#1:n\cs_end: {#2} } 
        }
        {  
          \msg_error:nnnn { phd-counters } { unknown-language } {#1} {} 
          \cs:w int_to_ordinal_aux_en:n \cs_end:{#2} 
        }   
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
%   \begin{docCommand} {int_to_uppercase_ordinal:nn} { \marg{short language code}  \marg{integer} }
%    Typesets an uppercase ordinal for the integer passed to its second argument. 
%  \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \int_to_uppercase_ordinal:nn #1 #2
  {
    \cs_if_exist:cTF { int_to_ordinal_aux_#1:n }
        { 
           \exp_after:wN 
           \MakeTextUppercase{ \cs:w int_to_ordinal_aux_#1:n\cs_end: {#2} } 
        }
        {  
          \msg_error:nnnn { phd-counters } { unknown-language } {#1} {} 
          \cs:w int_to_ordinal_aux_en:n \cs_end:{#2} 
        }   
  }
\ExplSyntaxOff  
%    \end{macrocode}

% \begin{docCommand}{words@cx} {\marg{int}} Utility macro for translating a 
%   number from numbers to words.
% \end{docCommand}
%    \begin{macrocode}
\def\words@cx#1{%
  \ifcase#1 zero\or one\or two\or three\or four\or five\or six\or seven
\or eight\or nine\or ten\or eleven\or twelve\or thirteen\or
fourteen
\or fifteen\or sixteen\or seventeen\or eighteen\or nineteen \or
twenty
\or twenty one\or twenty two\or twenty three\or twenty four\or
twenty five
\or twenty six\or twenty seven \or twenty eight \or twenty
nine\or thirty
\or thirty one\or thirty two\or thirty three\or thirty four\or
thirty five
\or thirty six\or thirty seven\or thirty eight\or thirty nine\or
forty\or forty one
\or forty two \or forty three\or forty four\or forty five \or
forty six \or forty seven
\or forty eight \or forty nine\or fifty\or fifty on\or fifty
two\or fifty three
\or fifty four\or fifty five\or fifty six\or fifty seven\or
fifty eight\or fifty nine
  \or sixty \or sixty one \or sixty two
  \or sixty three \or sixty four \or sixty five
    \else
    #1
    %\@ctrerr
    \fi
}

\def\Words@cx#1{%
\ifcase#1 Zero\or One\or Two\or Three\or Four\or Five\or Six\or
Seven\or Eight\or Nine\or Ten\or
Eleven\or Twelve\or Thirteen\or Fourteen\or Fifteen\or
Sixteen\or Seventeen\or Eighteen\or Nineteen \or Twenty\or
Twenty One\or Twenty Two\or Twenty Three\or Twenty Four\or
Twenty Five\or Twenty Six\or Twenty Seven \or Twenty Eight \or
Twenty Nine\or Thirty\or Thirty One\or Thirty Two\or Thirty
Three\or Thirty Four\or Thirty Five\or Thirty Six\or Thirty
Seven\or Thirty Eight\or Thirty Nine\or Forty\or Forty One\or
Forty Two \or Forty Three\or Forty Four\or Forty Five \or Forty
Six \or Forty Seven\or Forty Eight \or Forty Nine\or Fifty\or
Fifty One\or Fifty Two\or Fifty Three\or Fifty four\or Fifty
Five\or Fifty Six\or Fifty Seven\or Fifty Eight\or Fifty Nine\or
Sixty \or Sixty One \or Sixty Two
\or Sixty Three \or Sixty Four \or Sixty Five \or SixtySix \or SixtySeven
\or Sixty Eight \or SixtyNine \or Seventy \or Seventy One \or Seventy Two
\else
#1
%\@ctrerr
\fi}

\def\WORDS@cx#1{%
\ifcase#1 ZERO\or ONE\or TWO\or THREE\or FOUR\or FIVE\or SIX\or
SEVEN\or EIGHT\or NINE\or TEN\or
ELEVEN\or TWELVE\or THIRTEEN\or FOURTEEN\or FIFTEEN\or
SIXTEEN\or SEVENTEEN\or EIGHTEEN\or NINETEEN \or TWENTY\or
TWENTY ONE\or TWENTY TWO\or TWENTY THREE\or TWENTY FOUR\or
TWENTY FIVE\or TWENTY SIX\or TWENTY SEVEN \or TWENTY EIGHT \or
TWENTY NINE\or THIRTY\or THIRTY ONE\or THIRTY TWO\or THIRTY
THREE\or THIRTY FOUR\or THIRTY FIVE\or THIRTY SIX\or THIRTY
SEVEN\or THIRTY EIGHT\or THIRTY NINE\or FORTY\or FORTY ONE\or
FORTY TWO \or FORTY THREE\or FORTY FOUR\or FORTY FIVE\or FORTY
SIX\or FORTY SEVEN\or FORTY EIGHT\or FORTY NINE\or FIFTY\or
FIFTY ONE\or FIFTY TWO\or FIFTY THREE\or FIFTY FOUR\or FIFTY
FIVE\or FIFTY SIX\or FIFTY SEVEN\or FIFTY EIGHT\or FIFTY NINE\or
SIXTY\or SIXTY ONE\or SIXTY TWO\or SIXTY THREE \or SIXTY FOUR\or
SIXTY FIVE\or SIXTY SIX\or SIXTY SEVEN\or SIXTY EIGHT\or SIXTY
NINE\or SEVENTY\or SEVENTY ONE\or SEVENTY TWO\or SEVENTY
THREE\or SEVENTY FOUR\or SEVENTY FIVE\or SEVENTY SIX\or SEVENTY
SEVEN\or SEVENTY EIGHT\or SEVENTY NINE\or EIGHTY\or EIGHTY
ONE\or EIGHTY TWO\or EIGHTY THREE\or EIGHTY FOUR\or EIGHTY
FIVE\or EIGHTY SIX\or EIGHTY SEVEN\or EIGHTY EIGHT\or EIGHTY
NINE\or NINETY \or NINETY ONE \or NINETY TWO \or NINETY THREE
\or NINETY FOUR \or NINETY FIVE
\else
#1
%\@ctrerr
\fi
}
   
\def\ORDINALS@cx#1{%
\ifcase#1 ZEROETH\or FIRST\or SECOND\or THIRD\or FOURTH\or
FIFTH\or SIXTH\or SEVENTH\or EIGHTTH\or NINTH\or TENTH\or
ELEVENTH\or TWELFTH\or THIRTEENTH\or FOURTEENTH\or FIFTEENTH\or
SIXTEENTH\or SEVENTEEN\or EIGHTEEN\or NINETEEN \or TWENTY\or
TWENTY ONE\or TWENTY TWO\or TWENTY THREE\or TWENTY FOUR\or
TWENTY FIVE\or TWENTY SIX\or TWENTY SEVEN \or TWENTY EIGHT \or
TWENTY NINE\or THIRTY\or THIRTY ONE\or THIRTY TWO\or THIRTY
THREE\or THIRTY FOUR\or THIRTY FIVE\or THIRTY SIX\or THIRTY
SEVEN\or THIRTY EIGHT\or THIRTY NINE\or FORTY\or FORTY ONE\or
FORTY TWO \or FORTY THREE\or FORTY FOUR\or FORTY FIVE\or FORTY
SIX\or FORTY SEVEN\or FORTY EIGHT\or FORTY NINE\or FIFTY\or
FIFTY ONE\or FIFTY TWO\or FIFTY THREE\or FIFTY FOUR\or FIFTY
FIVE\or FIFTY SIX\or FIFTY SEVEN\or FIFTY EIGHT\or FIFTY NINE\or
SIXTY\or SIXTY ONE\or SIXTY TWO\or SIXTY THREE \or SIXTY FOUR\or
SIXTY FIVE \or SIXTY SIX \or SIXTY SEVEN \or SIXTY EIGHT \or SIXTY NINE
\or SEVENTY \or SEVENTY ONE \or SEVENTY TWO \or SEVENTY THREE
\or SEVENTY FOUR \or SEVENTY FIVE \or SEVENTY SIX \or SEVENTY SEVEN
\or SEVENTY EIGHT \or SEVENTY NINE \or EIGHTY
\else
#1
%\@ctrerr
\fi}

\def\ordinals@cx#1{%
  \ifcase#1 Zeroeth\or First\or Second\or Third\or Fourth\or Fifth\or Sixth
  \or Seventh\or Eighth\or Ninth\or Tenth\or
 Eleventh\or Twelfth\or Thirteenth\or Fourteenth\or Fifteenth
\or SIXTEENTH\or SEVENTEEN\or EIGHTEEN\or NINETEEN \or TWENTY\or
TWENTY ONE\or TWENTY TWO\or TWENTY THREE\or TWENTY FOUR\or
TWENTY FIVE\or TWENTY SIX\or TWENTY SEVEN \or TWENTY EIGHT \or
TWENTY NINE\or THIRTY\or THIRTY ONE\or THIRTY TWO\or THIRTY
THREE\or THIRTY FOUR\or THIRTY FIVE\or THIRTY SIX\or THIRTY
SEVEN\or THIRTY EIGHT\or THIRTY NINE\or FORTY\or FORTY ONE\or
FORTY TWO \or FORTY THREE\or FORTY FOUR\or FORTY FIVE\or FORTY
SIX\or FORTY SEVEN\or FORTY EIGHT\or FORTY NINE\or FIFTY\or
FIFTY ONE\or FIFTY TWO\or FIFTY THREE\or FIFTY FOUR\or FIFTY
FIVE\or FIFTY SIX\or FIFTY SEVEN\or FIFTY EIGHT\or FIFTY NINE\or
SIXTY\or SIXTY ONE\or SIXTY TWO\or SIXTY THREE \or SIXTY FOUR\or
SIXTY FIVE\or SIXTY SIX \or SIXTY SEVEN \or \else
#1
%\@ctrerr
\fi
}
%    \end{macrocode}
%  \ExplSyntaxOn 
%
% \int_step_inline:nnnn {0} {101} {1030} 
%  {
%  (#1)~~\int_to_mixedcase_cardinal:nn {en} {#1}\\
%  }
%%    \int_to_mixedcase_cardinal:nn {en} {21} \\
%%    \int_to_uppercase_cardinal:nn {en} {22} \\
%%    \int_to_lowercase_cardinal:nn {en} {21}\\


%  \ExplSyntaxOff
% \iffalse
%</COUNTERS>
% \fi
\endinput

%%    \int_to_uppercase_cardinal:nn {en} {21} \\
%%    \int_to_lowercase_cardinal:nn {en} {21}\\
%%    \int_to_mixedcase_ordinal:nn {en} {21} \\
%%    \int_to_uppercase_ordinal:nn {en} {21} \\
%%    \int_to_lowercase_ordinal:nn {en} {21} \\
%%    \tens_strings_en:n {9}\\
%%    \int_use:N \int_current_mod \\
%%    \int_use:N \int_current_val
