% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-documentation - version 1.0 (2018-10-26)
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt

This work has the LPPL maintenance status `author-maintained'

This work consists of all files listed in README.md
%</readme>
%<*readmemd>
###The `phd-documentation` LaTeX2e package

The `phd` latex package and the class with the same name provide
convenient methods to create new styles for books, reports
and articles. It also loads the most commonly used packages 
and resolves conflicts.

This work consists of the file  `phd-documentation.dtx`,
and the derived files   `phd-documentation.ins`,  `phd-documentation.pdf`, 
and `phd-documentation.sty`.

###Installation

run
           phd-lua.bat on windows
           pdflatex phd.dtx
           makeindex -s gind.ist -g phd 

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

### Documentation

The package was written using the `doc` and `docscript` packages,
so that it is self documented in a literary programming style. 
The .pdf is a fat document, providing over fifty book styles (the
equivalent of classes) plus there is a lot of write-up on the inner
workings of TeX and LaTeX2e. However, you don't need to know much
to use it.

      \usepackage{phd}
      \input{style13}

All choices, are made via an extended key-value interface. 
Although not a compliment, it resembles CSS and the keys are a bit verbose but
attributes are easy to change and have a consistent and easy to remember interface.

To set or add a key we only use one command:

      \cxset{chapter name font-size = Huge,
             chapter number font-size = HUGE} 

### Future Development

This is still an experimental version, but I will retain the
interface in future releases. There is a large amount of
work still to be carried out to improve the template styles
provided, to test it more thoroughly and to add a number of
improvements in the special designs. At present I estimate
that I have completed about 70% of the work that needs
to be done.

__The package as it stands is not production stable.__ 


%</readmemd>
%
%<*TODO>
1.  Split package into three diffferent parts. One for listings settings. Use def, docCommands and
    indexing commands. Indexing commands remove symbols defs into sybpackage.
2.  Finish symbol management, both text and math. Math already 80% incorporated.
%</TODO>
%<*internal>
\fi
\def \nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- A package to beautify documents.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble
%\BaseDirectory{C:/users/admin/my documents/github/phd}
%\usedir{MWE}
\generate{\file{\jobname.sty}{%
  \from{\jobname.dtx}{DOCUM}%
   }%
  }%
\generate{%
  \file{\jobname-defaults.def}{%
  \from{phd-fontmanager.dtx}{DFLT}%
  \from{phd-colorpalette.dtx}{DFLT}% 
  \from{phd-lowersections.dtx}{DFLT}%
  \from{\jobname.dtx}{DFLT}}%
}
%\nopreamble\nopostamble
%</install>
%<install>\endbatchfile
%<*internal>
%\usedir{tex/latex/phd}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\generate{
	\file{README.txt}{\from{\jobname.dtx}{readme}}
  }
\generate{
  \file{\jobname.md}{\from{\jobname.dtx}{readmemd}}
}
\generate{
  \file{\jobname-todo.md}{\from{\jobname.dtx}{TODO}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>
%\listfiles
%gdef\@onlypreamble{} % TO BE REMOVED NEEDED FOR TUTS
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\RequirePackage[2017/04/15]{latexrelease}
\documentclass[book,oneside,10pt,a4paper]{phddoc}
\usepackage[bottom=2cm]{geometry}
\savegeometry{std}
% \usepackage[style=mla]{biblatex}
\usepackage{microtype}
\usepackage{phd}
\usepackage{phd-lowersections}
\usepackage{phd-runningheads}
\usepackage{phd-documentation}
\usepackage{phd-toc}
\pagestyle{headings}
%
\sethyperref
% add bib resource
\addbibresource{phd1.bib}% Syntax f
\cxset{palette unorange}
\begin{filecontents}{defaults-chapters}
%%    General Defaults for Chapters
\cxset{%    
    chapter title margin-top-width    =  0cm,
    chapter title margin-right-width  =  1cm,
    chapter title margin-bottom-width = 10pt,
    chapter title margin-left-width   = 0pt,
    chapter align                     = left,
    chapter title align               = left, %checked
    chapter name                      = hang,
    chapter format                    = hdr,
    chapter font-size                 = Huge,
    chapter font-weight               = bvar,
    chapter font-family               = sffamily,
    chapter font-shape                = upshape,
    chapter color                     = black,
    chapter number prefix             = ,
    chapter number suffix             = ,
    chapter numbering                 = arabic,
    chapter indent                    = 0pt,
    chapter beforeskip                = -3cm,
    chapter afterskip                 = 30pt,
    chapter afterindent               = off,
    chapter number after              = ,
    chapter arc                       = 0mm,
    chapter background-color          = bgsexy,
    chapter afterindent               = off,
    chapter grow left                 = 0mm,
    chapter grow right                = 0mm, 
    chapter rounded corners           = northeast,
    chapter shadow                    = fuzzy halo,
    chapter border-left-width         = 0pt,
    chapter border-right-width     = 0pt,
    chapter border-top-width       = 0pt,
    chapter border-bottom-width    = 0pt,
    chapter padding-left-width     = 0pt,
    chapter padding-right-width    = 10pt,
    chapter padding-top-width      = 10pt,
    chapter padding-bottom-width   = 10pt,
    chapter number color           = white,
    chapter label color            = white,    
    }
 \cxset{    
    chapter number font-size        = huge,
    chapter number font-weight      = bfseries,
    chapter number font-family      = sffamily,
    chapter number font-shape       = upshape,
    chapter number align            = Centering,
    }
\cxset{%    
     chapter title font-size        = Huge,
     chapter title font-weight      = bvar,
     chapter title font-family      = calligra,
     chapter title font-shape       = upshape,
     chapter title color            = black,
     }    
\end{filecontents}
\input{defaults-chapters}  


\definecolor{creamy}{HTML}{FDEBD7}
\cxset{chapter title color= creamy,
       chapter label color = creamy,
       chapter number color = creamy,
       chapter number font-size = Huge,
       subsection title color = creamy,
       chapter name = CHAPTER,
       chapter label case = upper,
       chapter number align=left,
       part format = traditional,
       part background-color=spot,
       part beforeskip                = -3cm,
       part afterskip                 = 30pt,
       subsection afterindent=off,
       section format=hang,
       }
       
\makeindex
\usepackage[cache=false]{minted} 
\usemintedstyle[latex]{borland}  
\setminted[html]{fontsize=\footnotesize,style=friendly}
\newfontfamily\lineara{Aegean.ttf}
\newfontfamily\cypriote{Aegean.ttf}
\begin{document}
\DEBUGOFF
\overfullrule0pt
\parindent1em
\coverpage{monkey}{Book Design Monographs}{Camel Press}{INDEXING}{AND DOCUMENTATION} 
\pagestyle{empty}
%\coverpage{habtoor-city}{Delay Claim}{HLS-DSE/JV}{HABTOOR CITY}{MEP CLAIM} 
\secondpage
\pagestyle{empty}
\clearpage

\tableofcontents

\pagestyle{empty}
\setcounter{secnumdepth}{6}
\parskip0pt plus.1ex minus.1ex
\mainmatter
\pagenumbering{arabic}
\pagestyle{headings} 
% Input the main descriptions and guide
\input{./sections/classes}
\input{./lua/pattern-matching}
\input{./lua/lpeg}
\input{./sections/symbols}
\input{./sections/docmacros}       

%\input{./styles/style01}
%\input{./styles/style02}
%\input{./styles/style03}
%\input{./styles/style04}
%\input{./styles/style05}
%\cxset{chapter format=block}
%\input{./sections/chapterdesign}
%\input{./sections/lowerlevelheadings}
\makeatletter
%\@debugtrue
\makeatother
%\input{./sections/indices}
%\input{./sections/unicodemath}
\DocInput{\jobname.dtx}
\nocite{*}
\printbibliography

\printindex 
 %
% 
\def\contentsname{Contents}
\end{document}
%</driver>
% \fi
% 
%  \CheckSum{0}
%  \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% 
%  \def\fileversion{v1.0}          
%  \def \filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
%
%
% 
% ^^A\maketitle
% 
% ^^A\frontmatter
%  ^^A\coverpage{./images/hine02.jpg}{Book Design }{Camel Press}{}{}
%  \newpage
% ^^A\secondpage
% \pagestyle{empty}
%
%
% 
%
%
% \pagestyle{headings}
% \raggedbottom
%  \OnlyDescription
%
%  ^^A\StopEventually{\printindex}
%
% \CodelineNumbered
% \pagestyle{headings}
% 
% 
% ^^A\part{IMPLEMENTATION AND FRIENDS}
% 
%
% \chapter{Code Implementation Objectives and Strategy}
% \parindent1em
% \epigraph{
% ``Lord Campbell [John Campbell, 1st Baron Campbell, 1779-1861] proposed that any author who published a book without an index should be deprived of the benefits of the Copyright Act; and the Hon. Horace Binney, LL.D. [1780-1875], a distinguished American lawyer, held the same views, and would have condemned the culprit to the same punishment.''}
%{-- H[enry] B[enjamin] Wheatley, How To Make An Index
%(New York: A. C. Armstrong \& Son, 1902), 82}
%
% This package aims at providing authors with a set of tools and settings
% that can improve the typesetting of documentation and especially indices.
% 
% For the normal author there are both mark-up related macros, as well as a set
% of settings for indices.
%
% My main motivation for developing this package was to group all the special
% documentation macros that I have used in developing the \pkg{phd} package. I also saw
% the need to hook up these settings with the concept of color palettes as 
% described in the \pkg{phd-colorpalette} package. This enables the integration
% of full document templates.
%
% \section{Requirements Specification}
% \begin{enumerate}
% \item To provide a declarative interface to enable users to modify documentation
%       and index  entries by setting keys, rather than writing macros.  It is suggested
%       that the author has a single style sheet that he loads to decorate a full
%       document such as an article or a book or a document that describes code.
% \item Setting of parameters will generally be with one command |\cxset|
% \item Provide a consistent `look and feel' for all code displays.
% \item Support minted and listings.
% \item Provide a set of environments and commands for documenting symbols and fonts.
% \item Seamless integration with  doc type classes. As a minimal to support |ltxdoc| and 
%          \docClass{phddoc}. The latter is provided as part of the |phd| budle.
% \item To provide a number of templates that cover most of the typical use case.
% \item To provide an easy  plug-in architecture for extensions.
% \item Provide a detailed user manual.
% \end{enumerate}
% 
% The development of this package predates |tcolorbox| and |minted|. As they are
%  both excellent packages, I have abandoned some of my code and incorporated
% code from |tcolorbox| extensively. 
%
% \section{Terminology}
%
%  \begin{description}
%  \item [document] Any written item, as a book, article, or letter, especially 
%                  of a factual or informative nature.
%  \item [heading] A division of a document or document series. For a normal
%        book headings are chapters, sections etc. However we allow for
%        specifying a more complex document divided into books, volumes
%        parts etc. For example the Bible has Books, chapters and verses,
%        where a legal document might require divisions such as clauses.
%        In general these divisions are numbered. These document divisions
%        are stored in the comma list \refCom{phd_book_divisions_clist}.
%  \item [head] A typeset heading, such as chapter head, or section head.
%        This can include a counter, label and title for example, 
%        \emph{Chapter 1 Introduction}.
%  \item [dom] This is a programming interface that provides a structured
%        representation of the document (a tree) and it defines a way
%        that the structure can be accessed. Although \latexe does not
%        offer a standard way to build such a tree (mainly because
%        \tex does not require the marking of paragraphs, it is 
%        useful to think of the document as a tree structure. We also
%        allow for a semi-automated way to build such a tree (with the 
%        exception that paragraphs are not included).
% \item [element] A part of the document tree that can be styled on
%       its own. For example the chapter label, or the section number.
%
% \end{description}
%
% \section{Users}
%  We classify users according to the \LaTeX3 terminology as a) programmers b) template designers
%  and c) authors.
% \subsection{Author}
%  We assume that the author has an exising template which she is using but might want to do
%  some minor modifications, for example use an italic shape for the font of the mark, but an 
%  upright font for the page numbers. 
%
%
% We follow the idea of representing the basic elements of documents
% as elements, each one having a parent in order to specify
% the element we need to style as accurate as possible. One can think of
% this approach being congruent with objects in other languages.
% As a matter fact nothing stops us from defining a key value
% interface as shown below.
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{| 
%~~~~~~~~\textit{header.even.mark.font.size}   = |Large,|
%~~~~~~~~\textit{header.even.mark.font.family} = |serif,|
%~~~~~|}|
%}  
%
% This would pehaps make it easier for the template designer, but I have rejected
% the idea as my aim is to make it easy for the author, who can search the template
% and just enter a couple of new proerty values.
%
% \subsection{Template designer}
% \pagestyle{headings}
% The template designer in the example above would have selected the format style
% from a number of predefined formats (templates) or would have created a style
% called \textit{apa} from an existing template and modified it using declarative
% key style.
%
% \subsection{The programmer}
%
% The programmer in the example above could have created the basic format
% \textit{apa} by using both declarative as well as defining or using existing
% macros. To the programmer we offer an extension mechanism, where the contents
% of a |ps@| command are defined. For example the programmer can define a new
% style using \tikzname, but without having to worry about defining full |ps@|
% and their interface.
%
%
% \section{Acknowledgements}
%
% This package couldn't have been possible if it was not for the documentation
% section of tcolorbox. I have liberally taken ideas and code from Dr. Thomas F. Sturm's 
% package, which in turn draws strongly from the |PGF| manual. I am grateful to both.
% 
% \iffalse
%<*DOCUM>
% \fi
%  
% \section{Preliminaries}
%
% We declare that we use \latexe and name the package. The code has been
% moved to the latest version of \latexe to take advantage of more allocations.
% Package works well with LuaLaTeX.\tcbdocmarginnote{7/8/2017}
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[2017/04/15]%
\ProvidesFile{phd-documentation}[2017/04/15 v1.0 less preamble (YL)]%
%    \end{macrocode}
%
% We also need the \pkg{refcount}. 
%
% \section{tcolorbox}
% We load \pkg{tcolorbox} with options theorems, skins, documentation etc
% for internal and external use.
%
% We also provide an interface, between the \pkg{tcolorbox} documentation
% keys and our own.
% 
% The indexing keys are still to be sorted out with other sections of the
% documentation, but they seem to be working for the moment.
% 
% 
%    \begin{macrocode}
\newcommand*{\verbatimfont}{\ttfamily}%

\let\displayverbfont\ttfamily

\renewcommand*{\verbatim@font}{\verbatimfamily}

%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage[theorems, skins, documentation,
                breakable,listings]{tcolorbox}
%                
                \tcbset{index format=pgfchapter,
                        index actual={=},
                        index level = {>},
                        index quote = {!},
                        index german settings,
                        color hyperlink = thelinkcolor ,
                        color definition =thelinkcolor,
                   }
\tcbset{halostyle/.style={fuzzy halo=2mm with magenta!5}}                   

           
\def\tcb@Print@Com#1{\textcolor{\kvtcb@col@command}{\ttbf\char`\\ \detokenize{#1}}}
%    \end{macrocode}                
%
\cxset {doc command color/.code = \tcbset{color command = #1}}
\cxset {doc command color= thecmdcolor}
%
%    \begin{macrocode}
\lstdefinelanguage{extras}{morekeywords={%
      poemtitle, poemtoc, versewidth, 
      vin, poemlines,poemtitlefont, 
      ProvidesClass,IfFileExists,
      RequirePackage,ifthenelse,chapter,
      includegraphics, newarray,readarray,of
}}
\lstloadlanguages{[LaTeX]TeX, [primitive]TeX, extras}
%    \end{macrocode}
%
% Note the |gobble=1| option. We use this to make the colorboxes
% with code not to show the `\%` sign in this documentation.
% Ideally you should fork the code below and adapt it to 
% your own needs.
%
% Also note that this is the default that is to be used in
% \pkg{tcolorbox} commands.
% 
% \begin{docEnvironment}[doclang/environment content=text]{scriptexample}{\oarg{options}}
% Display box for examples of various languages and scripts.
%    \begin{macrocode}
\newtcolorbox{scriptexample}[2][]{colback=thecodebackground,
boxrule=0pt,toprule=0pt,colframe=white,#1}
%    \end{macrocode}
% \end{docEnvironment}
% \begin{scriptexample}[title=Script Example,]{Cypriot Syllabary}
%\unicodetable{cypriote}{"10800,"10810,"10820,"10830}
%\end{scriptexample}
%  \captionof{figure}{Example of using the \docAuxEnvironment*{scriptexample} environment. The box shows the unicode points for the Cypriote script.}
%    \begin{macrocode}
\newtcolorbox{commands}[2][]{colback=thecodebackground,
boxrule=0pt,toprule=0pt,colframe=white}
%    \end{macrocode}
%
% Set the \pkg{listings} defaults for TeX and LaTeX. All colours are harmonized with the definitions
% od the color palette, as set in the \pkg{phd-colorpalette}.
%    \begin{macrocode}
\lstset{language={[LaTeX]TeX},
       escapeinside={{(*@}{@*)}}, 
       numbers=left, 
       gobble=0,
       stepnumber=1,
       numbersep=5pt, 
       numberstyle={\footnotesize\color{thegray}},
       breaklines=false,
       framesep=5pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
       stringstyle={\color{orange}\footnotesize},
       commentstyle=\color{black},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       showspaces=false, 
       xleftmargin=10pt,
       xrightmargin=0pt,
       aboveskip=3pt plus1pt minus1pt, 
       belowskip=7pt plus1pt minus1pt,  
       backgroundcolor=\color{theshade},
}
%    \end{macrocode}
% 
% We predefine some listings styles to use with color palettes. First we define three styles for TeX and LaTeX, as well
% as three environements.\index{listings styles>simple}\docAuxListingsStyle{simple}
%    \begin{macrocode}
\lstdefinestyle{simple}{%
       escapeinside={{(*@}{@*)}}, 
       numbers=left, 
       gobble=0,
       stepnumber=1,
       numbersep=5pt, 
       numberstyle={\footnotesize\color{gray}},
       breaklines=false,
       framesep=5pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
       stringstyle={\color{thestringstyle}\footnotesize},
       commentstyle=\color{thecommentstyle},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       showspaces=false, 
       xleftmargin=10pt,
       xrightmargin=0pt,
       aboveskip=3pt plus1pt minus1pt, 
       belowskip=3pt plus1pt minus1pt,  
       backgroundcolor=\color{thecodebackground},
       showlines=true,
}

\lstdefinestyle{singleline}{%
       escapeinside={{(*@}{@*)}}, 
       numbers=left, 
       gobble=0,
       stepnumber=1,
       numbersep=5pt, 
       numberstyle={\footnotesize\color{gray}},
       breaklines=false,
       framesep=5pt,
       basicstyle=\small\ttfamily,
       showstringspaces=false,
       stringstyle={\color{thestringstyle}\footnotesize},
       commentstyle=\color{thecommentstyle},
       rulecolor=\color{theshade},
       breakatwhitespace=true,
       showspaces=false, 
       xleftmargin=0pt,
       xrightmargin=0pt,
       aboveskip=3pt plus1pt minus1pt, 
       belowskip=3pt plus1pt minus1pt,  
       backgroundcolor=\color{thecodebackground},
       showlines=true,
       numbers=none,
}


% prints the style
\def\phd@print@LstStyle#1{\textcolor{\kvtcb@col@counter}{\tcb@doc@bfseries\tcb@scantokens{#1}}}

\DeclareDocumentCommand\docAuxListingsStyle{sm}{%
  \phd@print@LstStyle{#2}%
  \IfBooleanTF{#1}{}{\index{\phd@text@lststyles\idx@level#2}}%
}
%    \end{macrocode}
%
%	An example of |\docAuxListingsStyle|   \docAuxListingsStyle{simplex}.
%	
% 	The environment |\begin{TeX}..\end{TeX}| provides a listings environment
% 	for typesetting, either TeX or LaTeX code.
% 	This environment always starts the number
%    \begin{macrocode}
\lstnewenvironment{teX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      style=simple,#1
}}
{}
%    \end{macrocode}
% \begin{docEnvironment}{sverbatim}{\oarg{options}}
% A listings environment for single line verbatim typesetting. It uses the single line listings style.\docAuxListingsStyle{singleline}. It typesets with smaller values  for |aboveskip| and |belowskip|.
%    \begin{macrocode}
\lstnewenvironment{sverbatim}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      style=singleline,#1
}}
{}
%    \end{macrocode}
% \end{docEnvironment}
%
% The \docAuxListingsStyle{extended} is similar to the rest, except it is numbered continuouly.
%    \begin{macrocode}
\lstdefinestyle{extended}{%
      breaklines=true,
      framesep=5pt,
      basicstyle=\verbatimfamily,
      showstringspaces=false,
      keywordstyle=\small\verbatimfamily,
      stringstyle=\color{thestringstyle},
      commentstyle=\color{thecommentstyle},
      rulecolor=\color{gray!10},
      breakatwhitespace=true,
      xleftmargin=10pt,
      xrightmargin=0pt,
      aboveskip=\medskipamount,
      belowskip=\medskipamount,
      backgroundcolor=\color{thecodebackground}, 
}
%    \end{macrocode}
% \begin{docEnvironment}[doclang/environment content=code]{teXX}{\oarg{listings options}}
%   Different listings environment.
% 
%    \begin{macrocode}
\lstnewenvironment{teXX}[1][]
  {\lstset{language=[LaTeX]TeX}\lstset{%
      style=extended, #1
}}
{}
%    \end{macrocode}
% \end{docEnvironment}
%
%
% \begin{docCommand}{continuelinenumber}{}
%   Continues code numbers from previous block
% \end{docCommand} 
%    \begin{macrocode}
\newcommand\continuelinenumber{\lstset{firstnumber=last}}
%    \end{macrocode}
% {startnumberat} 
%  The macro \cs{continueLineNumber}, provides a command
%  to start the next block of code with the code numbers continuing.
%  This requires the |listings| which is already included.
%  
%    \begin{macrocode}
% \begin{docCoomand}{startlineat}{\meta{line number}}
%    Starts a listings display with \metal{line number}.
% \end{docCommand}
% Always I forget this so I created some aliases
\DeclareDocumentCommand{\startlineat}{ m }{\lstset{firstnumber=#1}}
%    \end{macrocode}
% \begin{docCommand}{number}{\meta{line number}}
%  An alias for \docAuxCommand{startlineat}.
% \end{docCommand}
%    \begin{macrocode}
\let\numberlineat\startlineat
\let\startnumberat\numberlineat
%    \end{macrocode}
% 
% 
%
%    \begin{macrocode}
\newcommand\emphasis[2][black!80]{%
   \lstset{%
     emph={write, writeln,#2},
     escapeinside={(*@}{@*)},
     emphstyle={\verbatimfont%
                \bfseries%
                \textcolor{#1}%
                },
   }%
}
%    \end{macrocode}
% \begin{docEnvironment}{teXXX}{\oarg{options}}
% Environment for typestting long tracks of code with full highlighting of keywords, uses the \docAuxListingsStyle{highlite} style.
% \end{docEnvironment}
%    \begin{macrocode}
\lstdefinestyle{highlite}{%
      alsolanguage=makeindex,
      alsolanguage=BibTeX,
      emph={cs, use,new,seq,map,inline,eq,gincr,incr,IfNoValueF,%
      if,If,exist,protect,nopar,gset,%
      set,undefine,define,add,gadd,remove,div,newcounter%
      round,truncate,max,min,mod,gzero,int,%
      zero,newcount,protected,msg,error,DeclareDocumentCommand},
      emphstyle=\ttfamily\color{thered},
      firstnumber=last,
      stepnumber=1,
      escapeinside={{(*@}{@*)}},
      breaklines=true,
      framesep=5pt,
      basicstyle= \ttfamily,
      showstringspaces=false,
      keywordstyle=\ttfamily\color{thered},%\color{primary},
      keywordstyle=[2]\ttfamily\color{black},
      stringstyle=\color{thestringstyle},
      commentstyle=\color{thecommentstyle},
      rulecolor=\color{gray!10},
      breakatwhitespace=true,
      prebreak={\Righttorque},
      postbreak={\space\Lefttorque},
      showspaces=false,  % shows spacing symbol
      upquote=true,
      xleftmargin=10pt,
      xrightmargin=0pt,
      aboveskip=\medskipamount,
      belowskip=\medskipamount,
      backgroundcolor=,
}

\lstnewenvironment{teXXX}[1][]
  {\lstset{language=[LaTeX]TeX}%
    \lstset{%
      style=highlite,  #1
}}
{}
\lstnewenvironment{phdverbatim}[1][]
  {\lstset{language=[LaTeX]TeX}%
    \lstset{%
      emph={cs, use,new,seq,map,inline,eq,gincr,incr,IfNoValueF,%
      if,If,exist,protect,nopar,gset,%
      set,undefine,define,add,gadd,remove,div,%
      round,truncate,max,min,mod,gzero,int,%
      zero,newcount,protected,msg,error,DeclareDocumentCommand},
      emphstyle=\verbatimfont\bfseries\color{black!80},
      numbers=none,
     % stepnumber=1,
      escapeinside={{(*@}{@*)}},
      breaklines=false,
      framesep=5pt,
      basicstyle= {\small\ttfamily},
      showstringspaces=false,
      keywordstyle=\ttfamily\color{thekeywordstyle},
      stringstyle=\color{black!50},
      commentstyle=\color{black!50},
	rulecolor=\color{gray!10},
      breakatwhitespace=true,
      showspaces=false,  % shows spacing symbol
	xleftmargin=15pt,
	xrightmargin=5pt,
	%  aboveskip=0pt, % compact the code looks ugly in type
	% belowskip=0pt,  % user responsible to insert any skips
	aboveskip=\medskipamount,
	belowskip=\medskipamount,
       backgroundcolor=,
       #1
}}
{}
%    \end{macrocode}
% The following have been taken from| https://github.com/cgnieder/cnltx/blob/master/cnltx-listings.sty|
%    \begin{macrocode}
\lstdefinelanguage{makeindex}{
  morekeywords = {
    actual,           % @
    arg_open,         % {
    arg_close,        % }
    encap,            % |
    escape,           % \\
    keyword,          % \\indexentry
    level,            % !
    page_compositor,  % -
    quote,            % "
    range_open,       % (
    range_close,      % )
    preamble,         % \\begin{theindex} \n
    postamble,        % \n\n \end{theindex} \n
    setpage_prefix,   % \n \\setcounter{page}{
    setpage_suffix,   % } \n
    group_skip,       % \n\n \\indexspace \n
    headings_flag,    % 0
    heading_prefix,   %
    heading_suffix,   %
    symhead_positive, % Symbols
    symhead_negative, % symbols
    numhead_positive, % Numbers
    numhead_negative, % numbers
    item_0,           % \n \\item
    item_1,           % \n \\subitem
    item_2,           % \n \\subsubitem
    item_01,          % \n \\subitem
    item_x1,          % \n \\subitem
    item_12,          % \n \\subsubitem
    item_x2,          % \n \\subsubitem
    delim_0,          % , 
    delim_1,          % , 
    delim_2,          % , 
    delim_n,          % , 
    delim_r,          % --
    delim_t,          %
    suffix_2p,        %
    suffix_3p,        %
    suffix_mp,        %
    encap_prefix,     % \\
    encap_infix,      % {
    encap-suffix,     % }
    line_max,         % 72
    indent_space,     % \t\t
    indent_length     % 16
  } ,
  morestring = [b]{"} ,
  morecomment = [l]{\%} ,
  sensitive = true
}
% --------------------------------------------------------------------------
% a listings language BibTeX:
\lstdefinelanguage{BibTeX}{
  % entry types:
  morekeywords = {
    % regular types:
    @article,
    @book,@mvbook,@inbook,@bookinbook,@suppbook,@booklet,
    @collection,@mvcollection,@incollection,@suppcollection,
    @manual,
    @misc,
    @online,
    @patent,
    @periodical,
    @suppperiodical,
    @proceedings,@mvproceedings,@inproceedings,
    @reference,@mvreference,@inreference,
    @report,
    @set,
    @thesis,
    @unpublished,
    @xdata,
    @customa,@customb,@customc,@customd,@custome,@customf,
    % type aliases:
    @conference,
    @electronic,
    @mastersthesis,
    @phdthesis,
    @techreport,
    @www,
    % unsupported types:
    @artwork,
    @audiobibnote,
    @commentary,
    @image,
    @jurisdiction,
    @legislation,
    @legal,
    @letter,
    @movie,
    @music
    @performance,
    @review,
    @software,
    @standard,
    @video,
    % cnltx types:
    @bundle,
    @class,
    @package,
  } ,
  % entry fields:
  morekeywords = [2]{
    % data fields:
    abstract,
    addendum,
    afterword,
    annotation,
    annotator,
    author,
    authortype,
    bookauthor,
    bookpagination,
    booksubtitle,
    booktitle,
    booktitleaddon,
    chapter,
    commentator,
    date,
    doi,
    edition,
    editor,editora,editorb,editorc,
    editortype,
    editoratype,editorbtype,editorctype,
    eid,
    entrysubtype,
    eprint,
    eprintclass,
    eprinttype,
    eventdate,
    eventtitle,
    eventtitleaddon,
    file,
    foreword,
    hvarer,
    howpublished,
    indextitle,
    institution,
    introduction,
    isan,
    isbn,
    ismn,
    isrn,
    issn,
    issue,
    issuesubtitle,
    issuetitle,
    iswc,
    journalsubtitle,
    journaltitle,
    label,
    language,
    library,
    location,
    mainsubtitle,
    maintitle,
    maintitleaddon,
    month,
    nameaddon,
    note,
    number,
    organization,
    origdate,
    origlanguage,
    origlocation,
    origpublisher,
    origtitle,
    pages,
    pagetotal,
    pagination,
    part,
    publisher,
    pubstate,
    reprinttitle,
    series,
    shortauthor,
    shorteditor,
    shorthand,
    shorthandintro,
    shortjournal,
    shortseries,
    shorttitle,
    subtitle,
    title,
    titleaddon,
    translator,
    type,
    url,
    urldate,
    venue,
    version,
    volume,
    volumes,
    year,
    % special fields:
    crossref,
    entryset,
    execute,
    gender,
    hyphenation,
    ids,
    indexsorttitle,
    keywords,
    options,
    presort,
    related,
    relatedoptions,
    relatedtype,
    relatedstring,
    sortkey,
    sortname,
    sortshorthand,
    sorttitle,
    sortyear,
    xdata,
    xref,
    % custom fields:
    namea,nameb,namec,
    nameatype,namebtype,namectype,
    lista,listb,listc,listd,liste,listf,
    usera,userb,userc,userd,usere,userf,
    verba,verbb,verbc,
    % field aliases:
    address,
    annote,
    archiveprefix,
    journal,
    key,
    pdf,
    primaryclass,
    school,
    % cnltx fields:
    maintainer
  } ,
  morestring = [b]{"} ,
  morecomment = [l]{\%} ,
  sensitive = false
}

% listings style for source code from igniter
\lstdefinestyle{complex}{
  basicstyle       =  \small\ttfamily,  %{\sourceformat},
  numbers          = left,
  numberstyle      = \tiny,
  xleftmargin      = 1em,
  numbersep        = .75em,
  gobble           = \@gobble ,
  columns          = fullflexible,
  literate         =
    {ä}{{\"a}}{1}
    {ö}{{\"o}}{1}
    {ü}{{\"u}}{1}
    {Ä}{{\"A}}{1}
    {Ö}{{\"O}}{1}
    {Ü}{{\"U}}{1}
    {ß}{{\ss}}{1}
    {`}{\`{}}{1}
    {'}{\textquotesingle}{1} ,
  breaklines       = true,
  keepspaces       = true,
  breakindent      = 1em,
  commentstyle     = \color{thecomment},
  keywordstyle     = \color{thecs},
  deletetexcs      =
    {
      a,o,u,A,O,U,
      begin,
      center,
      description,document,
      end,enumerate,
      equation,eqnarray,
      figure,flushleft,flushright,
      itemize,list,
      otherlanguage,
      table,tabu,tabular
    },
  deletekeywords   =
    {
      a,o,u,A,O,U,
      begin,
      center,
      description,document,
      end,enumerate,
      equation,eqnarray,
      figure,flushleft,flushright,
      itemize,list,
      otherlanguage,
      table,tabu,tabular
    },
  % \begin, \end:
  texcsstyle       = [2]\color{red}, %add color begin end
  index            = [2][texcs2],
  indexstyle       = [2]\@gobble,
  moretexcs        = [2]{begin,end},
  % control sequences that'll be indexed:
  texcsstyle       = [3]\color{cs},
  index              = [3][texcs3],
  indexstyle       = [3]\indexcs,
  % control sequences that won't be indexed:
  texcsstyle       = [4]\color{thecs},
  index            = [4][texcs4],
  indexstyle       = [4]\@gobble,
  % added environments that'll be indexed:
  texcsstyle       = [5]\color{env},
  index            = [5][texcs5],
  %indexstyle       = [5]\indexenv,   UNCOMMENT LATER
  % environments that won't be indexed:
  texcsstyle       = [6]\color{env},
  index            = [6][texcs6],
  indexstyle       = [6]\@gobble,
  moredelim        = *[s][\color{green}]{$}{$} %add color the math
}
%    \end{macrocode}
% 
%
%
%    \begin{macrocode}
\lstnewenvironment{lualisting}[1][]
{\lstset{language=[LaTeX]TeX,
  basicstyle           = \ttfamily,
  showstringspaces     = false,
  upquote              = true,
  keywordstyle         =\color{blue},
  commentstyle         =\color{black!50},
  stringstyle          =\color{black!80},
  backgroundcolor      =\color{white},
  xleftmargin          =15pt,
  xrightmargin         =5pt,
  aboveskip            =\medskipamount,
  belowskip	            =\medskipamount,
  #1}}
{}
%    \end{macrocode}
% \section{LaTeX code demo environments}
%
%	To demonstrate \latex code it is sometimes desirable to have the code
%	be executed. This was pioneered in a number of packages. One of
%	the better packages to do so is \pkg{tcolorbox}. We use it to define
%	a special environment.
%
% \begin{docEnvironment}{texexample}{ \marg{title} \marg{label for referencing} } 
% The environment |texexample| will list the code
%	using the \pkgname{listings} package, so we can have a nice box and shows the
%	output at the bottom section.
% \end{docEnvironment}
%	
%	First we define a new counter which resets at every chapter. If |c@chapter|
%	is not defined we reset it based on sections.
%
% \begin{enumerate}
%	\item [\#1] Title of the example
%	\item [\#2] label for referencing
% \end{enumerate}
% 
%    \begin{macrocode}
  \ifx\c@chapter\@undefined
    \newcounter{texexp}[section]
    \@addtoreset{c@texexp}{c@section}
  \else
    \newcounter{texexp}[chapter]
    \@addtoreset{c@texexp}{c@chapter}
  \fi 
%    \end{macrocode}
%
%	
%    \begin{macrocode}
%\tcbset{listing utf8=latin1}% optional; ’latin1’ is the default.
\def\dcircle#1{\ding{\numexpr181 + #1\relax}}
\def\thetexexp{\@arabic\c@section.\arabic{texexp}}
%    \end{macrocode}
%    \begin{macrocode}    
\tcbset{texexp/.style={% 
    fonttitle=\small\ttfamily, 
    fontupper=\small, 
    fontlower=\small,
    coltitle=black,
    colback = thecodebackground,% background
    colframe=thecodebackground, 
   % process code={\def\dcircle##1{\ding{\numexpr181 + ##1}}},
      %colupper=spot!,
   },
   listing options = {%
     keywordstyle=\color{thekeywordstyle},
     belowskip=0pt, 
     escapeinside={(*@}{@*)},%
     breaklines=true,%
     backgroundcolor=\color{thecodebackground},%
     %firstnumber=last,%
     stepnumber=1,%
     upquote=true,%
     alsoletter={_,:},%
     commentstyle=\color{thecommentstyle},%
     emph={cs,new,seq,map,inline,eq,gincr,incr,IfNoValueF,if,%
            If,exist,protect,nopar,gset,%
            set,undefine,define,add,gadd,remove,div,%
            round,truncate,max,min,mod,gzero,int,exp,put,left,args,%
            zero,newcount,protected,msg,error,%
            eval,to,arabic,alph,Alph,roman,Roman,dim%
            DeclareDocumentCommand,%
            NewDocumentCommand,%
            RenewDocumentCommand,includegraphics,
            function,local,return,break,
         },%
           %
          % For LaTeX3 we need to add these, note % is important
          % dn’t miss, at the end...
          moretexcs    = {DeclareDocumentCommand,IfBooleanTF,tex_def:D,%
          cs_new:Nn,cs_new:Npn,cs_new:cn,cs_set_nopar:Npn,token_to_meaning:N,%
          %primitives
          cs:w,cs_end:,tex_underline,group_begin:, group_end:,%
          %coffins
          NewCoffin,JoinCoffins,SetHorizontalCoffin,TypesetCoffin,%
          %properties
          prop_new:N,prop_new:c,prop_put:Nnn,%
          %boolean
          bool_new:N,bool_set_true:N,bool_set_false:N,%
          bool_if:NTF,%
          hbox_to_wd:nn,%
          IfNoValueTF,%
          %token lists
          tl_new:N,tl_set:Nn,tl_concat:NNN,%
          token_to_meaning:N,%
          seq_pop_left:NN,%
          %
          %int
          int_if_exist:cT,int_use:c,int_new:c,int_new:N,int_eval:n,%
          int_add,int_use,int_to_roman,%
          %boxes
          box_new:c,hbox_set:cn,box_use:c,vbox_set:cn,box_move_down:nn,%
          %string
          str_if_eq_x:nnTF,%
          tl_tail:n,%
          DeclareObjectType,%
          DeclareTemplateInterface,%
          DeclareTemplateCode,%
          DeclareInstance,UseInstance,AssignTemplateKeys%
          keys_set,keys_define,%      
          },%
         emphstyle=\verbatimfont\bfseries\color{theemphasiscolor},%
          %
   },%close listings options
      % added for better control
      arc=0pt,  
      outer arc=0pt,
      example1/.code 2 args={\refstepcounter{texexp}{\ifx#2\empty\else\label{#2}\fi}}%Reference
     \pgfkeysalso{texexp, enhanced, breakable, title={Example \thetexexp\ #1}%
 },
}

\def\emphasize#1{%
\tcbset{texexp/.style={% 
    fonttitle=\small\ttfamily, 
    fontupper=\small, 
    fontlower=\small,
    coltitle=black,
    colback = thecodebackground,% background
    colframe=thecodebackground, 
    %process code={\def\dcircle##1{\ding{\numexpr181 + ##1}}},
      %colupper=spot!,
   },
   listing options = {%
     keywordstyle=\color{thekeywordstyle},
     belowskip=0pt, 
     escapeinside={(*@}{@*)},%
     breaklines=true,%
     backgroundcolor=\color{thecodebackground},%
     %firstnumber=last,%
     stepnumber=1,%
     upquote=true,%
     alsoletter={_,:},%
     commentstyle=\color{thecommentstyle},%
     emph={cs,new,seq,map,inline,eq,gincr,incr,IfNoValueF,if,%
            If,exist,protect,nopar,gset,%
            set,undefine,define,add,gadd,remove,div,%
            round,truncate,max,min,mod,gzero,int,exp,put,left,args,%
            zero,newcount,protected,msg,error,%
            eval,to,arabic,alph,Alph,roman,Roman,dim%
            DeclareDocumentCommand,%
            NewDocumentCommand,%
            RenewDocumentCommand,includegraphics,
            function,local,return,#1,
         },%
           %
          % For LaTeX3 we need to add these, note % is important
          % dn’t miss, at the end...
     moretexcs    = {DeclareDocumentCommand,IfBooleanTF,tex_def:D,%
          cs_new:Nn,cs_new:Npn,cs_new:cn,cs_set_nopar:Npn,token_to_meaning:N,%
          %primitives
          cs:w,cs_end:,tex_underline,group_begin:, group_end:,%
          %coffins
          NewCoffin,JoinCoffins,SetHorizontalCoffin,TypesetCoffin,%
          %properties
          prop_new:N,prop_new:c,prop_put:Nnn,%
          %boolean
          bool_new:N,bool_set_true:N,bool_set_false:N,%
          bool_if:NTF,%
          hbox_to_wd:nn,%
          IfNoValueTF,%
          %token lists
          tl_new:N,tl_set:Nn,tl_concat:NNN,%
          token_to_meaning:N,%
          seq_pop_left:NN,%
          %
          %int
          int_if_exist:cT,int_use:c,int_new:c,int_new:N,int_eval:n,%
          int_add,int_use,int_to_roman,%
          %boxes
          box_new:c,hbox_set:cn,box_use:c,vbox_set:cn,box_move_down:nn,%
          %string
          str_if_eq_x:nnTF,%
          tl_tail:n,%
          DeclareObjectType,%
          DeclareTemplateInterface,%
          DeclareTemplateCode,%
          DeclareInstance,UseInstance,AssignTemplateKeys%
          keys_set,keys_define,%      
          },%
     emphstyle=\verbatimfont\bfseries\color{theemphasiscolor},%
          %
   },%close listings options
      % added for better control
      arc=0pt,  
      outer arc=0pt,
  }%close style
}%close command
%
\newenvironment{texexp}[1]{\tcblisting{texexp,#1}}{\endtcblisting}

\newenvironment{example1}[3][]{\tcblisting{example1={#2}{#3},#1}}%
    {\endtcblisting}
%
%    \end{macrocode}
%    
%    \begin{docEnvironment}{texexample} { \oarg{} \marg{Title} \meta{label} }
%      
%    \end{docEnvironment}
%    \begin{macrocode}
\newenvironment{texexample}[3][]{\noindent\tcblisting{example1={#2}{#3},#1}}%
    {\endtcblisting }
\newenvironment{texcode}[3][listing only]{\noindent\tcblisting{example1={#2}{#3},#1}}%
    {\endtcblisting }    
%    
% Need to fix
\let\luaexample\texexample        
\let\endluaexample\endtexexample    
%    \end{macrocode}
%     
%    \begin{macrocode}
%\tcbset{luacode/.style={%
%      fonttitle=\small\ttfamily, 
%      fontupper=\small, 
%      fontlower=\small,
%      coltitle=black,
%      colback = thecodebackground,% background
%      colframe=thecodebackground, 
%      %colupper=spot!,
%      },
%      listing options = {
%          language={[5.2]Lua},
%          belowskip=0pt, 
%          escapeinside={(*@}{@*)},%
%          breaklines=true,%
%          backgroundcolor=\color{thecodebackground},%
%          firstnumber=last,%
%          stepnumber=1,%
%          upquote=true,%
%          alsoletter={_,:},%
%          commentstyle=\bfseries\color{black!90},%
%          stringstyle = \color{black!90},
%          emphstyle=\verbatimfont\bfseries\color{black!80},%
%          keywordstyle= \bfseries\color{black!80},%
%          },
%      % added for better control
%      arc=0pt,  
%      outer arc=0pt,
%      luaexp1/.code 2 args={\refstepcounter{texexp}\label{#2}}%Reference
%     \pgfkeysalso{luacode, enhanced, breakable, title={Example \thetexexp\ #1}},
%}
%\newenvironment{luaexp1}[1]{\tcblisting{luacode,#1}}{\endtcblisting}
%
%\newenvironment{luaexample}[3][]{\noindent\tcblisting{luaexp1={#2}{#3},#1}}%
%    {\endtcblisting}
%%
%    \end{macrocode} 
%
% The following demonstrates the usage.
%
%\begin{texexample}[]{atest}{This is a comment?}
% \def\demomacro{Hello World!}
%\end{texexample}
%
% 	\begin{example}{A Test}{test}{This is a comment?}
%	  \def\demomacro{Hello World!}
%	\end{example}
%
% \section{makeidx}    
% We check that \docAuxCommand{printindex} has been defined. If the test is positive then an indexing package has been loaded, otherwise we load the \pkgname{makeidx}\footcite{makeidx}.
%  
%    \begin{macrocode}
\ExplSyntaxOn
\cs_if_exist:cTF {printindex}
  { }
  {
    \RequirePackage{makeidx}[2000/03/29]
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% \section{Refcount}
%
%References are not numbers, however they often store numerical data
%such as section or page numbers. \cs{ref} or \cs{pageref} cannot be used for
%counter assignments or calculations because they are not expandable, generate
%warnings, or can even be links. The package provides expandable macros
%to extract the data from references. Packages \pkgname{hyperref}, \pkgname{nameref}\footfullcite{nameref}, 
% \pkgname{titleref}\footfullcite{}, and
% \pkgname{babel} are supported.
%    \begin{macrocode}  
\RequirePackage{refcount}[2011/10/16]
%    \end{macrocode}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \cvaref#1{\textcolor{\phdkv@col@command}{#1}}
\cs_set:Npn \colOpt#1{\textcolor{\phdkv@col@opt}{#1}}
\ExplSyntaxOff
\lstdefinestyle{tcbdocumentation}{language={[LaTeX]TeX},
    aboveskip={0\p@ \@plus 6\p@},
    belowskip={0\p@ \@plus 6\p@},
    columns=fullflexible,
    keepspaces=true,
    breaklines=true,
    prebreak={\Righttorque},
    postbreak={\space\Lefttorque},
    breakatwhitespace=true,
    basicstyle=\ttfamily\footnotesize,
    extendedchars=true,
    nolol,
    inputencoding = \phdkv@listingencoding}
%    \end{macrocode}
%
%  \section{Documenting Macros}
% The following macros are taken from \docClass{ltxdoc} and modified accordingly.
%
%  \begin{docEnvironment}[doclang/environment content=command description]{docCommand}{\oarg{options}\marg{name}\marg{parameters}}
% \end{docEnvironment}
%
%    \begin{macrocode}
\DeclareRobustCommand\phdcs[1]{{\color{thecs}{\texttt{\char`\\\detokenize{#1}}}}}
\let\phd@doc@orig@meta\meta%
%    \end{macrocode}
%
% \begin{docCommand}{meta}{\marg{argument}}
% We modify the standard \meta{arguments} to allow for colour settings.  The \docColor{themeta} is defined in the \pkg{phd-colorpalette} package. The braces are not colored
% as they do not look very good if they are. 
% \end{docCommand}
%
%  Use the original |meta| as defined in |doc| and only colorize and set the font parameters through the |doc|
%  provided macro hook |\meta@font@select|.
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \meta #1 {
   \group_begin:
   \def\meta@font@select{\rmfamily\itshape\color{themeta}}
   \phd@doc@orig@meta{#1}
   \group_end:
}
%    \end{macrocode}
% \begin{docCommand}{marg}{\marg{mandatory argument}}
%  Typesets a mandatory argument as \meta{argument}.
% \end{docCommand}
%    \begin{macrocode}
\cs_set:Npn \marg #1
  {
    \group_begin:
      \ttfamily\char`\{
      \def\meta@font@select{\rmfamily\itshape\color{theoarg}}
      \phd@doc@orig@meta{#1}
      \ttfamily\char`\}
    \group_end:
  }
%    \end{macrocode}
% 
% \begin{docCommand}{oarg}{\marg{argument}}
% Typesets an optional argument, as found in \latexe commands. The command:
% \begin{quote}
%  |\test\oarg{style=two}\marg{mandatory arguments}| 
% \end{quote}
% will typeset:
%  \begin{quote}
%   |\test|\oarg{style=two}\marg{mandatory arguments}
%  \end{quote}
% \end{docCommand} 
%    \begin{macrocode}
\cs_set:Npn \oarg #1
  {
    {\ttfamily[}\meta{#1}{\ttfamily]}
  }
\ExplSyntaxOff
%    \end{macrocode}
%
%\begin{docCommand}[doc new=2015-01-08]{docCounter}{\marg{name}}
%  Documents a counter with given \meta{name}. The counter is automatically indexed.
%\begin{dispExample}
%The counter \docCounter{foocounter} can be used for computation.
%\end{dispExample}
%\end{docCommand}

%\begin{docCommand}[doc new=2015-01-08]{docCounter*}{\marg{name}}
%  Identical to \refCom{docCounter}, but without index entry.
%\end{docCommand}


% \begin{docCommand}[doc updated=2017-10-11] {phdcs} { \marg{macro name}}
%   We modify the standard |\cs| and save to a new name to be able to use
%   underscores. Maybe there are better ways of doing it as well.
% \end{docCommand}

%    \begin{macrocode}
\newif\ifphd@doc@toindex
\newif\ifphd@doc@colorize
\newif\ifphd@doc@annotate
%    \end{macrocode}
%
%    \begin{macrocode}
% language specific texts
\cxset{
  pageshort/.store in=\phdkv@text@pageshort,
  doclang/.cd,
  color/.store in=\phdkv@text@color,
  colors/.store in=\phdkv@text@colors,
  environment content/.store in=\phdkv@text@envcontent,
  environment/.store in=\phdkv@text@env,
  environments/.store in=\phdkv@text@envs,
  key/.store in=\phdkv@text@key,
  keys/.store in=\phdkv@text@keys,
  index/.store in=\phdkv@text@index,
  pageshort/.store in=\phdkv@text@pageshort,
  value/.store in=\phdkv@text@value,
  values/.store in=\phdkv@text@values,
  % List Styles text in english
  lst styles/.store in=\phd@text@lststyles,
}   
\cxset{doclang/lst styles=Listings Styles}
%    \end{macrocode}
%
% \section{Documentation commands key definitions}
%
%    \begin{macrocode}
\cxset
  {
    documentation listing options/.store in=\phdkv@doclistingoptions,%
    documentation listing style/.style={documentation listing options={style=#1}},%
    documentation minted style/.store in=\phdkv@docmintstyle,
    documentation minted options/.store in=\phdkv@docmintoptions,
  }
%    \end{macrocode}
% Define keys for all related color commands. 
%    \begin{macrocode}  
\cxset{    
    color command/.store in=\phdkv@col@command,
    color environment/.store in=\phdkv@col@environment,
    color key/.store in=\phdkv@col@key,
    color value/.store in=\phdkv@col@value,
    color color/.store in=\phdkv@col@color,
    color definition/.style={color command={#1},
                                       color environment={#1},
                                       color key={#1},
                                       color value={#1},
                                       color color={#1}},
    color option/.store in=\phdkv@col@opt,
    color hyperlink/.store in=\phdkv@colhyper,
    color frame/.store in=\phdkv@colhyper,
    color meta/.store in =\pkdkv@colmeta,
%    
    before example/.store in=\phdkv@beforeexample,
    after example/.store in=\phdkv@afterexample,
}
%    \end{macrocode}
%    \begin{macrocode}
%</DOCUM>
%<*DOCUM|DFLT>
%<DOCUM>\cxset {
   color command     = thecs,
   color environment = theenvironment,
   color key              = thekey,
   color value           = thevalue,
   color color            = thevalue,
   color option          = theoption,
   color meta            = themeta,
   color frame           = the frame, 
%<DOCUM> }
%</DOCUM|DFLT>
%    \end{macrocode}
%
%<*DOCUM>
% \section{Index settings}
%
%  We consider indices to be composed of three elements, the index heading 
%  i.e., the word Index typeset in a specific language, the entries and the
%  page numbers. The following keys relate to settings that must have a 
%  one to one relationship with the settings of the |.ist| file. Unfortunately
%  there is no easy way to achieve this. A better strategy is togenerate the \docextension{.ist} file 
%  automatically by writing the parameters to a file.\tcbdocmarginnote{16/08/2017}
%
%  \begin{docKey}[phd]{index actual}{=character}{no default, initially @}
%    Sets the character for \enquote{actual} in automatic indexing.
%  \end{docKey}
%    \begin{macrocode}
\cxset{    
    % indexing
    index actual/.store in   = \idx@actual,
    index quote/.store in    = \idx@quote,
    index level/.store in      = \idx@level,
    index format/.store in   = \idx@format,
    index encap/.store in    = \idx@encap,
    index colorize/.is if       = phd@doc@colorize,%
    index annotate/.is if     = phd@doc@annotate,%
  }
%    \end{macrocode}
%
% we provide three default styles. The first style is suitable for documenting normal text without any
% commands or fancy characters in the index. The second is for the german language. These settings
% are also suitable for any language that has the |''| messed up by Babel or the @ has its catcode
% changed.
% For better mnemonics we also have one as |doc|. We default to the \docAuxKey{index doc settings}.
%    \begin{macrocode}  
 \cxset{
    index default settings/.style={index actual={@},index quote={"},index level={!}},
    index german settings/.style={index actual={=},index quote={!},index level={>}},
    index doc settings/.style={index actual={=},index quote={!},index level={>}},
 }
%</DOCUM>
%<*DFLT|DOCUM>  
%<DOCUM> \cxset{
   % indexing
   index actual  = {@},
   index quote   = {!},
   index level    = {>},
   index doc settings,
%<DOCUM> }
%</DFLT|DOCUM>
%<*DOCUM>  
%    \end{macrocode}
% \subsection{Keys for adjusting design of command displays.}
% The following keys relate to heading describing commands, keys environments and the
%  like
%  \begin{docKey}{doc left}{=\meta{length}}{no default, initially 2em}
%   Sets the lefthand \enquote{offset} of the documentation texts for the \refCom{docCommand},
%  \refCom{docEnvironment}, \refCom{docKey} to \meta{length}.
% \end{docKey}
%  \begin{docKey}{doc right}{=\meta{length}}{no default, initially 0em}
%   Sets the righthand \enquote{offset} of the documentation texts for the \refCom{docCommand},
%  \refCom{docEnvironment}, \refCom{docKey} to \meta{length}.
% \end{docKey}
%
%    \begin{macrocode}  
\cxset{    
    doc left/.dimstore in=\phdkv@doc@left,
    doc right/.dimstore in=\phdkv@doc@right,
    doc left indent/.dimstore in=\phdkv@doc@indentleft,
    doc right indent/.dimstore in=\phdkv@doc@indentright,
    doc head command/.style={doc@head@command/.style={#1}},
    doc head environment/.style={doc@head@environment/.style={#1}},
    doc head key/.style={doc@head@key/.style={#1}},
    doc head/.style={doc head command={#1},doc head environment={#1},doc head key={#1}},
    doc description/.store in=\phdkv@doc@description,%
    doc into index/.is if=phd@doc@toindex,%
  }
%    \end{macrocode}
% 
%    \begin{macrocode}
% styles
%</DOCUM>
%<*DOCUM|DFLT>
\cxset{
  docexample/.style={colframe=ExampleFrame,colback=ExampleBack,fontlower=\footnotesize},
  documentation minted style=,
  documentation minted options={tabsize=2,fontsize=\small},
  english language/.code={\cxset{doclang/.cd,
    color=color,colors=Colors,
    environment content=environment content,
    environment=environment,environments=Environments,
    key=key,keys=Keys,
    index=Index,
    pageshort={P.},
    value=value,values=Values}},
}
%</DOCUM|DFLT>
%<*DOCUM>
\AtBeginDocument{%
  \csname phd@doc@index@\idx@format\endcsname%
  \hypersetup{
  citecolor=\phdkv@colhyper,
  linkcolor=\phdkv@colhyper,
  urlcolor=\phdkv@colhyper,
  filecolor=\phdkv@colhyper,
  menucolor=\phdkv@colhyper
}}
%    
%\cs_set:Npn \dispExample{\cxset{docexample}\phdwritetemp}
%
%\cs_set:Npn \enddispExample{%
%  \endtcbwritetemp%
%  \phdkv@beforeexample\begin{tcolorbox}%
%  \phd@doc@usetemplisting%
%  \phdlower%
%  \phdusetemp%
%  \end{tcolorbox}\phdkv@afterexample%
%}
%
%\newenvironment{dispExample*}[1]{%
%  \cxset{docexample,#1}\phdwritetemp%
%  }{\enddispExample}
%
%    \end{macrocode}
%
% Set a basic style (\docAuxListingsStyle{smalldisplay}) for dispListing.
%
%    \begin{macrocode}
\lstdefinestyle{smalldisplay}{%
  numbers=none, 
  backgroundcolor=\color{thecodebackground}, 
  xleftmargin=0pt}

\tcbset{documentation listing style=smalldisplay}
\tcbset{
   docexample/.style={%
   colframe=thecodeframe, 
   colback=thecodebackground,
   before skip=\medskipamount,
   after skip=\medskipamount,
   fontlower=\footnotesize,
   }
}
%    \end{macrocode}
%    \begin{macrocode}
%
%\newenvironment{dispListing*}[1]{%
%  \phd@layer@pushup\cxset{docexample,#1}\phdwritetemp%
%  }{\enddispListing}

% index auxiliary macros
%    \end{macrocode}

%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \phdindexprintca #1#2#3 {%
  \ifphd@doc@colorize
    \textcolor{#2}
    { \texttt{#1} }
  \else
    \texttt{#1}
  \fi%
  \ifphd@doc@annotate\ 
   #3
  \fi%
}


\cs_set:Npn \phd_index_print_c#1#2{%
  \ifphd@doc@colorize
    \textcolor{#2}{\texttt{#1}}
  \else\texttt{#1}
  \fi%
}


\NewDocumentCommand{\phdindexprintcomc}{ m }
  {
    \phd_index_print_c {\phdcs{#1}}{\phdkv@col@command}
  }
\ExplSyntaxOff
%    \end{macrocode}
%
%  \begin{docCommand} {phd_print_com} { \marg{cs name} }
%    Prints a command. 
%  \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \phd_print_com #1
  {
    \textcolor{black}{\ttfamily\bfseries\phdcs{#1}}%\phdkv@col@command
  }
\ExplSyntaxOff  
%    \end{macrocode}

%    \begin{macrocode}
\ExplSyntaxOn
\newrobustcmd{\phdindexprintenvca}[1]
  {
    \phdindexprintca{#1}{\phdkv@col@environment}{\phdkv@text@env}
  }

\newrobustcmd{\phdindexprintenvc}[1]
  {
    \phd_index_print_c{#1}{\phdkv@col@environment}
  }
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \phd_print_env#1
  {
    \textcolor{\phdkv@col@environment}{\ttfamily\bfseries#1}
  }

\newrobustcmd{\phdindexprintkeyca}[1]
  {
    \phdindexprintca{#1}{\phdkv@col@key}{\phdkv@text@key}
  }

\newrobustcmd{\phdindexprintkeyc}[1]{\phd_index_print_c{#1}{\phdkv@col@key}}

\cs_set:Npn \phd_print_key #1
  {
    \textcolor{\phdkv@col@key}{\ttfamily\bfseries#1}
  }

\newrobustcmd {\phdindexprintvalca}[1]
  {
    \phdindexprintca{#1}{\phdkv@col@value}{\phdkv@text@value}
  }

\newrobustcmd {\phdIndexPrintValC}[1]
  {
    \phd_index_print_c{#1}{\phdkv@col@value}
  }

\cs_set:Npn \phd@Print@Val #1 
  {
    \textcolor {\phdkv@col@value} {\ttfamily\bfseries#1}
  }

\newrobustcmd{\phdindexprintcolca}[1]
  {
    \phdindexprintca{#1}{\phdkv@col@color}{\phdkv@text@color}
  }

\newrobustcmd{\phdindexprintcolc}[1]
  {
    \phd_index_print_c{#1}{\phdkv@col@color}
  }

\cs_set:Npn \phd_print_col #1 
  {
    \textcolor{\phdkv@col@color}{\ttfamily\bfseries#1}
  }



\cs_set:Npn \phdindexcom #1 
  {
    \ifphd@doc@toindex
      \index
       {
         #1
         \idx@actual
         \phdindexprintcomc{#1}
       }
    \fi
  }
%    \end{macrocode}
% \begin{docCommand}{phd_index_env}{\marg{environment name}}{}
%   Auxiliary command to add an environment to the index. The environment name need to come from the key settings.
%  This need to be integrated with the i18n package later on.
% \end{docCommand}
%    \begin{macrocode}
\cs_set:Npn \phd_index_env #1
  {
    \ifphd@doc@toindex
      \index
        {#1
          \idx@actual
          \phdindexprintenvca{#1}
        }
      \index
        {
          \phdkv@text@envs
          \idx@level#1
          \idx@actual
          \phdindexprintenvc{#1}
        }
    \fi
  }
%    \end{macrocode}
%  \begin{docCommand}{phd_index_key}{\marg{key name}}
%  Indexes a key.
%  \end{docCommand}
%    \begin{macrocode}
\cs_set:Npn \phd_index_key #1 
  {
    \ifphd@doc@toindex
      \index{#1\idx@actual \phdindexprintkeyca{#1}}
      \index
        {
          \phdkv@text@keys
          \idx@level
          #1
          \idx@actual
          \phdindexprintkeyc{#1}
        }
    \fi
  }


\cs_set:Npn \phd_index_key_path #1#2
  {
    \ifphd@doc@toindex\index{#2\idx@actual  
      \phdindexprintkeyca{#2}}
      \index{\phdkv@text@keys
         \idx@level#1
        \idx@actual
        \phdindexprintkeyc{/#1/}
        \idx@level#2
        \idx@actual
        \phdindexprintkeyc{#2}
      }
    \fi
  }
%    \end{macrocode}
%
% \begin{docCommand} {phd_index_val} { \marg {value} }
% \end{docCommand}
%    \begin{macrocode}
\cs_set:Npn \phd_index_val #1  
  {
    \ifphd@doc@toindex
      \index
      {
        #1\idx@actual
        \phdindexprintvalca{#1}
      }
      \index
        {
          \phdkv@text@values
          \idx@level #1
          \idx@actual
          \phdIndexPrintValC{#1}
        }
    \fi
  }
%    \end{macrocode}
%
% \begin{docCommand} {phd_index_col} { \marg{color name} }
% \end{docCommand}
%    \begin{macrocode}
\cs_set:Npn \phd_index_col #1
  {
    \ifphd@doc@toindex
    \index
      {
        #1
        \idx@actual
        \phdindexprintcolca{#1}
      }
    \index
      {
        \phdkv@text@colors \idx@level #1
        \idx@actual\phdindexprintcolc {#1}
      }
    \fi
  }

\ExplSyntaxOff
%    \end{macrocode}
%
%   
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \phd_brackets #1
  {
    {\ttfamily\char`\{}#1{\ttfamily\char`\}}
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docEnvironment}{phd@manual@entry}{}
% Internal command for setting a user manual entry.
% \end{docEnvironment}
%    \begin{macrocode}
\ExplSyntaxOn
\newenvironment{phd@manual@entry}%
  {%
   \begin{list}{}
    {%
     \setlength{\leftmargin}{\phdkv@doc@left}%
     \setlength{\itemindent}{0pt}%
     \setlength{\itemsep}{0pt}%
     \setlength{\parsep}{0pt}%
     \setlength{\rightmargin}{\phdkv@doc@right}%
    }\item
  }
  {\end{list}}

\cs_set:Npn \phd_manual_top #1
  {
    \itemsep=0pt
    \parskip=0pt
    \item\strut{#1}\par
    \topsep=0pt
  }

\cs_set:Npn \phd_doc_do_description:
  {
    \ifx\phdkv@doc@description\@empty
    \else\phdlower
      \raggedleft(\phdkv@doc@description)
    \fi
  }
\ExplSyntaxOff
%    \end{macrocode} 
%
%  \begin{docEnvironment} {phd@doc@head} { \marg{additional options} }
%  \end{docEnvironment}
%  \begin{phd@doc@head}{}
% \lorem
% \end{phd@doc@head}
%    \begin{macrocode}
\ExplSyntaxOn
\newtcolorbox{phd@doc@head}[1]
 {
  blank,
  colback=white,
  colframe=white,
  code={\tcbdimto\tcb@temp@grow@left{-\phdkv@doc@indentleft}%
        \tcbdimto\tcb@temp@grow@right{-\phdkv@doc@indentright}},
  grow~to~left~by=\tcb@temp@grow@left,%
  grow~to~right~by=\tcb@temp@grow@right,
  sidebyside,
  sidebyside~align=top,
  sidebyside~gap=-\tcb@w@upper@real,
  phantom=\phantomsection,%
  enlarge~bottom~by=-0.2\baselineskip,
  #1
 }
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
\newenvironment{docCmd}[3][]{
  \cxset{#1}%
  \begin{phd@manual@entry}%
  \begin{phd@doc@head}{doc@head@command}%
  \phd_print_com{#2}
  \phdindexcom{#2}
  \protected@edef\@currentlabel{\noexpand\phdcs{#2}}
  \label{com:#2}{\ttfamily #3}%
  \phd_doc_do_description:%
  \end{phd@doc@head}}%
  {\end{phd@manual@entry}}
\ExplSyntaxOff
%    \end{macrocode}
%

%    \begin{macrocode}
\ExplSyntaxOn
\newenvironment{docCmd*}
  {
    \bgroup
    \phd@doc@toindexfalse
    \begin{docCommand}
  }
  {
    \end{docCommand}
    \egroup
  }

\newenvironment{docEnv}[3][]{\cxset{#1}%
  \begin{phd@manual@entry}%
  \begin{phd@doc@head}{doc@head@environment}%
  \strut
  \phdcs{begin}
  \phd_brackets{\phd_print_env{#2}}
  \phd_index_env{#2}
  \protected@edef\@currentlabel{#2}\label{env:#2}{\ttfamily #3}%\par%
  \strut~~\meta{\phdkv@text@envcontent}%\par%
  \strut\phdcs{end}
  \phd_brackets{\phd_print_env{#2}}%
  \phd_doc_do_description:%
  \end{phd@doc@head}}%
  {\end{phd@manual@entry}}
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docEnv}{docEnv*} {}{}
% \end{docEnv}
%    \begin{macrocode}
\newenvironment{docEnv*}
  {
    \bgroup
    \phd@doc@toindexfalse
    \begin{docEnv}
  }
  { \end{docEnv}\egroup }
%    \end{macrocode}

%% \begin{docEnv}{docKey} {}{}
%% \end{docEnv}
%%    \begin{macrocode} 
%\ExplSyntaxOn
%\renewenvironment{docKey}[4][\@empty]{\begin{phd@manual@entry}%
%  \cxset{doc description={#4}}%
%  \begin{phd@doc@head}{doc@head@key}%
%  \ifx#1\@empty%
% \phd_print_key{#2}
%  \phd_index_key{#2}
%  \protected@edef\@currentlabel{#2}
%  \label{key:#2}{\ttfamily #3}%
%  \else
%   \phd_print_key{/#1/#2}
%    \phd_index_key_path{#1}{#2}
%    \protected@edef\@currentlabel{/#1/#2}
%    \label{key:/#1/#2}{\ttfamily#3}%
%  \fi%
%  \phd_doc_do_description:%
%  \end{phd@doc@head}}%
%  {\end{phd@manual@entry}}
%
%\renewenvironment{docKey*}
%  {\bgroup\phd@doc@toindexfalse\begin{docKey}}
%  {\end{docKey}\egroup}
%
%\cs_set:Npn \phdmakedocSubKey#1#2{%
%  \newenvironment{#1}[4][\@empty]{%
%    \ifx##1\@empty
%      \cs_set:Npn \phd@key@path {#2}
%    \else
%     \cs_set:Npn \phd@key@path{#2/##1}
%    \fi%
%    \begin{docKey}[\phd@key@path]{##2}{##3}{##4}}%
%    {\end{docKey}}%
%  \newenvironment{#1*}{\bgroup\phd@doc@toindexfalse\begin{#1}}{\end{#1}\egroup}%
%}
\ExplSyntaxOff
%    \end{macrocode} 

% \begin {docCommand} {docAuxCmd} { \meta{*} \meta{cs name} }
% \end {docCommand} 
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \docAuxCmd: #1
  {
    \phdindexprintcomc {#1}
    \phdindexcom{#1}
  }
  
\cs_set:Npn \docAuxCmd_star #1 
  {
    \phdindexprintcomc {#1}
  }

\NewDocumentCommand \docAuxCmd { s m }
  {
    \IfBooleanTF {#1}
    {\docAuxCmd_star {#2} } 
    {\docAuxCmd: {#2} }  
  } 
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \doc_aux_env: #1
  {
    \phd_print_env{#1}
    \phd_index_env{#1}
  }
  
\cs_set:Npn \doc_aux_env_star #1
  {
    \phd_print_env{#1}
  }
%    \end{macrocode}
%
%  \begin{docCommand} {docAuxEnv} { \meta{star} \marg{arg1} }
%  \end{docCommand}
%
%    \begin{macrocode}
\NewDocumentCommand\docAuxEnv { s m } 
  {
    \IfBooleanTF {#1}   
    {\doc_aux_env_star{#2} }
    {\doc_aux_env: {#2} }
  }  
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docCommand} {docAuxKey} { \oarg{path} \marg{} }
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\NewDocumentCommand {\doc_aux_key:} {O{\@empty} m}
  {%
     \ifx#1\@empty%
     \phd_print_key{#2}
     \phd_index_key{#2}%
     \else%
     \phd_print_key{/#1/#2}\phd_index_key_path{#1}{#2}%
  \fi
  }%

\newcommand{\doc_aux_key_star}[2][\@empty]{%
  \ifx#1\@empty%
   \phd_print_key {#2}%
  \else%
   \phd_print_key {/#1/#2}%
  \fi}%
  
\DeclareDocumentCommand {\docAuxKey} { s m }
  {
    \IfBooleanTF {#1}
      { \doc_aux_key_star {#2} } { \doc_aux_key: [#1]{#2} }
  }  
\ExplSyntaxOff
%    \end{macrocode} 
%
% \begin{docCommand}{docColor} { \marg{color name} } 
%   Typesets a color name and also adds it onto the index. This is identical
%   with tcolorbox, which we overwrite.
% \end{docCommand}
%
% \example The \docColor{bgsexy} is the main color used for backgrounds.
%
%    \begin{macrocode}
\ExplSyntaxOn

\cs_set:Npn \doc_color_aux #1
  {
    \phd_print_col {#1}
    \phd_index_col {#1}
  }
  
\cs_set:Npn \doc_color_star: #1
  {
    \phd_print_col{#1}
  }

\DeclareDocumentCommand {\docColor} { s m }
  {
    \IfBooleanTF {#1} 
      { \doc_color_star: {#2} }
      { \doc_color_aux {#2} }
  }
\ExplSyntaxOff  
%    \end{macrocode}

% \begin{docCommand}{docValue}{ \meta{*} \marg{value} }
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \docValue@#1{\phd@Print@Val{#1}\phd_index_val{#1}}%
\cs_set:Npn \docValue@star#1{\phd@Print@Val{#1}}%

\DeclareDocumentCommand \docValue { s m } 
  {
    \IfBooleanTF {#1}
      { \docValue@star {#2} }
      { \docValue@ {#2} }
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
% \begin{docCommand} {phd_ref_doc} { \marg{ref label} }
% \end{docCommand}
%
% We use \pkgname{hyperref} to add links. The \docAuxCommand{hyperref}\oarg{label}\marg{text}
% is used to create the link. We use |\ding{213}| \ding{213} for the page see \refCmd{docColor}.
% This is a great technique pioneered in the PGF and PGFPlots manuals for cross referencing
% and the code below is an adaptation.
%
%    \begin{macrocode}
\ExplSyntaxOn
\setrefcountdefault{-1}

\cs_set:Npn \phd_ref_doc #1
{
  \hyperref[#1]
  {\texttt{\ref*{#1}}%
    \ifnum\getpagerefnumber{#1}=\thepage
    \else%
      \textsuperscript
      {
        \ding{213}\,
        \phdkv@text@pageshort\,
        \pageref*{#1}
      }
   \fi
   }
 }

\cs_set:Npn \phd_ref_doc_star#1
  {
    \hyperref[#1]{\texttt{\ref*{#1}}}
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand}{refCmd} { \oarg{*} \marg{cmd name} }
% \end{docCommand}
% The \refCmd {refCmd} references a command. This is similar to
% \index{maths>mathematical}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \ref_com: #1 
  {
    \phd_ref_doc{com:#1}
  }
  
\cs_set:Npn \ref_com_star #1
  {
    \phd_ref_doc_star{com:#1}
  }


\DeclareDocumentCommand {\refCmd} { s m } 
  {
    \IfBooleanTF {#1}
    { \ref_com_star {#2} } { \ref_com: {#2} }
  }  
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \refEnv: #1 {\phd_ref_doc{env:#1}}
\cs_set:Npn \refEnv_star#1{\phd_ref_doc_star{env:#1}}

\DeclareDocumentCommand {\refEnv} { s m }
  {
    \IfBooleanTF {#1}
      { \refEnv_star {#2} }
      { \refEnv: {#2}     }
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand}{refKey} {*\marg{ref text} }
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \refKey@#1{\phd_ref_doc{key:#1}}
\cs_set:Npn \refKey@star#1{\phd_ref_doc_star{key:#1}}
\DeclareDocumentCommand {\refKey} { s m }
  {
    \IfBooleanTF { #1 }
      { \refKey@star {#2} }
      { \refKey@ {#2}       }
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {refAux} {\marg{command name}}
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \refAux#1{\textcolor{\phdkv@colhyper}{\ttfamily #1}}
\cs_set:Npn \refAuxcs#1{\textcolor{\phdkv@colhyper}{\phdcs{#1}}}
\ExplSyntaxOff
%    \end{macrocode}
% 
% \section{Indexing}
%  Most of the indexing macros that follow have been adapted from the pgfmanual-en-macros
%  or the tcolorbox documentation code and transliterated to expl3 language.
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \phd@doc@index@pgf@
  {
    \c@IndexColumns=2%
    \cs_set:Npn \theindex
      {
        \@restonecoltrue
        \columnseprule 0pt  
        \columnsep 28\p@
        \twocolumn[\index@prologue]%
        \parindent -30pt%
        \columnsep 15pt%
        \parskip 0pt plus 1pt%
        \leftskip 30pt%
        \rightskip 0pt plus 2cm%
        \small%
        \cs_set:Npn \@idxitem{\par}%
        \let\item\@idxitem\ignorespaces
      }
    \cs_set:Npn \endtheindex{\onecolumn}%
    \cs_set:Npn \noindexing{\let\index=\@gobble}%
  }
%    \end{macrocode}
%
%  \subsection{Index heading and prologue}
%
% The index prologue is text that is entered just before the indexing entries start.
% Most indices do not have any text.
% We also need to distinguish between using a chapter type heading or a section type heading.
%
%    \begin{macrocode} 
\cs_set:Npn \phd@doc@index@pgfsection{%
  \cs_set:Npn \index@prologue
    {
      \section*{\phdkv@text@index}
      \addcontentsline{toc}{section}{\phdkv@text@index}
      \par\noindent%
   }
  \phd@doc@index@pgf@
}
%    \end{macrocode}
%    \begin{macrocode}
\cs_set:Npn \phd@doc@index@pgfchapter{%
  \cs_set:Npn \index@prologue{\ifdefined\phantomsection\phantomsection\fi    
  \@makeschapterhead{\phdkv@text@index}
  \addcontentsline{toc}{chapter}{\phdkv@text@index}}%
  \phd@doc@index@pgf@%
}
%    
\let\phd@doc@index@pgf=\phd@doc@index@pgfsection%
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_set:Npn \phd@doc@index@doc
  {
    \let\phdindexcom      = \SpecialMainIndex
    \let\phd_index_env    = \SpecialMainEnvIndex
    \cxset{index german settings}
    \EnableCrossrefs
    \PageIndex
}

\cs_set:Npn \phd@doc@index@off{}%
\ExplSyntaxOff
%    \end{macrocode}
%    \begin{macrocode}
\cxset{%
    reset@documentation/.style={%
    index format=pgf,
    english language,
    documentation listing style = tcbdocumentation,
    index default settings,
    color option=Option,
    color definition=Definition,
    color hyperlink=Hyperlink,
    before example=\par\smallskip,
    after example=,
    doc left=0em,
    doc right=0pt,
    doc left indent=-2em,
    doc right indent=0pt,
    doc head=,
    doc description=,
    doc into index=true,
    index colorize = true,
    index annotate= false,
    },
%  initialize@reset=reset@documentation,
}
\cxset{reset@documentation}
%    \end{macrocode}
%
% We set the \docAuxKey{index format}=\docValue{pgf}  and the rest of the keys to the
% |german| settings that are suitable for |doc|.
%
%    \begin{macrocode}
\cxset{index format  =  pgfchapter,
       index actual={=},
       index level = {>},
       index quote = {!},
       index german settings,
       color hyperlink = thelinkcolor,  % links with color palette
       color definition =thelinkcolor,  % links with color palette
       pageshort       = {$\sigma{}$},
   }      
%\def\main#1{\underline{#1}}
%    \end{macrocode}
%

% \section{Miscellaneous doc commands}
% For consistency all commands that typeset their content, as well as index it and perhaps, also reference
% it have the prefix |doc|.
%
% \begin{docCommand} {docFile} { \marg{file name} }
%   Typesets and index a file. 
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \docFile #1
  {
    \texttt {#1}
    \index{files>#1}
  }
%    \end{macrocode}
% \begin{macro}{\docExtension}
%  Extension macro
%    \begin{macrocode}  
\cs_set:Npn \docExtension #1
  {
    \texttt {#1}
    \index{file extensions\idx@level#1}
  }  
\let\docextension\docExtension  
\ExplSyntaxOff  
%    \end{macrocode}
%\end{macro}
% 
%\section{Other Indexing functions}
%
% \begin{docCommand}{indexmany}{ \oarg{category} \marg{clist} }
% This function indexes a comma delimited list of items. It is convenient
% when you have paragraphs with a lot of terms.
% 
% \end{docCommand}
%    \begin{macrocode}
 \ExplSyntaxOn
 \DeclareDocumentCommand\indexmany {o m }
 {
   \clist_gset:Nn \indexmany: {#2} 
   \IfValueTF {#1}
    { 
      \clist_map_inline:Nn\indexmany: 
        {
          \index{#1\idx@level##1}\index{##1}
        }
    }
    { 
     \clist_map_inline:Nn\indexmany: 
      {
        \index{##1}
      } 
    }
 }
 \ExplSyntaxOff
%    \end{macrocode}

%    \begin{macrocode}
\DeclareRobustCommand{\idxlanguage}[1]{\index{\string #1 (script)}\index{scripts\idx@level#1}\texttt{#1}\xspace}%
%    \end{macrocode}
% 
% \section{Indexing Symbols}
%
% The commands that are defined in this section can be used to produce almost any symbol
% that is described in the Comprehensive Symbols\footcite{comprehensive}. They are mostly
% variants as described by this publication. Some modernized a bit, others using \latex3 type
% definitions. 
% 
% Some of them are just used for typesetting symbols in tables.
% 
% \begin{docCommand} {indexboth} { \marg{arg1}  \marg{arg2} }
%  Indexes both arguments. 
% \idxboth{currency}{symbols}
% \idxboth{monetary}{symbols}
%\begin{longsymtable}{\TC\ Currency Symbols}
%\idxboth{currency}{symbols}
%\idxboth{monetary}{symbols}
%\index{euro signs}
%\label{tc-currency}
%\begin{longtable}{*4{ll}}
%\K\textbaht          & \K\textdollar$^*$     & \K\textguarani  & \K\textwon \\
%\K\textcent          & \K\textdollar              & \K\textlira     & \K\textyen \\
%\K\textcent            & \K\textdong           & \K\textnaira    \\
%\K\textcolonmonetary & \K\texteuro           & \K\textpeso     \\
%\K\textcurrency      & \K\textflorin         & \K\textsterling$^*$ \\
%\end{longtable}
%\end{longsymtable}
% \end{docCommand}
%    \begin{macrocode} 
\newcommand{\idxboth}[2]{\mbox{}\index{#1 #2}\index{#2\idx@level#1}}
\newcommand{\idxbothbegin}[2]{\mbox{}\index{#1 #2|(}\index{#2\idx@level #1|(}}
\newcommand{\idxbothend}[2]{\mbox{}\index{#1 #2|)}\index{#2\idx@level #1|)}}
\ExplSyntaxOn
\cs_gset_eq:NN \indexboth\idxboth
\cs_gset_eq:NN \indexbothbegin \idxbothbegin
\cs_gset_eq:NN \indexbothend\idxbothend
\ExplSyntaxOff
%    \end{macrocode}
% 
%    
%
% We define a related macro for indexing accents.  In a previous version
% of this file, |\indexaccent| additionally included "see also accents" in
% the index.  This became distracting so I made |\indexaccent| a synonym
% for |\indexcommand| for the time being.  Because punctuation marks can
% be problematic for makeindex, we define an \indexpunct macro that
% sorts its argument under the comparatively innocuous "|\_|".
%
% \begin{docCommand}{sanitize}{}
%  Delimited macro (!!!) that sanitizes macros. Classic TeXBook style. It removes
%  the backslash. Not too sure if the word sanitize is appropriate. 
% \end{docCommand}
%    \begin{macrocode}
\def\cmd#1{\texttt{\string#1}\indexcommand{#1}}
\newcommand{\cmdI}[2][]{%
  \def\first@arg{#1}%
  \ifx\first@arg\@empty
    \texttt{\string#2}\indexcommand[#2]{#2}%
  \else
    \texttt{\string#2}\indexcommand[#1]{#2}%
  \fi
}
\newcommand{\cmdX}[1]{\cmdI[$\string#1$]{#1}}
\newcommand{\cmdW}[1]{\cmdI[$\string\blackacc{\string#1}$]{#1}}
\newcommand{\cmdIp}[2][]{%
  \def\first@arg{#1}%
  \ifx\first@arg\@empty
    \texttt{\string#2}\indexpunct[#2]{#2}%
  \else
    \texttt{\string#2}\indexpunct[#1]{#2}%
  \fi
}
\begingroup
 \catcode`\|=0
 \catcode`\\=12
 |gdef|sanitize#1#2!!!{%
   |ifx#1\%
     #2%
   |else
     #1#2%
   |fi
}
|endgroup
%    \end{macrocode}
%
%  \begin{docCommand}{indexcommand}{\oarg{}\marg{command} }
%    Index a \emph{symbol}, which may or may not begin with a \emph{backslash}.  (Is
%  there a better way to do this?)  Also, if symbol is given as an
%    optional argument is given, typeset that symbol in the index, as well
% \end{docCommand}
%
%  
%    \begin{macrocode}
 \ExplSyntaxOn
\NewDocumentCommand \indexcommand { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    %\def\first@arg{#1}%
    \IfNoValueTF{#1}
    {
       \exp_after:wN
          \index {
             \sanitized\idx@actual
             \expandafter\phdIndexPrintCs{\sanitized}}%
    }
    {
       \expandafter\index\expandafter{\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
 \ExplSyntaxOff
%  \newcommand{\indexcommand}[2][]{%
%    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
%    \def\first@arg{#1}%
%    \ifx\first@arg\@empty
%      \expandafter\index\expandafter{\sanitized=\string\verb+\string#2+}%
%    \else
%      \expandafter\index\expandafter{\sanitized=\string\verb+\string#2+ (#1)}%
%    \fi
%  }
%    \end{macrocode}
%
% \subsection{Indexing archaic scripts. }
%  
% \begin{docCommand} {indexcypriot} { \oarg{arg1} \marg{arg2} }
%    Index helper function for indexing Cypriot script. Only used
%    in the phd documentation.
% \end{docCommand}
%
%    \begin{macrocode}
\NewDocumentCommand \indexcypriot { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Cypriot\idx@level\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{Cypriot>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
%    \end{macrocode}  
%
% \begin{docCommand} {indexstaves} { \oarg{arg1} \marg{arg2} }
%    Index helper function for indexing Icelandic staves. Only used
%    in the phd documentation.
% \end{docCommand}
%
%    \begin{macrocode}
\NewDocumentCommand \indexstaves { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Staves>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{Staves>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
%    \end{macrocode} 
% 
%  
% \begin{docCommand} {indexlinearb} { \oarg{typesetting command(s)} \marg{command} }
%    Index helper function for indexing the linearb script. Only used
%    in the phd documentation for scripts. 
%    In .idx it writes
%    \begin{verbatim}
%    \indexentry{Linear B >BPamphora=\phdIndexPrint {BPamphora} (\textlinb  {\BPamphora })|hyperpage}{63}
%    \end{verbatim}
% \end{docCommand}
%  
%    \begin{macrocode}

\newrobustcmd\phdIndexPrintCs[1]{{\catcode`\_=12\relax\catcode`\@11\relax\ttfamily\char`\\\scantokens{#1}\unskip}}
% 
% 
\NewDocumentCommand \indexlinearb { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Linear B\idx@level \sanitized\idx@actual\string\verb+\string#2+}%
    }
    { % index
         \index{Linear B
         \idx@level
        \sanitized
         \idx@actual 
         \expandafter\phdIndexPrintCs{\sanitized} (#1)}%
       % typeset        
       \string#2 & (#1)
    }
  }
%    \end{macrocode} 
% 
%\index{Linear B}
%\index{arrows}
%\index{animals}
%\label{linearB-objs}
%\begin{longtable}{*3{ll@{\qquad}}ll}
%\indexlinearb[\textlinb{\BPamphora}]\BPamphora       & \indexlinearb[\textlinb{\BPchassis}]\BPchassis       & \indexlinearb[\textlinb{\BPman}]\BPman               & \indexlinearb[\textlinb{\BPwheat}]\BPwheat           \\
%\indexlinearb[\textlinb{\BParrow}]\BParrow           & \indexlinearb[\textlinb{\BPcloth}]\BPcloth           & \indexlinearb[\textlinb{\BPnanny}]\BPnanny           & \indexlinearb[\textlinb{\BPwheel}]\BPwheel           \\
%\indexlinearb[\textlinb{\BPbarley}]\BPbarley         & \indexlinearb[\textlinb{\BPcow}]\BPcow               & \indexlinearb[\textlinb{\BPolive}]\BPolive           & \indexlinearb[\textlinb{\BPwine}]\BPwine             \\
%\indexlinearb[\textlinb{\BPbilly}]\BPbilly           & \indexlinearb[\textlinb{\BPcup}]\BPcup               & \indexlinearb[\textlinb{\BPox}]\BPox                 & \indexlinearb[\textlinb{\BPwineiih}]\BPwineiih       \\
%\indexlinearb[\textlinb{\BPboar}]\BPboar             & \indexlinearb[\textlinb{\BPewe}]\BPewe               & \indexlinearb[\textlinb{\BPpig}]\BPpig               & \indexlinearb[\textlinb{\BPwineiiih}]\BPwineiiih     \\
%\indexlinearb[\textlinb{\BPbronze}]\BPbronze         & \indexlinearb[\textlinb{\BPfoal}]\BPfoal             & \indexlinearb[\textlinb{\BPram}]\BPram               & \indexlinearb[\textlinb{\BPwineivh}]\BPwineivh       \\
%\indexlinearb[\textlinb{\BPbull}]\BPbull             & \indexlinearb[\textlinb{\BPgoat}]\BPgoat             & \indexlinearb[\textlinb{\BPsheep}]\BPsheep           & \indexlinearb[\textlinb{\BPwoman}]\BPwoman           \\
%\indexlinearb[\textlinb{\BPcauldroni}]\BPcauldroni   & \indexlinearb[\textlinb{\BPgoblet}]\BPgoblet         & \indexlinearb[\textlinb{\BPsow}]\BPsow               & \indexlinearb[\textlinb{\BPwool}]\BPwool             \\
%\indexlinearb[\textlinb{\BPcauldronii}]\BPcauldronii & \indexlinearb[\textlinb{\BPgold}]\BPgold             & \indexlinearb[\textlinb{\BPspear}]\BPspear           &                                           \\
%\indexlinearb[\textlinb{\BPchariot}]\BPchariot       & \indexlinearb[\textlinb{\BPhorse}]\BPhorse           & \indexlinearb[\textlinb{\BPsword}]\BPsword           &                                           \\
%\end{longtable}
%
%
% \begin{docCommand} {indexugar} { \oarg{arg1} \marg{arg2} }
%    Index helper function for indexing Ugaritic scripts. Only used
%    in the phd documentation.
% \end{docCommand}
% 
%    \begin{macrocode}
\NewDocumentCommand \indexugar { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{Ugarite>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{Ugarite>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
%    \end{macrocode} 

% \begin{docCommand} {indexvarpersian} { \oarg{arg1} \marg{arg2} }
%   Indexing and doc command for var Persian tables.
% \end{docCommand}
%
%    \begin{macrocode}
\NewDocumentCommand \indexvarpersian { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{var Persian>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{var Persian>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
%    \end{macrocode} 
%
% \begin{docCommand} {indexsoutharabian} {\oarg{}\marg{} }
%    Indexing and doc command for symbols tables.
% \end{docCommand}
%
%    \begin{macrocode}
\NewDocumentCommand \indexsoutharabian { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{South Arabian>\sanitized=\string\verb+\string#2+}%
    }
    {
       \expandafter\index\expandafter{South Arabian>\sanitized=\string\verb+\string#2+ (#1)}%
    }
  }
%    \end{macrocode} 
%
% \subsection{Indexing mathematical symbols}
%
% The currently available fonts 
% The following indexing commands are auxiliary commands to
% index unicode symbols for maths. 
% \tcbdocmarginnote{26-06-2015}
%    \begin{macrocode}
\NewDocumentCommand \indexmathcmd { o m }  
  {
    \edef\sanitized{\expandafter\sanitize\string#2!!!}%
    \IfNoValueTF{#1}
    {
       \expandafter\index\expandafter{#1\idx@level\sanitized=\string\verb+\string#2+
       ($#2$)}
       % put command also
      \expandafter\index\expandafter{\string#1=\string\verb+\string#2+ ($\string#2$)*}%
    }
    {
      \expandafter\index\expandafter{#1\idx@level
      \sanitized=\string\verb+\string#2+ ($#2$)}%
      \expandafter\index\expandafter{\string#1=\string\verb+\string#2+ ($\string#2$)}%
    }
  }
%    \end{macrocode} 
%
% \begin{docCommand}{indexaccent}{}
%   Syntactic sugar identical to \refCom{indexcommand}
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_gset_eq:NN \indexaccent\indexcommand
\cs_new:Npn \CLSLpipe {|}
\ExplSyntaxOff  
%    \end{macrocode}
%   
%
% \begin{docCommand} {indexpunct} { \oarg {arg1} \marg{arg2}} 
%   Indexing punctuation marks for latin scripts.
% \end{docCommand}
%
%    \begin{macrocode}
  \newcommand{\indexpunct}[2][]{%
    \def\first@arg{#1}%
    \def\second@arg{#2}%
    \ifx\first@arg\@empty
      \ifx\second@arg\CLSLpipe
        \index{_=\magicvertname}%
      \else
        \index{_=\string\verb+\string#2+}%
      \fi
    \else
      \ifx\second@arg\CLSLpipe
        \index{_=\magicvertname{} (#1)}%
      \else
        \index{_=\string\verb+\string#2+ (#1)}%
      \fi
    \fi
  }
%    \end{macrocode}
% 
%
%    \begin{macrocode}
%\usepackage{longdiv}
\newcommand\FC{\pkgname{fc}}
\newcommand\VIET{\pkgname{vietnam}}
%\newcommand\ABX{\pkgname{mathabx}}
%    \end{macrocode}
%

% \begin{docCommand} {incsyms} { \meta{void}}
%  We define an integer counter \docCounter{totalsymbols} to keep track of all the symbols we load
%  and list.\footnote{Unicode characters are counted separately and are dealt with under the phd-scriptsmanager package.}
%  These are symbols which can be produced using command sequences.
% \end{docCommand}
%
% Define a counter to keep track of how many symbols are listed.
% Output this counter to the log file at the end of each run.
% Define |\prevtotalsymbols| to be the total number of symbols from
% the previous run.
%   
%    \begin{macrocode}
\ExplSyntaxOn
  \int_new:c {totalsymbols}
  \cs_new:Npn \incsyms { \int_gincr:c {totalsymbols} }
  \cs_new:Npn \thetotalsymbols {\int_use:c {totalsymbols} }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand}{graybox} { \meta{void}}
% \end{docCommand}
%    \begin{macrocode}
\newcommand*{\graybox}{\textcolor{thecodebackground}{\rule[-\adp]{\awd}{\aht}}}
 
% Define |\blackacc| to display an accented box, given an accent command.
% Define |\blackacchack| to display an accented "a" and then black out
% the "a".
\newlength\awd
\newlength\aht
\newlength\adp
\settowidth{\awd}{\normalfont a}
\settoheight{\aht}{\normalfont a}
\settodepth{\adp}{\normalfont a}
\advance\adp by 0.06pt    % In Computer Modern, "a" extends slightly below its bounding box.
\advance\aht by \adp


\gdef\blackacchack#1{#1a\llap{\graybox}}
\gdef\blackacc#1{#1{\graybox}}
\gdef\blackacctwo#1{#1{\graybox}{\graybox}}
%    \end{macrocode}
% 
% 
%
% Symbol+verbatim for various types of symbols
%    \begin{macrocode}
\def\E#1{%
  \begingroup
    \lccode`|=`\\
    \def\EStruename{ES#1T}
    \lowercase{\incsyms\index{#1=\string\verb+\string|#1+ (\string|\EStruename)}}
  \endgroup
  \csname ES#1T\endcsname 
  & \csname ES#1D\endcsname 
  &
  \ttfamily\expandafter\string\csname#1\endcsname
}
%    \end{macrocode}
%    
%  
% 
% These commands are here to be able to index these symbols for the index and to typeset
% them in the symbols appendix.
% 
% \begin{docCommand} {Kcyp} {\oarg{text cmd} \marg{symbol command}}
%   Indexes and prints the Cypriot archaic font symbols.
% 
% \example |\Kcyp[\textcypr{\Ca}]\Ca|
%
% 
% \end{docCommand}
%    \begin{macrocode}
\def\Kcyp@opt@arg[#1]#2{\incsyms\indexcypriot[\textcypr{#1}]{#2}#1 &\ttfamily\string#2}
\def\Kcyp@no@opt@arg#1{\incsyms\indexcypriot[\textcypr{#1}]{#1}#1 &\ttfamily\string#1}
\def\Kcyp{\@ifnextchar[{\Kcyp@opt@arg}{\Kcyp@no@opt@arg}}
%    \end{macrocode}
%    
% \begin{docCommand} {Kstav} { \oarg{cmd} \marg{stave cmd}}      
%   Indexes and prints an Icelandic  stave. 
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn

\cs_set:Npn \Kstav_opt_arg [#1]#2
  {
    \incsyms\indexstaves[#1]{#2}# 1 &\ttfamily\string#2
  }
 
\cs_set:Npn \Kstav_no_opt_arg #1
  {
    \incsyms\indexstaves[#1]{#1}#1 &\ttfamily\string#1
  }

\NewDocumentCommand\Kstav {o m} {
  \IfNoValueTF {#1} 
    {
      \Kstav_no_opt_arg {#2}
    }
    {
      \Kstav_opt_arg [#1] {#2}
    }
}
\ExplSyntaxOff
%    \end{macrocode}
%    
% \begin{docCommand}{K} { \oarg{} \marg{cmd} }    
%    Adds a symbol cmd to a table and the index.
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \K@opt@arg#1#2 
   {
      \incsyms
      \indexcommand[#1]{#2}#1 &\footnotesize\ttfamily\string#2
   }
   
\cs_set:Npn \K@no@opt@arg#1
  {
    \incsyms\indexcommand[#1]{#1}#1 &\footnotesize\ttfamily\string#1
  }
%    \end{macrocode}
%
% \begin{docCommand}{K}{\oarg{symbol command} \marg{symbol command}} 
%     Command used to typeset a table of symbols such as textsymbols. The mandatory argument
%     takes a command such as |texteuro|, typesets the symbol first and then the command. It also adds it to the 
%    index. It is the most common command and hence we keep it short. It was originally defined in Comprehensive \footcite{comprehensive}.
%  It also increases the counter \docCounter{incsyms}. The optional argument has an alternative symbol.
%     |\K[\dingSquare]\Square| 
% \end{docCommand} 
%    \begin{macrocode}
\NewDocumentCommand {\K} { o m } 
{
  \IfNoValueTF {#1} { \K@no@opt@arg {#2} } {\K@opt@arg {#1}{#2}}
}
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{symtable}{\latexe{} Escapable ``Special'' Characters}
%\index{special characters=``special'' characters}
%\index{escapable characters}
%\index{underline}
%\label{special-escapable}
%\begin{tabular}{*6{ll@{\qqquad}}ll}
%\K\$   & \K\%   & \K\_$\,^*$  & \Kp\}  & \K\&   & \K\#   & \Kp\{   \\
%\end{tabular}
%\end{symtable}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \Kp #1 
   {
       \incsyms
       \indexpunct[$#1$]{#1}#1 &\footnotesize\ttfamily\string#1
    }
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
%\begin{symtable}[EDICE]{\EDICE\ Dice}
%\index{dice}
%\idxboth{game-related}{symbols}
%\label{edice}
%\begin{tabular}{ll@{\qquad}ll@{\qquad}ll}
%  \KED[\allepsdice][\epsdice][\epsdice{1}]\epsdice\verb|{1}| &
%  \KED[\allepsdice][\epsdice][\epsdice{3}]\epsdice\verb|{3}| &
%  \KED[\allepsdice][\epsdice][\epsdice{5}]\epsdice\verb|{5}| \\
%  \KED[\allepsdice][\epsdice][\epsdice{2}]\epsdice\verb|{2}| &
%  \KED[\allepsdice][\epsdice][\epsdice{4}]\epsdice\verb|{4}| &
%  \KED[\allepsdice][\epsdice][\epsdice{6}]\epsdice\verb|{6}| \\
%\end{tabular}
%\end{symtable}
%\newif\ifEDICE
%\newcommand\EDICE{\pkgname{epsdice}}
%\IfFileExists{epsdice.sty}
%  {\EDICEtrue
%   \usepackage{epsdice}
%   \let\origepsdice=\epsdice
%   \DeclareRobustCommand{\epsdice}[1]{\origepsdice{##1}}
%   \DeclareRobustCommand{\allepsdice}{%
%     \epsdice{1}%
%     \epsdice{2}%
%     \epsdice{3}%
%     \epsdice{4}%
%     \epsdice{5}%
%     \epsdice{6}%
%   }
%  }
%  {}
%    \end{macrocode}  
%\begin{symtable}[DOZ]{\DOZ\ Base-12 Digits}
%\index{numerals}
%\index{dozenal (base 12)>numerals}
%\index{base twelve>numerals}
%\index{duodecimal (base 12)>numerals}
%\idxboth{Pitman's base 12}{symbols}
%\label{dozenal-digits}
%\begin{tabular}{ll@{\qquad}ll}
%\K[\DOZx]\x & \K[\DOZe]\e \\
%\end{tabular}
%\end{symtable}
%
% The below are faked symbols, based on Scott Pakin's |fakedozenal.sty|. We include this file
% with the |phd| bundle distribution. With LuaLaTeX this can be included. This is a rather
% strange package with probably very few users and use. It has intrigued me and I include it
% here.\footnote{See the website of the dozenal society to understand what it is all about.
% \protect\url{http://www.dozenal.org/index.html}}
%\begin{symtable}[DOZ]{\DOZ\ Tally Markers}
%\index{dozenal (base 12)>tally markers}
%\index{base twelve>tally markers}
%\index{duodecimal (base 12)>tally markers}
%\idxboth{Pitman's base 12}{symbols}
%\index{tally markers}
%\label{dozenal-tally}
%\begin{tabular}{ll@{\qquad}ll@{\qquad}ll}
%\KED[\alldoztallies][\tally][\doz{1}]\tally\verb|{1}| & \KED[\alldoztallies][\tally][\doz{3}]\tally\verb|{3}| & \KED[\alldoztallies][\tally][\doz{5}]\tally\verb|{5}| \\
%\KED[\alldoztallies][\tally][\doz{2}]\tally\verb|{2}| & \KED[\alldoztallies][\tally][\doz{4}]\tally\verb|{4}| & \KED[\alldoztallies][\tally][\doz{6}]\tally\verb|{6}| \\
%\end{tabular}
%\end{symtable}

%    \begin{macrocode}
% Load a faked version of a package.
\newcommand{\fakeusepackage}[1]{%
 \let\origProvidesPackage=\ProvidesPackage
 \def\ProvidesPackage##1[##2]{\origProvidesPackage{##1}[##2]\endinput}
 \usepackage{#1}
 \let\ProvidesPackage=\origProvidesPackage
 \usepackage{fake#1}
}

\newif\ifDOZ
\newcommand\DOZ{\pkgname{dozenal}}
\IfFileExists{dozenal.sty}
  {\DOZtrue
   \if\luatex
      \RequirePackage[nocounters,typeone]{dozenal}
    \else  
     \fakeusepackage{dozenal}
   \fi  
   \DeclareRobustCommand{\DOZx}{\doz{X}}
   \DeclareRobustCommand{\DOZe}{\doz{E}}
   \DeclareRobustCommand{\alldoztallies}{%
     \doz{1}~%
     \doz{2}~%
     \doz{3}~%
     \doz{4}~%
     \doz{5}~%
     \doz{6}%
   }
  }
{}  
%    \end{macrocode}
% \begin{docCommand}{KED}{\oarg{}\oarg{2}\oarg{3}\oarg{4}}
%  Documentation macros for tables showing dozenal symbols. Rarely used.
% \end{docCommand}
%    \begin{macrocode}
\def\KED[#1][#2][#3]#4 {%
   \incsyms\indexcommand[#1]{#2}#3 &\small\ttfamily\string#4%
}

% feyn provides yet another math font for which we have no room.
% Fortunately, it's relatively easy to define all of its symbols in
% terms of a text font.


\def\Kfeyn#1{\incsyms\indexcommand[\string\feyn{#1}]{\feyn{#1}}\feyn{#1} &\small\ttfamily\string\feyn\string{\string#1\string}}
%    \end{macrocode}

%
%    \begin{macrocode}
% We have no math alphabets left so we trick svrsymbols.sty into defining
% all of its characters in text mode.
\newif\ifSVR
\newcommand\SVR{\pkgname{svrsymbols}}
\makeatletter
\IfFileExists{svrsymbols.sty}
  {\SVRtrue
   \let\origDeclareSymbolFont=\DeclareSymbolFont
   \let\origDeclareMathSymbol=\DeclareMathSymbol
   \let\origSetSymbolFont=\SetSymbolFont
   \renewcommand{\DeclareSymbolFont}[5]{}
   \renewcommand{\SetSymbolFont}[6]{}
   \renewcommand{\DeclareMathSymbol}[4]{%
     \let##1=\relax%  \photon and \antiproton are defined repeatedly.
     \newcommand{##1}{{\usefont{OML}{svr}{m}{it}\char##4}}%
   }
   \usepackage{svrsymbols}
   \let\DeclareSymbolFont=\origDeclareSymbolFont
   \let\DeclareMathSymbol=\origDeclareMathSymbol
   \let\SetSymbolFont=\origSetSymbolFont
  }
  {}
%   
%%
%  \newenvironment{longsymtable}[2][true]{%
%  \expandafter\global\expandafter\let
%    \expandafter\ifshowsymtable\csname if#1\endcsname
%  \ifshowsymtable
%    \mbox{}%
%    \Needspace*{13\baselineskip}%
%    \mbox{}%
%    \begin{center}%
%    \phantomsection
%    \refstepcounter{table}%
%%
%    % Inhibit longtable's implicit increment of the table counter.
%    \let\refstepcounter=\@gobble
%    \let\LT@array=\origLT@array
%    \let\LT@start=\origLT@start
%%
%    \addcontentsline{toc}{subsection}{%
%      \protect\numberline{\tablename~\thetable:}{#2}}%
%    \@makecaption{\fnum@table}{#2}%
%    \gdef\lt@indexed{}%
%    \let\next=\relax
%  \else
%    % The following was taken verbatim from verbatim.sty.
%    \let\do\@makeother\dospecials\catcode`\^^M\active
%    \let\verbatim@startline\relax
%    \let\verbatim@addtoline\@gobble
%    \let\verbatim@processline\relax
%    \let\verbatim@finish\relax
%    \let\next=\verbatim@
%  \fi
%  \next
%}{%
%  \ifshowsymtable
%    \end{center}
%    \let\@elt=\index\lt@indexed  % Close our index ranges.
%    \gdef\lt@indexed{}%
%    \vskip 8ex minus 2ex
%  \fi
%}
%    \end{macrocode}
%\begin{longsymtable}[SVR]{\SVR\ Physics Ideograms}
%\ltindex{particle-physics symbols}
%\ltindex{symbols>particle physics}
%\ltindex{fermions}
%\ltindex{subatomic particles}
%\ltindex{photons}
%\label{svrsymbols}
%\begin{longtable}{*3{ll}}
%\multicolumn{6}{l}{\small\textit{(continued from previous page)}} \\[3ex]
%\endhead
%\endfirsthead
%\\[3ex]
%\multicolumn{6}{r}{\small\textit{(continued on next page)}}
%\endfoot
%\endlastfoot
%\K\adsorbate      & \K\experimentalsym & \K\protein        \\
%\K\adsorbent      & \K\externalsym     & \K\proton         \\
%\K\antimuon       & \K\fermiDistrib    & \K\quadrupole     \\
%\K\antineutrino   & \K\fermion         & \K\quark          \\
%\K\antineutron    & \K\Gluon           & \K\quarkb         \\
%\K\antiproton     & \K\graphene        & \K\quarkc         \\
%\K\antiquark      & \K\graviton        & \K\quarkd         \\
%\K\antiquarkb     & \K\hbond           & \K\quarks         \\
%\K\antiquarkc     & \K\Higgsboson      & \K\quarkt         \\
%\K\antiquarkd     & \K\hole            & \K\quarku         \\
%\K\antiquarks     & \K\interaction     & \K\reference      \\
%\K\antiquarkt     & \K\internalsym     & \K\resistivity    \\
%\K\antiquarku     & \K\ion             & \K\rhomesonminus  \\
%\K\anyon          & \K\ionicbond       & \K\rhomesonnull   \\
%\K\assumption     & \K\Jpsimeson       & \K\rhomesonplus   \\
%\K\atom           & \K\Kaonminus       & \K\solid          \\
%\K\bigassumption  & \K\Kaonnull        & \K\spin           \\
%\K\Bigassumption  & \K\Kaonplus        & \K\spindown       \\
%\K\biggassumption & \K\magnon          & \K\spinup         \\
%\K\Bmesonminus    & \K\maxwellDistrib  & \K\surface        \\
%\K\Bmesonnull     & \K\metalbond       & \K\svrexample     \\
%\K\Bmesonplus     & \K\method          & \K\svrphoton      \\
%\K\bond           & \K\muon            & \K\tachyon        \\
%\K\boseDistrib    & \K\neutrino        & \K\tauleptonminus \\
%\K\boson          & \K\neutron         & \K\tauleptonplus  \\
%\K\conductivity   & \K\nucleus         & \K\Tmesonminus    \\
%\K\covbond        & \K\orbit           & \K\Tmesonnull     \\
%\K\dipole         & \K\phimeson        & \K\Tmesonplus     \\
%\K\Dmesonminus    & \K\phimesonnull    & \K\triplecovbond  \\
%\K\Dmesonnull     & \K\phonon          & \K\Upsilonmeson   \\
%\K\Dmesonplus     & \K\pionminus       & \K\varphoton      \\
%\K\doublecovbond  & \K\pionnull        & \K\water          \\
%\K\electron       & \K\pionplus        & \K\Wboson         \\
%\K\errorsym       & \K\plasmon         & \K\Wbosonminus    \\
%\K\etameson       & \K\polariton       & \K\Wbosonplus     \\
%\K\etamesonprime  & \K\polaron         & \K\Zboson         \\
%\K\exciton        & \K\positron        &                   \\
%\end{longtable}
%\end{longsymtable}
%%    \begin{macrocode}  
%\def\Kpig#1{\incsyms\index{pigpenfont #1=\string\verb+{\string\pigpenfont\space#1}+\space(\string\CLSLpig{#1})}\CLSLpig{#1} &\ttfamily\string{\string\pigpenfont\space\string#1\string}}
%    
%
%  \begin{docCommand} {Ks} { \marg{cmd} }
%    \cs{Ks} index and doc command, asterisk for note that is not available in |OT1|, as
%    superscript.
%  \end{docCommand}
%
%  \subsection{Arrows}
%%
% We use a faked version of old-arrows.sty provide by Pakin so as not to waste a math alphabet, if not
% using LuaLaTeX. Under the latest versions of Lua and LaTeX we load it directly.
%    \begin{macrocode}
\newif\ifARR
\newcommand\ARR{\pkgname{old-arrows}}
\IfFileExists{old-arrows.sty}
  {\ARRtrue\usepackage[old]{old-arrows}}
  {}

%  
%
%%\index{arrows}
%%\label{var-arrows}
%%\begin{tabular}{*3{ll}}
%%\X\vardownarrow\downarrow                   &  \X\varlongleftrightarrow \longleftrightarrow &  \X\varnwarrow \nwarrow         \\
%% \X\varhookleftarrow \hookleftarrow           &  \X\varlongmapsfrom \longmapsfrom$^*$         &  \X\varrightarrow \rightarrow   \\
%% \X\varhookrightarrow \hookrightarrow         &  \X\varlongmapsto \longmapsto                 &  \X\varsearrow \searrow         \\
%% \X\varleftarrow \leftarrow                   &  \X\varlongrightarrow \longrightarrow         &  \X\varswarrow \swarrow         \\
%% \X\varleftrightarrow \leftrightarrow         &  \X\varmapsfrom \mapsfrom$^*$                 &  \X\varuparrow \uparrow         \\
%% \X\varlonghookrightarrow \longhookrightarrow &  \X\varmapsto \mapsto                         &  \X\varupdownarrow \updownarrow \\
%% \X\varlongleftarrow \longleftarrow           &  \X\varnearrow \nearrow                       &                                 \\
%%\end{tabular}

%    \end{macrocode}
%    \begin{macrocode}
\ExplSyntaxOn
  \cs_set:Npn \Ks #1
    {
      \incsyms
      \indexcommand[\string\encone{\string#1}] {#1}
      { \encone{#1} }  & \ttfamily\string#1$^*$
    }
\ExplSyntaxOff
%    \end{macrocode}
%
% This macro is also from the comprehensive and takes
% the symbol command as its only argument. It provides
% |T1| encoding and also adds the command to the index.
% 
%    \begin{macrocode}
\ExplSyntaxOn   
\cs_set:Npn \Kt #1
  {
    \incsyms
    \indexcommand[\string\encone{\string#1}] {#1}
    {\encone{#1}} & \ttfamily \string #1
  }
\ExplSyntaxOff  
%    \end{macrocode}
%
%  \begin{docCommand} {Kv} { \marg{cmd} }
%    T5 encoding
%  \end{docCommand}
%
%    \begin{macrocode}
\def\Kv#1{\incsyms\indexcommand[\string\encfive{\string#1}]{#1}{\encfive{#1}} &\ttfamily\string#1}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\Kgr@opt@arg[#1]#2{\incsyms\indexcommand[\string\encgreek{\string#1}]{#2}{\encgreek{#1}} &\ttfamily\string#2}
  \def\Kgr@no@opt@arg#1{\incsyms\indexcommand[\string\encgreek{\string#1}]{#1}{\encgreek{#1}} &\ttfamily\string#1}
 
\def\Kgr{\@ifnextchar[{\Kgr@opt@arg}{\Kgr@no@opt@arg}}
\def\KN[#1][#2]#3{\incsyms\indexcommand[\string#1]{#3} #1 & #2 & \ttfamily\string#3}
\def\KNbig[#1][#2]#3{\incsyms\indexcommand[\string#2]{#3} #1 & #2 & \ttfamily\string#3}

\def\Knoidx#1{\incsyms#1 &\ttfamily\string#1}
%    \end{macrocode}
%
% \begin{docCommand}{N} {}
%   Big delimiters auxiliary command for doc and index. 
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \N@opt@arg #1 #2 
  {
    \incsyms
    \indexcommand[$\string#1$]{#2}
    $#1$ & $\Big#1$ &\footnotesize\ttfamily\string#2
  }

\cs_set:Npn \N@no@opt@arg#1 
  {
    \incsyms\indexcommand[$\string#1$]{#1}
    $#1$ & $\Big#1$ &\ttfamily\string#1
  }

\NewDocumentCommand {\N} { o m } 
  {
    \IfNoValueTF {#1} 
      { \N@no@opt@arg {#2}  }
      { \N@opt@arg {#1}{#2} }
  }

\ExplSyntaxOff  
%    \end{macrocode}
% \begin{docCommand}{Nn}{\oarg{}\marg{}}  
% \end{docCommand}
%    \begin{macrocode}  
  \def\Nn[#1]#2{%
    \incsyms\indexcommand[$\string\nathdouble\string#1$]{#2}%
    $\nathdouble#1$ & $\nathdouble{\Big#1}$ & \ttfamily\string#2%
 }
    
  \def\Nnt#1[#2]#3{%
    \incsyms\indexcommand{\triple}%
    $\nathtriple#2$ & $\nathtriple{\Big#2}$ &
    \ttfamily\expandafter\string\csname#1triple\endcsname\string#3}
  \def\Np@opt@args[#1]{\@ifnextchar[{\Np@two@opt@args[#1]}{\Np@one@opt@arg[#1]}}
  \def\Np@two@opt@args[#1][#2]#3{\incsyms\index{_=\string#2{} ($\string#1$)}$#1$ & $\Big#1$ &\ttfamily\string#3}
  \def\Np@one@opt@arg[#1]#2{\incsyms\indexpunct[$\string#1$]{#2}$#1$ & $\Big#1$ &\ttfamily\string#2}
  \def\Np@no@opt@args#1{\incsyms\indexpunct[$\string#1$]{#1}$#1$ & $\Big#1$ &\ttfamily\string#1}
  \def\Np{\@ifnextchar[{\Np@opt@args}{\Np@no@opt@args}}
  \def\Nbig[#1]#2{\incsyms\indexcommand[$\string\Big\string#1$]{#2}$#1$ & $\Big#1$ &\ttfamily\string#2}
%    \end{macrocode}
%
%  \begin{docCommand} {Q} {}
%    Used to typeset accents.
% \index{accents}
% \index{accents>acute=acute (\blackacchack\')}   
% \index{accents>arc=arc (\blackacchack\newtie)}
% \index{accents>breve=breve (\blackacchack\u)}   
% \index{accents>caron=caron (\blackacchack\v)}
%  \end{docCommand}
% \begin{macro}{\Q@opt@arg}
%    \begin{macrocode}  
\ExplSyntaxOn
\cs_set:Npn \Q@opt@arg#1#2
  {
    \incsyms\indexaccent[\string\blackacchack{\string#1}]{#2}#1{A}#1{a} &
           \ttfamily\string#2\string{A\string}\string#2\string{a\string}
  }
  
\cs_set:Npn \Q@no@opt@arg#1
  {
    \incsyms\indexaccent[\protect\blackacchack{\string#1}]{#1}#1{A}#1{a} &
    \ttfamily\string#1\string{A\string}\string#1\string{a\string}
  }
           
\NewDocumentCommand {\Q} { o m }
  {
    \IfNoValueTF {#1}
      { \Q@no@opt@arg {#2} }
      { \Q@opt@arg    {#1}{#2} }
  }
\ExplSyntaxOff  
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\newif\ifHARM
\newcommand\HARM{\pkgname{harmony}}
\IfFileExists{harmony.sty}
  {\HARMtrue
   \let\orignewcommand=\newcommand
   \let\newcommand=\DeclareRobustCommand
   %\savesymbol{HH}
   \usepackage{harmony}
   %\restoresymbol{harm}{HH}
   \let\newcommand=\orignewcommand
  }
  {}
%    \end{macrocode}
%\begin{symtable}[HARM]{\HARM\ Musical Accents}
%\idxboth{musical}{symbols}
%\index{accents}
%\label{harmony-accents}
%\begin{tabular}{ll@{\qqquad}ll}
%\Q\Ferli$^*$  & \Q\Ohne$^*$  \\
%\Q\Fermi        & \Q\Umd$^*$   \\
%\Qc\Kr           &              \\
%\end{tabular}
% \end{symtable}
%
% \begin{docCommand}{Qc}{\marg{accent symbol command}}
%   Typesets and indexes accents on two letters (A) and (a), as two tabular cells.
%   Increases the \docCounter{incsyms} counter.
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \Qc#1
  {
    \incsyms
    \indexaccent[\string\blackacc{\string#1}]{#1} #1 {A} #1{a}  &
    \ttfamily
         \string#1
         \token_to_str:N {
            A
         \token_to_str:N }
         \token_to_str:N #1
         \token_to_str:N {
           a
         \token_to_str:N }
  }
\ExplSyntaxOff
%    \end{macrocode}
% \magicequal  and \magicequalname
% \begin{docCommand}{Qe}{\meta{arg1}\meta{arg2}\meta{arg3}}
%    Limited use command to typeset and index |magic symbols|, that is symbols
%    that might confuse MakeIndex and that they are escaped. It is easier to use
%   |text commands|.
%   \example |\Qe[\magicequal][\magicequalname]\=| produces 
%      \begin{tabular}{ll}
%      \Qe[\magicequal][\magicequalname]\=\\
%      \end{tabular}
% 
% \end{docCommand}
%    \begin{macrocode}         
\def\Qe[#1][#2]#3{%
  \incsyms
  \incsyms
  \index{_=\string#2{} (\string\blackacchack{\string#1})}%
  #3{A}#3{a} &
  \ttfamily\string#3\string{A\string}\string#3\string{a\string}}
%    \end{macrocode}
%
%    \begin{macrocode}  
\def\Qt#1{\incsyms\indexaccent[\string\encone{\string\blackacc{\string#1}}]{#1}{\encone{#1{A}#1{a}}} &
          \ttfamily\string#1\string{A\string}\string#1\string{a\string}}
%    \end{macrocode}
%    \begin{macrocode}
\def\Qpc#1#2{\incsyms\indexcommand{#2}{\raisebox{1pt}{\tiny[#1]}} &
             \ttfamily\string#2\string{A\string}\string#2\string{a\string}}
%    \end{macrocode}
%
%    \begin{macrocode}             
\def\Qpfc[#1]#2{\incsyms\indexaccent[\string\encfour{\string\blackacchack{\string#1}}]{#2}\encfour{#1{A}#1{a}} &
           \ttfamily\string#2\string{A\string}\string#2\string{a\string}}
%    \end{macrocode}
%    \begin{macrocode}
\newif\ifFC\FCfalse
\ifFC
  \def\Qiv#1#2{\incsyms\indexaccent[\string\encfour{\string\blackacchack{\string#1}}]{#1}\encfour{#1{A}#1{a}} &
               \ttfamily\string#1\string{A\string}\string#1\string{a\string}$^#2$}
               
  \def\QivBAR#1{\incsyms\index{_=\string\magicVertname{}
                (\string\encfour{\string\blackacchack{\string\FCbar}})}
                \encfour{\FCbar{A}\FCbar{a}} &
                \ttfamily\string\|\string{A\string}\string\|\string{a\string}$^#1$}
\else
  \def\Qiv#1#2{\Qpc{T4}{#1}$^#2$}
  \def\QivBAR#1{\Qpc{T4}{\|}$^#1$}
\fi
%    \end{macrocode}
%    \begin{macrocode}
\newif\ifVIET\VIETfalse
\ifVIET
  \def\Qv#1#2{\incsyms\indexaccent[\string\encfive{\string\blackacchack{\string#1}}]{#1}{\encfive{#1{A}#1{a}}} &
              \ttfamily\string#1\string{A\string}\string#1\string{a\string}$^#2$}
\else
  \def\Qv#1#2{\Qpc{T5}{#1}$^#2$}\def\Qv#1#2{Err}%TODO
\fi
%    \end{macrocode}
%
% \begin{docCommand}{R} { \oarg{ams cmd} \marg {cmd} }
%   Used for variable size math operators
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \R@opt@arg#1#2
  {
    \incsyms
    \indexcommand[$\string#1$]{#2}
     $#1$ & $\displaystyle#1$ &\ttfamily\string#2
  }
 \cs_set:Npn \R@no@opt@arg#1
  {
    \incsyms
    \indexcommand[$\string#1$]{#1}
    $#1$ & $\displaystyle#1$ &\ttfamily\string#1
  }
\NewDocumentCommand {\R} { o m}
  {
    \IfNoValueTF {#1}
      { \R@no@opt@arg {#2}      }
      { \R@opt@arg    {#1} {#2} }
  }
\ExplSyntaxOff
%% T commands
%    \end{macrocode}
%
%
%\idxboth{variable-sized}{symbols}
%\index{integrals}
%\label{ams-large}
%\renewcommand{\arraystretch}{2.5}  % Keep tall symbols from touching.
%\begin{longtable}{l@{$\:$}ll@{\qquad}l@{$\:$}ll}
%\R[\iint]\iint     & \R[\iiint]\iiint       \\
%\R[\iiiint]\iiiint & \R[\idotsint]\idotsint \\
%\end{longtable}
%
%
%
% \begin{docCommand}{indexDing} { \marg{ ding symbol number }}
%   Auxiliary function to index and print in a table ding symbols. originally
%   from Comprehensive.
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\newcommand \indexDing [1] 
  {
    \incsyms
    \indexcommand{\ding}
    \ding{#1} & 
    \footnotesize\ttfamily\string\ding \string{#1\string}
  }
\ExplSyntaxOff
%    \end{macrococode}
%
%    \begin{macrocode}
\def\Tding#1{%
  \incsyms\indexcommand[\ding{#1}]{\ding{#1}}\ding{#1}\indexcommand{\ding} &
  \ttfamily\string\ding\string{#1\string}%
}

\def\Tm#1{\incsyms\indexcommand{\maya}$\mayadigit{#1}$ &\ttfamily\string\maya\string{#1\string}}
\def\Tmoon#1{\incsyms\indexcommand{\MoonPha}\MoonPha{#1} &\ttfamily\string\MoonPha\string{#1\string}}
%    \end{macrocode}
%
% \begin{docCommand}{indexTextcomp} {\oarg{ltx cmd} \marg{symbol arg}}
%   This command typesets its command argument in a table row of two
%   (used for textcomp symbols).
% \end{docCommand}  
% 
%    \begin{macrocode}
\newcommand{\indexTextcomp}[2][]{%
   \incsyms#1 & 
   \indexcommand[#2]{#2}% necessary to put symbol \text
   #2%  
   &\ttfamily\string#2
}
%    \end{macrocode}
%
% \begin{docCommand} {Vp} {}
%  Commands that work both in math and text mode
% \end{docCommand}
%    \begin{macrocode}   
\newcommand{\Vp}[2][]{\incsyms#1 & \indexpunct[$#2$]{#2}#2 &\ttfamily\string#2}
\newcommand{\V}[2][]{\incsyms\indexcommand[#1]{#2}#1 & \indexcommand[#2]{#2}#2 &\ttfamily\string#2}
\newcommand{\Vl}[1]{\incsyms\indexcommand{#1}#1 & & \ttfamily\string#1}
\newcommand{\Vpl}[1]{\incsyms\indexpunct[$#1$]{#1}#1 & & \ttfamily\string#1}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\W@opt@arg[#1]#2#3{%
    \incsyms\indexaccent[$\string\blackacc{\string#1}$]{#2}%
    $#1{#3}$ &\ttfamily\string#2\string{#3\string}}

\def\W@no@opt@arg#1#2{%
    \incsyms\indexaccent[$\string\blackacc{\string#1}$]{#1}%
    $#1{#2}$ &\ttfamily\string#1\string{#2\string}}
    
\def\W{\@ifnextchar[{\W@opt@arg}{\W@no@opt@arg}}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\Wf#1#2{\incsyms\indexcommand{#1}$#1{#2}$ &\ttfamily\string#1\string{#2\string}}
\def\Ww#1#2#3{\incsyms\indexcommand{#2}$#1{#3}$ &\ttfamily\string#2\string{#3\string}}
\def\Wul#1#2#3{%
  \incsyms\indexaccent[$\string\blackacctwo{\string#1}$]{#1}%
  $#1{#2}{#3}$ &\ttfamily\string#1\string{#2\string}\string{#3\string}}
%    \end{macrocode}

% \begin{docCommand}{X} { \oarg{command} \marg{command} }
%   Typesets its arguments as commands and also the resulting symbol in 
%   math. Used for symbol tables in the documentation.
%  \end{docCommand}
%
%\begin{symtable}{AMS Commands Defined to Work in Both Math and Text Mode}
%\index{check marks}
%\label{ams-math-text}
%\begin{tabular}{*2{ll@{\qquad}}ll}
%\X\checkmark & \X\circledR & \X\maltese
%\end{tabular}
%\end{symtable}
%
%
%
% \tcbdocmarginnote{U 25-6-2015}
%    \begin{macrocode}
\ExplSyntaxOn
\def\X_opt_arg#1#2 {\incsyms\indexcommand[$\string#1$]{#2}$#1$ &\ttfamily\string#2}
\def\X@no@opt@arg#1{\incsyms\indexcommand[$\string#1$]{#1}$#1$ &\ttfamily\string#1}

\NewDocumentCommand {\X} { o m}
  {
    \IfNoValueTF{#1}
      { \X@no@opt@arg  {#2}   }
      { \X_opt_arg {#1} {#2}  }
  }
\ExplSyntaxOff  
% \def\X@opt@arg[#1]#2{\incsyms\indexcommand[$\string#1$]{#2}$#1$ &\ttfamily\string#2}
%  \def\X@no@opt@arg#1{\incsyms\indexcommand[$\string#1$]{#1}$#1$ &\ttfamily\string#1}
%  \def\X{\@ifnextchar[{\X@opt@arg}{\X@no@opt@arg}}
%    \end{macrocode}
%
%
% \begin{docCommand}{Y}{\marg{math command}}    
%    \begin{macrocode}
\def\Y#1{\incsyms\indexcommand[$\string\big\string#1$]{#1}$\big#1$ & $\Bigg#1$ &\scriptsize\ttfamily\string#1}
%    \end{macrocode}
% \end{docCommand}
%
%
% \begin{docCommand} {Z} { \marg{arg1} }
%  Typesets and index its arguments.
%\idxboth{log-like}{symbols}
%\index{atomic math objects}
%\index{limits}
%\label{log}
%
%\begin{tabular}{*8l}
%\Z\arccos & \Z\cos  & \Z\csc & \Z\exp & \Z\ker    & \Z\limsup & \Z\min & \Z\sinh \\
%\Z\arcsin & \Z\cosh & \Z\deg & \Z\gcd & \Z\lg     & \Z\ln     & \Z\Pr  & \Z\sup  \\
%\Z\arctan & \Z\cot  & \Z\det & \Z\hom & \Z\lim    & \Z\log    & \Z\sec & \Z\tan  \\
%\Z\arg    & \Z\coth & \Z\dim & \Z\inf & \Z\liminf & \Z\max    & \Z\sin & \Z\tanh
% \end{tabular}
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \Z #1
  {
    \incsyms
    \indexcommand[$\string#1$] {#1}
    \footnotesize
    \ttfamily
    \string #1
  }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {utfviii}  { \meta{void} }
%  Typesets UTF-8.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\utfviii}{\mbox{UTF-8}\index{UTF-8}\xspace}

% Index TeXbook symbols and the CTAN repository.
\newcommand{\idxTBsyms}{%
  \index{symbols>TeXbook=\TeX{}book}% 
  \index{TeXbook, The=\TeX{}book, The>symbols from}%
}
%    \end{macrocode}
%
% \begin{docCommand}{pkgname}{ \marg{package name}}
% Typesets and indexes a \latex package.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\pkgname}[1]{%
  \href{http://ctan.org/pkg/#1}{\bfseries{#1}}%
  \index{#1=\texttt{#1} (package)}%
  \index{packages>#1=\texttt{#1}}
 }
 
\let\pkg\pkgname
\let\Lpack\pkgname

\newcommand*\opt[1]{\texttt{#1}}

\newcommand*\feat[1]{\texttt{#1}}


\newcommand{\optname}[2]{%
  \textsf{#2}%
  \index{#2=\textsf{#2} (\textsf{#1} package option)}%
  \index{package options>#2=\textsf{#2} (\textsf{#1})}}
%    \end{macrocode}
%
% \begin{docCommand}{docClass}{\marg{name of class}}
%   Prints and indexes a \latex class.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\docClass}[1]{%
  \href{http://ctan.org/pkg/#1}{\bfseries{#1}}%
  \index{#1=\texttt{#1} (class)}%
  \index{classes>#1=\texttt{#1}}}

\let\Lpack\pkgname
%    \end{macrocode}
% 
% This macro and all similar macros starting from doc
% typeset their argument and also add the argument to the 
% index.
%
% \begin{docCommand}{docfilename}{ \marg{file name}}
% Typesets and indexes a file name.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\docfilename}[1]{%
  \texttt{#1}
  \index{#1=\phdindexprintcomc{#1}(file)}}
  

\let\docFilename\docfilename  
%    \end{macrocode}
% 
% 
% \begin{docCommand}{docfileextension}{ \marg{file extension}}
% Typesets and indexes a file extension, such as \refCmd{docfileextension}\marg{.tex}  (\docfileextension{.tex}). You type
% the dot if you want it to appear in the index, which is a good idea.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\docfileextension}[1]{%
  \texttt{#1}%
  \index{#1=\texttt{#1} (file extension)}}
   \index{#1=\texttt{#1}}
   
\newcommand{\PSfont}[1]{%
  #1%
  \index{#1 (font)}%
  \index{fonts\index@level#1}%
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\NewDocumentCommand{\person} { m m } {#1\index{#2, #1} #2}
%    \end{macrocode}
%
% \begin{docCommand}{ctan}{\marg{package name}}
% Provides a link to the ctan package repository
% \end{docCommand}
%    \begin{macrocode}
\DeclareRobustCommand\ctan[1]{%
  \textcolor{green}{%
      \href{http://www.ctan.org/pkg/#1} {{\bfseries #1}}%
  \footnote{\protect\url{http://www.ctan.org/pkg/#1}}}
  \index{Packages>#1}%
}
%    \end{macrocode}
%    \begin{macrocode}
\newcommand{\idxCTAN}{%
  \index{Comprehensive TeX Archive Network=Comprehensive \string\TeX{} Archive Network}}
% Typeset a string in various encodings.
\newcommand{\encone}[1]{{\fontencoding{T1}\selectfont#1}}
\newcommand{\encfour}[1]{{\fontencoding{T4}\selectfont#1}}
\newcommand{\encfive}[1]{{\fontencoding{T5}\selectfont#1}}
\newcommand{\encgreek}[1]{{\fontencoding{LGR}\selectfont#1}}

% Various punctuation marks confuse makeindex when used directly.
\let\magicrbrack=]
\let\magicequal=\=
\DeclareRobustCommand{\magicequalname}{\texttt{\string\=}}
\DeclareRobustCommand{\magicvertname}{\texttt{|}}
\DeclareRobustCommand{\magicVertname}{\texttt{\string\|}}

% Vertically center a text-mode symbol.
\newsavebox{\tvcbox}
\newcommand*{\textvcenter}[1]{%
  \savebox{\tvcbox}{#1}%
  \raisebox{0.5\dp\tvcbox}{\raisebox{-0.5\ht\tvcbox}{\usebox{\tvcbox}}}%
}
% Many tables have notes beneath them.  Define an environment in which to
% display such a note, with an optional, superscripted math symbol
% preceding it.
\newenvironment{tablenote}[1][]{
  \makebox[1em]{\ensuremath{^{#1}}}%
  \begin{minipage}[t]{0.75\textwidth}%
  \setlength{\parskip}{2ex}
}{%
  \end{minipage}%
}

% Define various messages we reuse repeatedly.
\newcommand{\twosymbolmessage}{%
  \begin{tablenote}
    Where two symbols are present, the left one is the ``faked'' symbol
    that \latexe provides by default, and the right one is the ``true''
    symbol that \TC\ makes available.
  \end{tablenote}
}

\newcommand{\notpredefinedmessage}{%
  \begin{tablenote}[*]
    Not predefined in \latexe.  Use one of the packages
    \pkgname{latexsym}, \pkgname{amsfonts}, \pkgname{amssymb},
    \pkgname{txfonts}, \pkgname{pxfonts}, or \pkgname{wasysym}.
  \end{tablenote}
}

\newcommand{\notpredefinedmessageABX}{%
  \begin{tablenote}[*]
    Not predefined in \latexe.  Use one of the packages
    \pkgname{latexsym}, \pkgname{amsfonts}, \pkgname{amssymb},
    \pkgname{mathabx}, \pkgname{txfonts}, \pkgname{pxfonts}, or
    \pkgname{wasysym}.
  \end{tablenote}
}

\newcommand{\usetextmathmessage}[1][]{%
  \begin{tablenote}[#1]
    It's generally preferable to use the corresponding symbol from
    \vref{math-text} because the symbols in that table work
    properly in both text mode and math mode.
  \end{tablenote}
}



\newcommand{\usefontcmdmessage}[2]{%
  These symbols must appear either within the argument to \cmd{#1} or
  following the \cmd{#2} font-selection command within a scope%
}
% Define an environment in which to write a single table of symbols.  The
% environment looks a lot like a table, but it doesn't float, and it gets
% an entry in the table of contents as opposed to the list of tables.
%
% The first argument is a conditional.  The table will appear only if
% the value of the conditional is true.  The second argument is the
% table's caption.

\def\fnum@table{\tablename~\thetable}

\newenvironment{symtable}[2][true]{%
  \bgroup
  \expandafter\global\expandafter\let%
    \expandafter\ifshowsymtable\csname if#1\endcsname
  \ifshowsymtable
    \noindent%
    \begin{minipage}[t]{\linewidth}    % Prevent page breaks
    \begin{center}
    \refstepcounter{table}%
    \phantomsection
    \addcontentsline{toc}{subsection}{%
      \protect\numberline{\tablename~\thetable:}{#2}}%
    \@makecaption{\fnum@table}{#2}\medskip
    \let\next=\relax
  \else
    % The following was taken verbatim from verbatim.sty.
    \let\do\@makeother\dospecials\catcode`\^^M\active
    \let\verbatim@startline\relax
    \let\verbatim@addtoline\@gobble
    \let\verbatim@processline\relax
    \let\verbatim@finish\relax
    \let\next=\verbatim@
  \fi
  \next
}{%
  \ifshowsymtable
    \end{center}
    \end{minipage}
    \vskip 8ex minus 2ex
  \fi
  \egroup
}
%    \end{macrocode}
% We need a command that can typeset a symbol in the text and index it by its command name and
% also show the symbol in brackets next to it. 
% \begin{docCommand}{docSymbol}{\oarg{optional explicit formatting}\marg{command}}
% \end{docCommand}
%   \begin{macrocode}
% Display and index a command, but not its symbol (\cmd).  \cmdI shows
% the symbol in the index, with optional explicit formatting.  \cmdX is
% the same as \cmdI, but with the optional argument hardwired to the
% command displayed in math mode.  \cmdW indexes an accent.  \cmdIp is
% also similar to \cmdI but formats its argument with \indexpunct
% instead of \indexcommand.
\ExplSyntaxOn
\newcommand{\docSymbol}[2][]{%
  \def\first@arg{#1}%
  \ifx\first@arg\@empty
    \texttt{\string#2} (#2)%
    \indexcommand[#2]{#2}%
  \else
    \texttt{\string#2} (#2)%
    \indexcommand[#1]{#2}%
  \fi
}
\ExplSyntaxOff
%    \end{macrocode}
%
%
%\begin{symtable}[true]{Fontawsome Currency Symbols}
%\idxboth{currency}{symbols}
%\idxboth{monetary}{symbols}
%\index{euro signs}
%\label{fontawesome-currency}
%\begin{tabular}{*4{ll}ll}
%\K\faBtc & \K\faIls & \K\faKrw & \K\faUsd     \\
%\K\faEur & \K\faInr & \K\faRub & \K\faViacoin \\
%\K\faGbp & \K\faJpy & \K\faTry &              \\
%\end{tabular}
%
%\bigskip
%
%\begin{tablenote}
%   Fontawesome defines \docSymbol[\faBitcoin]{\faBitcoin} as a synonym for \docSymbol{\faBtc};
%  \docSymbol{\faCny}, \docSymbol{\faYen}, and \docSymbol{\faRmb} as synonyms for
%  \docSymbol{faJpy}; \docSymbol{faDollar} as a synonym for \docSymbol{faUsd};
%  \docSymbol{faEuro} as a synonym for \docSymbol{faEur}; \docSymbol{faRouble} and
%  \docSymbol{faRuble} as synonyms for \docSymbol{faRub}; \docSymbol{faRupee} as a
%  synonym for \docSymbol{faInr}; \docSymbol{faShekel} and \docSymbol{faSheqel} as
%  synonyms for \docSymbol{faIls}; \docSymbol{faTurkishLira} as a synonym for
%  \docSymbol{faTry}; and \docSymbol{\faWon} as a synonym for \docSymbol{\faKrw}.
%\end{tablenote}
%\end{symtable}


%    \begin{macrocode}
\newenvironment{nonsymtable}[1]{%
  \begin{table}[htbp]
  \centering
  \caption{#1}\medskip
}{%
  \end{table}
}
   


{
  \global\let\myempty=\@empty
  \global\let\mygobble=\@gobble
  \catcode`\@=12
  \gdef\getridofats#1@#2\relax{%
    \def\getridtest{#2}%
    \ifx\getridtest\myempty%
      \expandafter\def\expandafter\strippedat\expandafter{\strippedat#1}
    \else%
      \expandafter\def\expandafter\strippedat\expandafter{\strippedat#1\protect\printanat}
      \getridofats#2\relax%
    \fi%
  }

  \gdef\removeats#1{%
    \let\strippedat\myempty%
    \edef\strippedtext{\stripcommand#1}%
    \expandafter\getridofats\strippedtext @\relax%
  }
  
  \gdef\stripcommand#1{\expandafter\mygobble\string#1}
}


\def\printanat{\char`\@}

\def\declare{\afterassignment\pgfmanualdeclare\let\next=}
\def\pgfmanualdeclare{\ifx\next\bgroup\bgroup\color{red!75!black}\else{\color{red!75!black}\next}\fi}


\let\textoken=\command
\let\endtextoken=\endcommand

\def\myprintocmmand#1{\texttt{\char`\\#1}}
%    \end{macrocode}
%
% \begin{docCommand}{example}{\marg{void}}
%  A no parameter macro to typeset a one line example, in code.
%  \example This is an example for $\beta$.
%    \begin{macrocode}
\def\example{\par\smallskip\noindent\textit{Example: }}
%    \end{macrocode}
% \end{docCommand}
%
%    \begin{macrocode}
\def\themeauthor{\par\smallskip\noindent\textit{Theme author: }}


\def\indexoption#1{%
  \index{#1@\protect\texttt{#1} option}%
  \index{Graphic options and styles!#1@\protect\texttt{#1}}%
}

\def\itemcalendaroption#1{\item \declare{\texttt{#1}}%
  \index{#1@\protect\texttt{#1} date test}%
  \index{Date tests!#1@\protect\texttt{#1}}%
}
%    \end{macrocode}
% \begin{docEnvironment}{class}{\marg{class}}
% \end{docEnvironment}
%
% \begin{class}{{article}{[10pt,oneside]}}
% \end{class}
%    \begin{macrocode}
\def\class#1{%
  \list{}% 
    {\leftmargin=2em\itemindent-\leftmargin\def\makelabel##1{\hss##1}}%
   \extractclass#1@\par\topsep=0pt
}
\def\endclass{\endlist}

\def\extractclass#1#2@{%
\item{{{\ttfamily\char`\\documentclass}#2{\ttfamily\char`\{\declare{#1}\char`\}}}}%
  \index{#1@\protect\texttt{#1} class}%
  \index{Classes!#1@\protect\texttt{#1}}}



\def\index@prologue{\section*{Index}\addcontentsline{toc}{section}{My Index}
  This index only contains automatically generated entries. A good
  index should also contain carefully selected keywords. This index is
  not a good index.
  \bigskip
}
\@ifundefined{c@IndexColumns}{\newcount\c@IndexColumns}{}
\c@IndexColumns=2
  \def\theindex{\@restonecoltrue
    \columnseprule \z@  \columnsep 29\p@
    \twocolumn[\index@prologue]%
       \parindent -30pt
       \columnsep 15pt
       \parskip 0pt plus 1pt
       \leftskip 30pt
       \rightskip 0pt plus 2cm
       \small
       \def\@idxitem{\par}%
    \let\item\@idxitem \ignorespaces}
  \def\endtheindex{\onecolumn}
\def\noindexing{\let\index=\@gobble}



\newcommand\symarrow[1]{
  \index{#1@\protect\texttt{#1} arrow tip}%
  \index{Arrow tips!#1@\protect\texttt{#1}}
  \texttt{#1}& yields thick  
  \begin{tikzpicture}[arrows={#1-#1},thick,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture} and thin
  \begin{tikzpicture}[arrows={#1-#1},thin,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture}
}

\newcommand\sarrow[2]{
  \index{#1@\protect\texttt{#1} arrow tip}%
  \index{Arrow tips!#1@\protect\texttt{#1}}
  \index{#2@\protect\texttt{#2} arrow tip}%
  \index{Arrow tips!#2@\protect\texttt{#2}}
  \texttt{#1-#2}& yields thick  
  \begin{tikzpicture}[arrows={#1-#2},thick,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture} and thin
  \begin{tikzpicture}[arrows={#1-#2},thin,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1cm,2ex);
    \draw (0pt,.5ex) -- (1cm,.5ex);
  \end{tikzpicture}
}

\newcommand\carrow[1]{
  \index{#1@\protect\texttt{#1} arrow tip}%
  \index{Arrow tips!#1@\protect\texttt{#1}}
  \texttt{#1}& yields for line width 1ex
  \begin{tikzpicture}[arrows={#1-#1},line width=1ex,baseline]
    \useasboundingbox (0pt,-0.5ex) rectangle (1.5cm,2ex);
    \draw (0pt,.5ex) -- (1.5cm,.5ex);
  \end{tikzpicture}
}



\newcommand\plotmarkentry[1]{%
  \index{#1@\protect\texttt{#1} plot mark}%
  \index{Plot marks!#1@\protect\texttt{#1}}
  \texttt{\char`\\pgfuseplotmark\char`\{\declare{#1}\char`\}} &
  \tikz\draw[color=black!25] plot[mark=#1,mark options={fill=examplefill,draw=black}] coordinates{(0,0) (.5,0.2) (1,0) (1.5,0.2)};\\
}
\newcommand\plotmarkentrytikz[1]{%
  \index{#1@\protect\texttt{#1} plot mark}%
  \index{Plot marks!#1@\protect\texttt{#1}}
  \texttt{mark=\declare{#1}} & \tikz\draw[color=black!25]
  plot[mark=#1,mark options={fill=examplefill,draw=black}] 
    coordinates {(0,0) (.5,0.2) (1,0) (1.5,0.2)};\\
}



\ifx\scantokens\@undefined
  \PackageError{phd}{You need to use extended latex
    (elatex) or (pdfelatex) to process this document}{}
\fi

\begingroup
\catcode`|=0
\catcode`[= 1
\catcode`]=2
\catcode`\{=12
\catcode `\}=12
\catcode`\\=12 |gdef|find@example#1\end{codeexample}[|endofcodeexample[#1]]
|endgroup

\begingroup
\catcode`\^=7
\catcode`\^^M=13
\catcode`\ =13%
\gdef\returntospace{\catcode`\ =13\def {\space}\catcode`\^^M=13\def^^M{}}%
\endgroup

\begingroup
\catcode`\%=13
\catcode`\^^M=13
\gdef\commenthandler{\catcode`\%=13\def%{\@gobble@till@return}}
\gdef\@gobble@till@return#1^^M{}
\gdef\@gobble@till@return@ignore#1^^M{\ignorespaces}
\gdef\typesetcomment{\catcode`\%=13\def%{\@typeset@till@return}}
\gdef\@typeset@till@return#1^^M{{\def%{\char`\%}\textsl{\char`\%#1}}\par}
\endgroup

\define@key{codeexample}{width}{\setlength\codeexamplewidth{#1}}
\define@key{codeexample}{graphic}{\colorlet{thecodebackground}{#1}}
\define@key{codeexample}{code}{\colorlet{thecodebackground}{#1}}
\define@key{codeexample}{execute code}{\csname code@execute#1\endcsname}
\define@key{codeexample}{code only}[]{\code@executefalse}
\define@key{codeexample}{pre}{\def\code@pre{#1}}
\define@key{codeexample}{post}{\def\code@post{#1}}
\define@key{codeexample}{vbox}[]{\def\code@pre{\vbox\bgroup\setlength{\hsize}{\linewidth-6pt}}\def\code@post{\egroup}}
\define@key{codeexample}{ignorespaces}[]{\let\@gobble@till@return=\@gobble@till@return@ignore}
\define@key{codeexample}{leave comments}[]{\def\code@catcode@hook{\catcode`\%=12}\let\commenthandler=\relax\let\typesetcomment=\relax}
\def\code@pre{}
\def\code@post{}
\def\code@catcode@hook{}

\newdimen\codeexamplewidth
\newif\ifcode@execute
\newbox\codeexamplebox
\def\codeexample[#1]{%
  \begingroup%
  \code@executetrue
  \setlength\codeexamplewidth{4cm+7pt}
  \setkeys{codeexample}{#1}%
  \parindent0pt
  \begingroup%
  \par%
  \medskip%
  \let\do\@makeother%
  \dospecials%
  \obeylines%
  \@vobeyspaces%
  \catcode`\%=13%
  \catcode`\^^M=13%
  \code@catcode@hook%
  \relax%
  \find@example}
\def\endofcodeexample#1{%
  \endgroup%
  \ifcode@execute%
    \setbox\codeexamplebox=\hbox{%
      {%
        {%
          \returntospace%
          \commenthandler%
          \xdef\code@temp{#1}% removes returns and comments
        }%
        \colorbox{thecodebackground}{\color{black}\ignorespaces%
          \code@pre\expandafter\scantokens\expandafter{\code@temp\ignorespaces}\code@post\ignorespaces}%
      }%
    }%
    \ifdim\wd\codeexamplebox>\codeexamplewidth%
      \def\code@start{\par}%
      \def\code@flushstart{}\def\code@flushend{}%
      \def\code@mid{\parskip2pt\par\noindent}%
      \def\code@width{\linewidth-6pt}%
      \def\code@end{}%
    \else%
      \def\code@start{%
        \linewidth=\textwidth%
        \parshape \@ne 0pt \linewidth
        \leavevmode%
        \hbox\bgroup}%
      \def\code@flushstart{\hfill}%
      \def\code@flushend{\hbox{}}%
      \def\code@mid{\hskip6pt}%
      \def\code@width{\linewidth-12pt-\codeexamplewidth}%
      \def\code@end{\egroup}%
    \fi%
    \code@start%
    \noindent%
    \begin{minipage}[t]{\codeexamplewidth}\raggedright
      \hrule width0pt%
      \small%\vskip-1em%
      \code@flushstart\box\codeexamplebox\code@flushend%
      \vskip-1ex
      \leavevmode%
    \end{minipage}%
  \else%
    \def\code@mid{\par}
    \def\code@width{\linewidth-6pt}
    \def\code@end{}
  \fi%
  \code@mid%  
  \colorbox{thecodebackground}{%
    \begin{minipage}[t]{\code@width}%
      {%
        \let\do\@makeother
        \dospecials
        \frenchspacing\@vobeyspaces
        \normalfont\ttfamily%\footnotesize
        \typesetcomment%
        \@tempswafalse
        \def\par{%
          \if@tempswa
          \leavevmode \null \@@par\penalty\interlinepenalty
          \else
          \@tempswatrue
          \ifhmode\@@par\penalty\interlinepenalty\fi
          \fi}%
        \obeylines
        \everypar \expandafter{\the\everypar \unpenalty}%
        #1}
    \end{minipage}}%
  \code@end%
  \par%
  \medskip
  \end{codeexample}
}

\def\endcodeexample{\endgroup}
%    \end{macrocode}
%
% 
% From pgfplots manual
% 
%    \begin{macrocode}
\long\def\codeexamplenl{\noexpand\par}%
\pgfqkeys{/codeexample}{%
	every codeexample/.style={
		width=3.9cm,
		/pgfplots/every axis/.append style={legend style={fill=thecodebackground}}
	},
	narrow/.style={width=6.9cm},
	%tabsize=4,
	%pre={\begin{minipage}{\linewidth}\begingroup},
	%post={\endgroup\end{minipage}},
	%vbox,
	%newline=\codeexamplenl,
}
%    \end{macrocode}
%
%
%   \begin{docCommand}{keyval}{\meta{key}\meta{options}\meta{text}}

%	The macro \cs{keyval} typesets, key value lists and their options.
%   
%	\verb+|\keyval{test}{\marg{option1|option2|option2|option4}{text}+
%   

%   \keyval{test} {\marg{option1|option2|option2|option4}} { As per this example.}
%
%   \end{docCommand}
%	We first measure the width of the option and not use it (want to make it a bit
%	flexible at a later stage. We also ensure that the catcode of \verb+|+ is set properly
%	in case anyone is using short verbatim commands, as we do in this document.
%
%    \begin{macrocode}
\newlength\temp@cx
\def\keyval{%
  \begingroup
  \catcode`|=11
  \@keyval}
%

\def\@keyval#1#2#3{%
  \settowidth\temp@cx{#1}%
  \parindent-30pt
  \hangindent30pt
  \par\leavevmode%
{\verbatimfont\color{themeta}\bfseries #1}\thinspace=\thinspace#2% 
\hspace*{.5em}#3%
\par\addvspace{1.5pt}%
\endgroup
}
%
%    \end{macrocode}
%  Typesets a sample of bib
%    \begin{macrocode}
\newenvironment{bibsample}
  {\trivlist\samepage
   \setlength{\itemsep}{0pt}}
  {\endtrivlist}
%% doccommands
\newcommand*{\marglistfont}{\itshape}

\newcommand*{\margoptionfont}{\ttfamily}

\newcommand*{\margnotefont}{}

\newcommand*{\optionlistfont}{\bfseries}

\newcommand*{\ltxsyntaxfont}{\ttfamily}

\newcommand*{\ltxsyntaxlabelfont}{\bfseries}

\newcommand*{\changelogfont}{\normalfont}

\newcommand*{\changeloglabelfont}{\bfseries}



%\def\cmd#1{\cs{\expandafter\cmd@to@cs\string#1}}%

%\def\cmd@to@cs#1#2{\char\number`#2\relax}

\newrobustcmd*{\env}[1]{\mbox{\verbatimfont\bfseries\textcolor{thegreen}{#1}}}

\newrobustcmd*{\len}[1]{\mbox{\verbatimfont\textbackslash#1}}

\newrobustcmd*{\cnt}[1]{\mbox{\verbatimfont#1}}

\newlength{\marglistsep}

\newlength{\marglistwidth}

\setlength{\marglistwidth}{(\oddsidemargin+1in)*85/100}%

\deflength{\marglistsep}{10pt}
%% This needs thorough checking as to restore previous definitions
%% of parsep we want parsep to be a bit higher than standard enumerated lists.
\global\newlength\varparsep
\newenvironment*{marglist}
  {\setlength\varparsep{\parsep}\list{}{%
     \parsep 3.5\p@ \@plus0\p@ \@minus\p@
     \setlength{\labelwidth}{\marglistwidth}%
     \setlength{\labelsep}{\marglistsep}%
     \setlength{\leftmargin}{0pt}%
     \renewcommand*{\makelabel}[1]{\hss\marglistfont##1}}}
  {\endlist\setlength\parsep{\varparsep}}

%
\newenvironment*{margoptionslist}
  {\setlength\varparsep{\parsep}\list{}{%
     \parsep 3.5\p@ \@plus0\p@ \@minus\p@
     \setlength{\labelwidth}{\marglistwidth}%
     \setlength{\labelsep}{\marglistsep}%
     \setlength{\leftmargin}{0pt}%
     \renewcommand*{\makelabel}[1]{\hss\margoptionfont\detokenize{##1}}}}
  {\endlist\setlength\parsep{\varparsep}}
  
  
%    \end{macrocode}
%
% \begin{docEnvironment} {keymarglist} { \meta{void} } 
%   Typesets a key options list in the margin.
% \end{docEnvironment}
%
%    \begin{macrocode}
\newenvironment*{keymarglist}
  {\marglist
   \setlength{\itemsep}{0pt}%
   \raggedright}
  {\endmarglist}
% color definitions
\def\cvaref#1{\verbatimfont\textcolor{themacro}{#1}}
% color for options
\def\colOpt#1{\textcolor{theoption}{\verbatimfont\texttt{#1}}}
%    \end{macrocode}
%
% \begin{docCommand}{option}{\marg{option}}
%  Typesets an option. It uses the color \docColor{theoption}, which is defined in the package \pkg{phd-colorpalette}.
%    \begin{macrocode}
\newcommand{\option}[1]{\colOpt{#1}}
%    \end{macrocode}
% \end{docCommand}
%
%  \subsection{Creating a Small Verbatim Environment}
%  This is a modified version from Cambridge classes
%    \begin{macrocode}
\begingroup \catcode `|=0 
\catcode `[= 1
\catcode`]=2 
\catcode `\{=12 
\catcode `\}=12
\catcode`\\=12 
|gdef|@xsmallverbatim#1\end{smallverbatim}[#1|end[smallverbatim]]
|gdef|@sxsmallverbatim#1\end{smallverbatim*}[#1|end[smallverbatim*]]
|endgroup
\def\@smallverbatim{\trivlist \item\relax
  \if@minipage\else\vskip\parskip\fi
  \leftskip\@totalleftmargin\rightskip\z@skip
  \parindent\z@\parfillskip\@flushglue\parskip\z@skip
  \@@par
  \@tempswafalse
  \def\par{%
    \if@tempswa
      \leavevmode \null \@@par\penalty\interlinepenalty
    \else
      \@tempswatrue
      \ifhmode\@@par\penalty\interlinepenalty\fi
    \fi}%
  \let\do\@makeother \dospecials
  \obeylines \small \@noligs%\smallverbatim@font to FIX
  \hyphenchar\font\m@ne
  \everypar \expandafter{\the\everypar \unpenalty}%
}
\def\smallverbatim{\@smallverbatim \frenchspacing\@vobeyspaces \@xsmallverbatim}
\def\endsmallverbatim{\if@newlist \leavevmode\fi\endtrivlist}
\def\smallverbatim@font{\normalfont\smallverbatimsize\ttfamily}
%    \end{macrocode}
% 
% This is a short test. \lorem
%  \begin{smallverbatim}
%  \ifx\bhj
%  \else
%  \fi
%  \end{smallverbatim}
% \lorem
% \begin{docEnvironment}{docCommands}{}
% \end{docEnvironment}
%    \begin{macrocode}
\let\luacmd\docValue
\newenvironment{docCommands}{%
\bgroup
\par
\parindent=0pt
\parskip=3.5pt plus0.5pt
\everypar{\hangindent2em}%
\addvspace\belowdisplayskip\relax}%
{\everypar{}%
 \par
 \vskip\belowdisplayskip\egroup\par}
\long\def\auxm#1(#2);{%
  \def\Xtemp{#1}%
  \def\Ytemp{#2}%
  \parindent=0pt
  \addvspace{1.5pt}%
  \par\leavevmode
  \hangafter=1\relax   \hangindent=1em\relax
  \bgroup  
   \bfseries\sffamily\color{red}\Xtemp\,\color{black}(\textit{\Ytemp})\hskip0.1em
  \egroup
}

   
\newenvironment{docLua}[1]{%
  \auxm#1;
 }{%
\@@par
\smallskip\parindent=1em } 


%    \end{macrocode}
%
% \begin{docCommand}{docFont}{\marg{font name}}
%  Typeset and indexes a font by name, such as \cs{docFont{Arial}} typesetting \docFont{Arial}. 
%    \begin{macrocode}
\DeclareRobustCommand{\phdidxfont}[1]{\index{#1 (font)}\index{Fonts\idx@level #1}}%
\def\docFont#1{
    \enquote{#1} 
    \phdidxfont{#1}%
} 
%    \end{macrocode}
% \end{docCommand}
%
%
% \begin{handler}{.fontweight}{}
%  A handler to handle fontweights. Chooses betwenn.This handler causes the default path to be set to hkeyi. Note that the default path is reset at the beginning of each call to pgfkeys to be equal to \ldots
% TODO remove second parameter as it is not needed. Add index command
% \end{handler}
%    \begin{macrocode}
\newenvironment{handler}[2][]{%
  \begin{phd@manual@entry}%
   \begingroup
   \sffamily\textbf{Key handler} \meta{key}/\bfseries\ttfamily{\color{thered}#2}\color{black}#1
   \endgroup
 \end{phd@manual@entry}
 }
{}

% From egreg's italian latex guide
% \stok takes a \<char> argoment and prints it with its
% category code or the number given as optional argument
\newcommand\stok[2][]{%
  \texttt{#2}\ensuremath{_{%
  \if!#1!
    \the\catcode`#2
  \else
    #1
  \fi}}}
%    \end{macrocode}
% \section {Unicode math index functions}
%
% The functions that follow typeset unicode math tables.
%
%  \begin{docCommand} {showsymbolalpha} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    Indexes and typesets all the alphabetic letters available in math, 
%    mostly greek and the dotless j and i.
%  \end{docCommand}
%
%    \begin{macrocode}
\newcommand\showsymbolalpha[3]
  {
    \par\noindent\hangindent=3em%
    \makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}} 
    \cmd{#1}$^{#3}$
    \indexmathcmd [Math alphabetics] {#1}
  }
%    \end{macrocode}

%  \begin{docCommand} {showsymbol} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%  \end{docCommand}
%    \begin{macrocode}
\newcommand\showsymbol[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}} 
\cmd{#1}$^{#3}$\indexmathcmd [Math ordinary] {#1}}
%    \end{macrocode}
%
%  \begin{docCommand} {showsymbolbin} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%  \end{docCommand}
%    \begin{macrocode}
\newcommand\showsymbolbin[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}} 
\cmd{#1}$^{#3}$\indexmathcmd [Math bin operators] {#1}}
%    \end{macrocode}
%
%  \begin{docCommand} {showrelsymbol} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%  \end{docCommand}
%    \begin{macrocode}
\newcommand\showrelsymbol[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}} 
\cmd{#1}$^{#3}$\indexmathcmd [Math relations] {#1}}
%    \end{macrocode}
%
%  \begin{docCommand} {integralsymbol} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    Typesets and inserts into index integral symbols
%  \end{docCommand}
%    \begin{macrocode}
\newcommand\integralsymbol[3]{\par\noindent\hangindent=3em%
\makebox[2em][l]{$#1$} \makebox[3.5em][l]{\texttt{U+#2}} 
\cmd{#1}$^{#3}$\indexmathcmd [Math integrals] {#1}}
%    \end{macrocode}
%
%  \begin{docCommand} {showop} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    Typesets and inserts into index integral symbols
%  \end{docCommand}
% 
%    \begin{macrocode}
\newcommand\showop[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$#1$\hfill$\displaystyle#1$\hfill}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \cmd{#1}$^{#3}$ 
  \indexmathcmd [Math big operators] {#1} }
%    \end{macrocode}
%
%  \begin{docCommand} {showmbrace} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    Typesets and inserts middle brace symbols
%  \end{docCommand}
% 
%    \begin{macrocode}
\newcommand\showmbrace[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{${#1}{\bigm#1}{\Bigm#1}{\biggm#1}{\Biggm#1}$}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \cmd{#1}$^{#3}$ 
  \indexmathcmd [Math delimiters] {#1}  }
%    \end{macrocode}
%
%  \begin{docCommand} {showlbrace} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    left braces
%  \end{docCommand}
%    \begin{macrocode}
\newcommand\showlbrace[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$\Biggl#1\biggl#1\Bigl#1\bigl#1#1$}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \cmd{#1}$^{#3}$
  [Math delimiters] {#1}
  }
%    \end{macrocode}
%
%  \begin{docCommand} {showrbrace} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    right braces
%  \end{docCommand}
%    \begin{macrocode}
\newcommand\showrbrace[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$#1\bigr#1\Bigr#1\biggr#1\Biggr#1$}
  \makebox[3.5em][l]{\small\texttt{U+#2}} \cmd{#1}$^{#3}$
  [Math delimiters] {#1}
  }
%    \end{macrocode}
%
%  \begin{docCommand} {wide accents} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    wide accents
%  \end{docCommand}
%
%    \begin{macrocode}
\DeclareDocumentCommand \showwideaccent { m m m} {\par\noindent\hangindent=4em%
  \makebox[3em][l]{$#1{xxx}$}\makebox[3.5em][l]{\small\texttt{U+#2}} \cmd{#1}$^{#3}$
  \indexmathcmd [Math accents] {#1{abc}}
  }
%    \end{macrocode}
%
%  \begin{docCommand} {showaccent} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%    right braces
%  \end{docCommand}
%
%    \begin{macrocode}
\DeclareDocumentCommand\showaccent { m m m} {\par\noindent\hangindent=4em%
  \makebox[3em][l]{$#1b$}\makebox[3.5em][l]{\small\texttt{U+#2}} \cmd{#1}$^{#3}$
  \indexmathcmd [Math accents] {#1 b}
  }
%    \end{macrocode}
%
%  \begin{docCommand} {showrover} { \marg{cmd} \marg{unicode point} \marg{note symbol} }
%   
%  \end{docCommand}  
%    \begin{macrocode}  
\newcommand\showover[3]{\par\noindent\hangindent=6em%
  \makebox[5em][l]{$#1{xxxxxx}$}
  \makebox[3.5em][l]{\small\texttt{U+#2}} 
  \cmd{#1}$^{#3}$
  \indexmathcmd [Math over and under brackets] {#1{xxxxxx}}
  }
    
%    \end{macrocode}  
% 
%</DOCUM>
\endinput
%\begin{symtable}[FEYN]{\FEYN\ Feynman Diagram Symbols}
%\index{Feynman-diagram symbols}
%\index{symbols>Feynman diagram}
%\index{particle-physics symbols}
%\index{symbols>particle physics}
%\index{bosons}
%\index{fermions}
%\index{gluons}
%\index{photons}
%\index{proper vertices}
%\index{subatomic particles}
%\label{feyn}
%\renewcommand{\arraystretch}{1.75}  % Keep tall symbols from touching.
%\begin{tabular}{*2{ll@{\qquad}}ll}
%\K\bigbosonloop    & \K\hfermion        & \K\smallbosonloopV \\
%\K\bigbosonloopA   & \K\shfermion       & \K\wfermion        \\
%\K\bigbosonloopV   & \K\smallbosonloop  & \K\whfermion       \\
%\K\gvcropped       & \K\smallbosonloopA &                    \\
%\end{tabular}
%
%\vspace{\baselineskip}
%
%\begin{tabular}{*3{ll@{\qquad}}ll}
%\Kfeyn{a}   & \Kfeyn{fu}  & \Kfeyn{glS} & \Kfeyn{hs} \\
%\Kfeyn{c}   & \Kfeyn{fv}  & \Kfeyn{glu} & \Kfeyn{hu} \\
%\Kfeyn{f}   & \Kfeyn{g}   & \Kfeyn{gu}  & \Kfeyn{m}  \\
%\Kfeyn{fd}  & \Kfeyn{g1}  & \Kfeyn{gv}  & \Kfeyn{ms} \\
%\Kfeyn{fl}  & \Kfeyn{gd}  & \Kfeyn{gvs} & \Kfeyn{p}  \\
%\Kfeyn{flS} & \Kfeyn{gl}  & \Kfeyn{h}   & \Kfeyn{P}  \\
%\Kfeyn{fs}  & \Kfeyn{glB} & \Kfeyn{hd}  & \Kfeyn{x}  \\
%\end{tabular}
%
%\bigskip
%
%\begin{tablenote}
%  All other arguments to the \verb|\feyn| command produce a
%  ``~\feyn{?}~'' symbol.
%
%  The \FEYN\ package provides various commands for composing the
%  preceding symbols into complete Feynman diagrams.  See the \FEYN\
%  documentation for examples and additional information.
%\end{tablenote}
%\end{symtable}
